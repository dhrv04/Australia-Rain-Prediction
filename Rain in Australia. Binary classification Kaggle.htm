<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style type="text/css">svg:not(:root).svg-inline--fa {
  overflow: visible;
}

.svg-inline--fa {
  display: inline-block;
  font-size: inherit;
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.225em;
}
.svg-inline--fa.fa-w-1 {
  width: 0.0625em;
}
.svg-inline--fa.fa-w-2 {
  width: 0.125em;
}
.svg-inline--fa.fa-w-3 {
  width: 0.1875em;
}
.svg-inline--fa.fa-w-4 {
  width: 0.25em;
}
.svg-inline--fa.fa-w-5 {
  width: 0.3125em;
}
.svg-inline--fa.fa-w-6 {
  width: 0.375em;
}
.svg-inline--fa.fa-w-7 {
  width: 0.4375em;
}
.svg-inline--fa.fa-w-8 {
  width: 0.5em;
}
.svg-inline--fa.fa-w-9 {
  width: 0.5625em;
}
.svg-inline--fa.fa-w-10 {
  width: 0.625em;
}
.svg-inline--fa.fa-w-11 {
  width: 0.6875em;
}
.svg-inline--fa.fa-w-12 {
  width: 0.75em;
}
.svg-inline--fa.fa-w-13 {
  width: 0.8125em;
}
.svg-inline--fa.fa-w-14 {
  width: 0.875em;
}
.svg-inline--fa.fa-w-15 {
  width: 0.9375em;
}
.svg-inline--fa.fa-w-16 {
  width: 1em;
}
.svg-inline--fa.fa-w-17 {
  width: 1.0625em;
}
.svg-inline--fa.fa-w-18 {
  width: 1.125em;
}
.svg-inline--fa.fa-w-19 {
  width: 1.1875em;
}
.svg-inline--fa.fa-w-20 {
  width: 1.25em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: 0.3em;
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: 0.3em;
  width: auto;
}
.svg-inline--fa.fa-border {
  height: 1.5em;
}
.svg-inline--fa.fa-li {
  width: 2em;
}
.svg-inline--fa.fa-fw {
  width: 1.25em;
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter {
  background-color: #ff253a;
  border-radius: 1em;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: #fff;
  height: 1.5em;
  line-height: 1;
  max-width: 5em;
  min-width: 1.5em;
  overflow: hidden;
  padding: 0.25em;
  right: 0;
  text-overflow: ellipsis;
  top: 0;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: 0;
  right: 0;
  top: auto;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: 0;
  left: 0;
  right: auto;
  top: auto;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
}

.fa-layers-top-right {
  right: 0;
  top: 0;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-top-left {
  left: 0;
  right: auto;
  top: 0;
  -webkit-transform: scale(0.25);
          transform: scale(0.25);
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.fa-lg {
  font-size: 1.3333333333em;
  line-height: 0.75em;
  vertical-align: -0.0667em;
}

.fa-xs {
  font-size: 0.75em;
}

.fa-sm {
  font-size: 0.875em;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: 2.5em;
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: -2em;
  position: absolute;
  text-align: center;
  width: 2em;
  line-height: inherit;
}

.fa-border {
  border: solid 0.08em #eee;
  border-radius: 0.1em;
  padding: 0.2em 0.25em 0.15em;
}

.fa-pull-left {
  float: left;
}

.fa-pull-right {
  float: right;
}

.fa.fa-pull-left,
.fas.fa-pull-left,
.far.fa-pull-left,
.fal.fa-pull-left,
.fab.fa-pull-left {
  margin-right: 0.3em;
}
.fa.fa-pull-right,
.fas.fa-pull-right,
.far.fa-pull-right,
.fal.fa-pull-right,
.fab.fa-pull-right {
  margin-left: 0.3em;
}

.fa-spin {
  -webkit-animation: fa-spin 2s infinite linear;
          animation: fa-spin 2s infinite linear;
}

.fa-pulse {
  -webkit-animation: fa-spin 1s infinite steps(8);
          animation: fa-spin 1s infinite steps(8);
}

@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.fa-rotate-180 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.fa-rotate-270 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}

.fa-flip-horizontal {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}

.fa-flip-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1);
}

.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1);
}

:root .fa-rotate-90,
:root .fa-rotate-180,
:root .fa-rotate-270,
:root .fa-flip-horizontal,
:root .fa-flip-vertical,
:root .fa-flip-both {
  -webkit-filter: none;
          filter: none;
}

.fa-stack {
  display: inline-block;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: #fff;
}

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.sr-only-focusable:active, .sr-only-focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: 1;
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: 0.4;
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: 0.4;
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: 1;
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse {
  color: #fff;
}</style><style id="react-tooltip">.__react_component_tooltip{border-radius:3px;display:inline-block;font-size:13px;left:-999em;opacity:0;padding:8px 21px;position:fixed;pointer-events:none;transition:opacity 0.3s ease-out;top:-999em;visibility:hidden;z-index:999}.__react_component_tooltip.allow_hover,.__react_component_tooltip.allow_click{pointer-events:auto}.__react_component_tooltip:before,.__react_component_tooltip:after{content:"";width:0;height:0;position:absolute}.__react_component_tooltip.show{opacity:0.9;margin-top:0px;margin-left:0px;visibility:visible}.__react_component_tooltip.type-dark{color:#fff;background-color:#222}.__react_component_tooltip.type-dark.place-top:after{border-top-color:#222;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-dark.place-bottom:after{border-bottom-color:#222;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-dark.place-left:after{border-left-color:#222;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-dark.place-right:after{border-right-color:#222;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-dark.border{border:1px solid #fff}.__react_component_tooltip.type-dark.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-dark.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-dark.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-dark.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-success{color:#fff;background-color:#8DC572}.__react_component_tooltip.type-success.place-top:after{border-top-color:#8DC572;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-success.place-bottom:after{border-bottom-color:#8DC572;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-success.place-left:after{border-left-color:#8DC572;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-success.place-right:after{border-right-color:#8DC572;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-success.border{border:1px solid #fff}.__react_component_tooltip.type-success.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-success.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-success.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-success.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-warning{color:#fff;background-color:#F0AD4E}.__react_component_tooltip.type-warning.place-top:after{border-top-color:#F0AD4E;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-warning.place-bottom:after{border-bottom-color:#F0AD4E;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-warning.place-left:after{border-left-color:#F0AD4E;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-warning.place-right:after{border-right-color:#F0AD4E;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-warning.border{border:1px solid #fff}.__react_component_tooltip.type-warning.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-warning.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-warning.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-warning.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-error{color:#fff;background-color:#BE6464}.__react_component_tooltip.type-error.place-top:after{border-top-color:#BE6464;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-error.place-bottom:after{border-bottom-color:#BE6464;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-error.place-left:after{border-left-color:#BE6464;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-error.place-right:after{border-right-color:#BE6464;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-error.border{border:1px solid #fff}.__react_component_tooltip.type-error.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-error.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-error.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-error.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-info{color:#fff;background-color:#337AB7}.__react_component_tooltip.type-info.place-top:after{border-top-color:#337AB7;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-info.place-bottom:after{border-bottom-color:#337AB7;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-info.place-left:after{border-left-color:#337AB7;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-info.place-right:after{border-right-color:#337AB7;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-info.border{border:1px solid #fff}.__react_component_tooltip.type-info.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-info.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-info.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-info.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-light{color:#222;background-color:#fff}.__react_component_tooltip.type-light.place-top:after{border-top-color:#fff;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-light.place-bottom:after{border-bottom-color:#fff;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-light.place-left:after{border-left-color:#fff;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-light.place-right:after{border-right-color:#fff;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-light.border{border:1px solid #222}.__react_component_tooltip.type-light.border.place-top:before{border-top:8px solid #222}.__react_component_tooltip.type-light.border.place-bottom:before{border-bottom:8px solid #222}.__react_component_tooltip.type-light.border.place-left:before{border-left:8px solid #222}.__react_component_tooltip.type-light.border.place-right:before{border-right:8px solid #222}.__react_component_tooltip.place-top{margin-top:-10px}.__react_component_tooltip.place-top:before{border-left:10px solid transparent;border-right:10px solid transparent;bottom:-8px;left:50%;margin-left:-10px}.__react_component_tooltip.place-top:after{border-left:8px solid transparent;border-right:8px solid transparent;bottom:-6px;left:50%;margin-left:-8px}.__react_component_tooltip.place-bottom{margin-top:10px}.__react_component_tooltip.place-bottom:before{border-left:10px solid transparent;border-right:10px solid transparent;top:-8px;left:50%;margin-left:-10px}.__react_component_tooltip.place-bottom:after{border-left:8px solid transparent;border-right:8px solid transparent;top:-6px;left:50%;margin-left:-8px}.__react_component_tooltip.place-left{margin-left:-10px}.__react_component_tooltip.place-left:before{border-top:6px solid transparent;border-bottom:6px solid transparent;right:-8px;top:50%;margin-top:-5px}.__react_component_tooltip.place-left:after{border-top:5px solid transparent;border-bottom:5px solid transparent;right:-6px;top:50%;margin-top:-4px}.__react_component_tooltip.place-right{margin-left:10px}.__react_component_tooltip.place-right:before{border-top:6px solid transparent;border-bottom:6px solid transparent;left:-8px;top:50%;margin-top:-5px}.__react_component_tooltip.place-right:after{border-top:5px solid transparent;border-bottom:5px solid transparent;left:-6px;top:50%;margin-top:-4px}.__react_component_tooltip .multi-line{display:block;padding:2px 0px;text-align:center}</style>
    
    
    
    
    
        
    
    <script type="text/javascript" async="" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/analytics.js" nonce=""></script><script src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/cbgapi.loaded_0" nonce="" async=""></script><script nonce="" type="text/javascript">
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.getRegistrations()
                .then(function(registrations) {
                    for (let registration of registrations) {
                        registration.unregister();
                    }
                })
                .catch(function(err) {
                    console.error("Service worker unregister failed: ", err);
                });
        }
    </script>
    <script nonce="" type="text/javascript">
        window["pageRequestStartTime"] = 1592468148718;
        window["pageRequestEndTime"] = 1592468149053;
        window["initialPageLoadStartTime"] = new Date().getTime();
    </script>
    <link rel="preconnect" href="https://www.google-analytics.com/" crossorigin="anonymous"><link rel="preconnect" href="https://stats.g.doubleclick.net/"><link rel="preconnect" href="https://js.intercomcdn.com/"><link rel="preconnect" href="https://storage.googleapis.com/"><link rel="preconnect" href="https://apis.google.com/"><link rel="preload" href="https://www.kaggle.com/static/assets/fontawesome-webfont.woff2" as="font" crossorigin="anonymous">
    <link href="https://www.kaggle.com/static/images/favicon.ico" rel="shortcut icon" type="image/x-icon">
    <link rel="manifest" href="https://www.kaggle.com/static/json/manifest.json" crossorigin="use-credentials">
    <link href="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/css.css" rel="stylesheet" type="text/css">
    <link href="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/icon.css" rel="stylesheet" type="text/css">
        <link rel="canonical" href="https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification">
        <link rel="stylesheet" type="text/css" href="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/vendor.css">
        <link rel="stylesheet" type="text/css" href="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/app.css">
    
    
 
        <script nonce="">
        try{(function(a,s,y,n,c,h,i,d,e){d=s.createElement("style");
        d.appendChild(s.createTextNode(""));s.head.appendChild(d);d=d.sheet;
        y=y.map(x => d.insertRule(x + "{ opacity: 0 !important }"));
        h.start=1*new Date;h.end=i=function(){y.forEach(x => x<d.cssRules.length ? d.deleteRule(x) : {})};
        (a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
        })(window,document,['.site-header-react__nav'],'dataLayer',2000,{'GTM-52LNT9S':true});}catch(ex){}
    </script><style></style>
    <script nonce="">
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());
        gtag('config', 'UA-12629138-1', {
            'optimize_id': 'GTM-52LNT9S',
            'displayFeaturesTask': null,
            'send_page_view': false
        });
    </script>
    <script nonce="" async="" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/js"></script>

    
    
    
    
    
    
    
    
    
    


    
    
    <script nonce="" type="application/ld+json">{"@context":"http://schema.org/","@type":"Article","author":{"@type":"Person","name":"naumov1889","sameAs":"/naumov1889"},"headline":"Rain in Australia. Binary classification","url":"https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification","dateModified":"2019-01-17T22:38:24.0566667","datePublished":"2019-01-17T22:38:24.0566667","mainEntityOfPage":{"@type":"WebPage","@id":"https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification"},"publisher":{"@type":"Organization","name":"Kaggle","sameAs":"https://www.kaggle.com","logo":{"type":"ImageObject","url":"https://www.kaggle.com/static/images/site-logo.png"}},"image":["https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg"]}</script>


    
    
    
<script nonce="" type="text/javascript">
    var Kaggle = window.Kaggle || {};

    Kaggle.Current = {
        antiForgeryToken: 'CfDJ8LdUzqlsSWBPr4Ce3rb9VL9gPRSPzeN2sYbcWvman05_SB5v4pieLGinvB7WWnznF2XKnkWEyGYmNx_mjISaZJosRr7DkbsXk39ROAc_xU_21q8CGMkxNaPoKPS14WJMO05LXN21lC9mqNSxWAIoYH8',
        isAnonymous: true,
        analyticsToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1OTI0NjkwNDksIlVzZXJJZCI6MH0.l1oo_WYR3NU4nrk7Bcaxg4vwxdb18MvteoPFqWMbFYU',
        analyticsTokenExpiry: 15,
        
        
        
        
        
        
        mdeImageUploader: true,
        
        enableRapidash: true, 
    }
        Kaggle.Current.log = function(){};
        Kaggle.Current.warn = function(){};

    var decodeUserDisplayName = function () {
        var escapedUserDisplayName = Kaggle.Current.userDisplayNameEscaped || "";
        try {
            var textVersion = new DOMParser().parseFromString(escapedUserDisplayName, "text/html").documentElement.textContent;
            if (textVersion) {
                return textVersion;
            }
        } catch(ex) {}
        return escapedUserDisplayName;
    }
    Kaggle.Current.userDisplayName = decodeUserDisplayName();
</script>

    

<script nonce="" type="text/javascript">
    var Kaggle = window.Kaggle || {};
    Kaggle.PageMessages = [];
</script>

        <script nonce="" type="text/javascript">
/* <![CDATA[ */
goog_snippet_vars = function() {
    var w = window;
    w.google_conversion_id = 955616553;
    w.google_conversion_label = "QSjvCKDksHMQqZrWxwM";
    w.google_conversion_value = 0.00;
    w.google_conversion_currency = "USD";
    w.google_remarketing_only = false;
    w.google_conversion_language = "en";
    w.google_conversion_format = "3";
    w.google_conversion_color = "ffffff";
}
// DO NOT CHANGE THE CODE BELOW.
goog_report_conversion = function(url) {
    goog_snippet_vars();
    window.google_conversion_format = "3";
    var opt = new Object();
    opt.onload_callback = function() {
        if (typeof(url) != 'undefined') {
            window.location = url;
        }
    }
    var conv_handler = window['google_trackConversion'];
    if (typeof(conv_handler) == 'function') {
        conv_handler(opt);
    }
}
/* ]]> */
    </script>
    <script nonce="" type="text/javascript" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/conversion_async.js">
    </script>



        <script nonce="">window['useKaggleAnalytics'] = true;</script>

    <script id="gapi-target" nonce="" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/api.js" defer="defer" async="" gapi_processed="true"></script>
    <script nonce="" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/runtime.js" data-turbolinks-track="reload"></script>
    <script nonce="" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/vendor.js" data-turbolinks-track="reload"></script>
    <script nonce="" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/app.js" data-turbolinks-track="reload"></script>
        <script nonce="" defer="defer" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/stackdriver-errors-concat.js"></script>
        <script nonce="" type="text/javascript">
            function shouldFilterStackdriverError(message) {
                if (message &&
                    /\[ResponseMiddlewares.enforceOk\] response was not ok \| (429|404)/.test(message)) {
                    return true;
                }
                if (!window.navigator || !window.navigator.userAgent ||
                    window.navigator.userAgent.toLowerCase().indexOf("bot") > -1) {
                    return true;
                }
                return false;
            }

            window.addEventListener('DOMContentLoaded', function () {
                var errorHandler = new StackdriverErrorReporter();
                errorHandler.start({
                    key: 'AIzaSyDANGXFHtSIVc51MIdGwg4mQFgm3oNrKoo',
                    projectId: 'kaggle-161607',
                    service: 'web-fe',
                    version: 'ci',
                    context: {
                        user: '0',
                    },
                });
                let sdErrorHandler = window.onerror;
                window.onerror = function(message, source, lineno, colno, error) {
                    if (error && shouldFilterStackdriverError(error.message)) {
                        return true;
                    }
                    return sdErrorHandler(message, source, lineno, colno, error);
                };
                let sdUnhandledRejectionHandler = window.onunhandledrejection;
                window.onunhandledrejection = function(e) {
                    e.preventDefault();
                    if (shouldFilterStackdriverError(e.reason)) {
                        return true;
                    }
                    return sdUnhandledRejectionHandler(e);
                };
            });
        </script>
<style data-styled="active" data-styled-version="5.1.0"></style><script charset="utf-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/2.js"></script><script charset="utf-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/3.js"></script><script charset="utf-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/4.js"></script><script charset="utf-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/14.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.react-json-view .copy-to-clipboard-container{vertical-align:top;display:none}.react-json-view .click-to-add,.react-json-view .click-to-edit,.react-json-view .click-to-remove{display:none}.react-json-view .object-content .variable-row:hover .click-to-edit,.react-json-view .object-content .variable-row:hover .click-to-remove,.react-json-view .object-key-val:hover>span>.object-meta-data>.click-to-add,.react-json-view .object-key-val:hover>span>.object-meta-data>.click-to-remove,.react-json-view .object-key-val:hover>span>.object-meta-data>.copy-to-clipboard-container,.react-json-view .variable-row:hover .copy-to-clipboard-container{display:inline-block}</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><script type="text/javascript" charset="UTF-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/loader_002.js" nonce=""></script><link id="load-css-0" rel="stylesheet" type="text/css" href="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/tooltip.css"><link id="load-css-1" rel="stylesheet" type="text/css" href="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/util.css"><link id="load-css-2" rel="stylesheet" type="text/css" href="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/controls.css"><script type="text/javascript" charset="UTF-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/jsapi_compiled_format_module.js" nonce=""></script><script type="text/javascript" charset="UTF-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/jsapi_compiled_default_module.js" nonce=""></script><script type="text/javascript" charset="UTF-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/jsapi_compiled_ui_module.js" nonce=""></script><script type="text/javascript" charset="UTF-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/jsapi_compiled_corechart_module.js" nonce=""></script><script type="text/javascript" charset="UTF-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/jsapi_compiled_controls_module.js" nonce=""></script><script charset="utf-8" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/75.js"></script><title>Rain in Australia. Binary classification | Kaggle</title><meta charset="utf-8"><meta name="robots" content="index, follow"><meta name="description" content="Explore and run machine learning code with Kaggle Notebooks | Using data from Rain in Australia"><meta name="turbolinks-cache-control" content="no-cache"><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, minimum-scale=1.0"><meta name="theme-color" content="#008ABC"><meta name="og:url" content="https://kaggle.com/naumov1889/rain-in-australia-binary-classification"><meta property="og:title" content="Rain in Australia. Binary classification"><meta property="og:description" content="Explore and run machine learning code with Kaggle Notebooks | Using data from Rain in Australia"><meta property="og:type" content="website"><meta name="og:image" content="https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg"><meta name="twitter:card" content="summary"><meta name="twitter:site" content="@kaggledatasets"></head>
<body data-turbolinks="false"><div id="MathJax_Message" style="display: none;"></div>
    <main>
        






<div id="site-container"><div style="--mdc-theme-on-primary:#fff; --mdc-theme-on-surface:rgba(0, 0, 0, 0.87); --mdc-theme-text-primary-on-background:rgba(0, 0, 0, 0.87); --mdc-theme-text-secondary-on-background:rgba(0, 0, 0, 0.54); --mdc-theme-text-hint-on-background:rgba(0, 0, 0, 0.38); --mdc-theme-text-disabled-on-background:rgba(0, 0, 0, 0.38); --mdc-theme-text-icon-on-background:rgba(0, 0, 0, 0.38); --mdc-theme-primary:#20BEFF; --mdc-theme-error:#F58B8A; --mdc-theme-background:#F8F8F8; --mdc-theme-surface:#F8F8F8; --mdc-theme-primary-bg:#20BEFF; --mdc-theme-secondary-bg:#919294;"><div class="sc-pAwOa FToQS"><div class="sc-pIUfD gAiAth"><div class="sc-qPwwY aevsi"><div class="sc-qXTOB gHoikQ"><button aria-hidden="true" color="rgba(0,0,0,0.5)" sizevalue="24px" role="button" tabindex="0" data-mdc-ripple-is-unbounded="true" class="rmwc-icon google-material-icons sc-fznLPX cdkIzo mdc-ripple-upgraded--unbounded mdc-ripple-upgraded sc-fznLPX cdkIzo mdc-icon-button" style="--mdc-ripple-fg-size:28px; --mdc-ripple-fg-scale:1.7142857142857142; --mdc-ripple-left:10px; --mdc-ripple-top:10px;">menu</button></div><div class="sc-pAkoP dljKyZ"><a href="https://www.kaggle.com/"><img src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/site-logo.png" class="sc-ptEpz elHUAl"></a></div></div></div><div class="sc-pQrUA keqDxd"><div class="sc-pYPmd hcaPMi"><div class="sc-pssnI fGcBXN"><i sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl bSGqIJ sc-qPIWj hwcYNu">search</i><p class="sc-fzoyTs sc-fzoNJl sc-qXFOy gJDLfj">Search</p></div></div><div class="sc-oUnPI iVVzrr"><div class="sc-pcLhl hMTYL"><a href="https://www.kaggle.com/account/login?phase=startSignInTab&amp;returnUrl=%2Fnaumov1889%2Fnotebook%3FscriptVersionId%3D9653374" class="sc-plgXW hFyLSS"><div style="--mdc-theme-on-primary:rgba(255, 255, 255, 1); --mdc-theme-primary:#008ABC;"><button class="sc-fzoYHE CgXPR mdc-ripple-upgraded sc-fzoYHE CgXPR mdc-button"><span class="mdc-button__label">Sign In</span></button></div></a></div><div class="sc-pcLhl hMTYL"><a href="https://www.kaggle.com/account/login?phase=startRegisterTab&amp;returnUrl=%2Fnaumov1889%2Fnotebook%3FscriptVersionId%3D9653374" class="sc-plgXW hFyLSS"><div style="--mdc-theme-on-primary:rgba(255, 255, 255, 1); --mdc-theme-primary:#008ABC;"><button class="sc-fzoYHE CgXPR mdc-ripple-upgraded sc-fzoYHE CgXPR mdc-button mdc-button--unelevated"><span class="mdc-button__label">Register</span></button></div></a></div></div></div></div><div class="sc-qOvoE gLkQYJ"><div class="sc-pcZmk fLYRsF"><div class="sc-plVHf cerIbj"><div class="sc-pssnI fGcBXN"><i sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl bSGqIJ sc-qPIWj hwcYNu">search</i><p class="sc-fzoyTs sc-fzoNJl sc-qXFOy gJDLfj">Search</p></div></div><ul class="sc-qYIQh gWukrV mdc-list"><a href="https://www.kaggle.com/" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">explore</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Home</p></li></a><a href="https://www.kaggle.com/competitions" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><img src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/ic_comps_deselected.svg" class="sc-oVcyR byDmJV"><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Compete</p></li></a><a href="https://www.kaggle.com/datasets" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">table_chart</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Data</p></li></a><a href="https://www.kaggle.com/notebooks" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="#20BEFF" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl grlgcL">code</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi egFaXm">Notebooks</p></li></a><a href="https://www.kaggle.com/discussion" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">comment</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Discuss</p></li></a><a href="https://www.kaggle.com/learn" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">school</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Courses</p></li></a><a class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">expand_more</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">More</p></li></a></ul></div><div class="sc-puFxT ioRaEF"></div></div><div class="sc-qWSGh gVFECi"><div class="sc-pAMRk khcjsd"><div class="sc-qPwwY aevsi"><div class="sc-qXTOB gHoikQ"><button aria-hidden="true" color="rgba(0,0,0,0.5)" sizevalue="24px" role="button" tabindex="0" data-mdc-ripple-is-unbounded="true" class="rmwc-icon google-material-icons sc-fznLPX cdkIzo mdc-ripple-upgraded--unbounded mdc-ripple-upgraded sc-fznLPX cdkIzo mdc-icon-button" style="--mdc-ripple-fg-size:0px; --mdc-ripple-fg-scale:NaN; --mdc-ripple-left:0px; --mdc-ripple-top:0px;">menu</button></div><div class="sc-pAkoP dljKyZ"><a href="https://www.kaggle.com/"><img src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/site-logo.png" class="sc-ptEpz elHUAl"></a></div></div></div><div class="sc-pcZmk fLYRsF"><div class="sc-plVHf cerIbj"><div class="sc-pssnI fGcBXN"><i sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl bSGqIJ sc-qPIWj hwcYNu">search</i><p class="sc-fzoyTs sc-fzoNJl sc-qXFOy gJDLfj">Search</p></div></div><ul class="sc-qYIQh gWukrV mdc-list"><a href="https://www.kaggle.com/" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">explore</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Home</p></li></a><a href="https://www.kaggle.com/competitions" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><img src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/ic_comps_deselected.svg" class="sc-oVcyR byDmJV"><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Compete</p></li></a><a href="https://www.kaggle.com/datasets" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">table_chart</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Data</p></li></a><a href="https://www.kaggle.com/notebooks" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="#20BEFF" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl grlgcL">code</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi egFaXm">Notebooks</p></li></a><a href="https://www.kaggle.com/discussion" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">comment</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Discuss</p></li></a><a href="https://www.kaggle.com/learn" class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">school</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">Courses</p></li></a><a class="sc-pKLCU LdczL"><li class="mdc-list-item sc-pTHXP jYGOEc" role="listitem" tabindex="-1"><i color="rgba(0,0,0,0.5)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl fJpgUt">expand_more</i><p class="sc-fzqARJ sc-fzqNqU sc-qbELi cDmikh">More</p></li></a></ul></div></div><div data-testid="searchContainer" class="sc-pzLqt dmTjph"><div class="sc-qZtVr daJtxz"><div class="sc-pRgDJ fdbkSA"><div class="sc-prrfo elwNsP"><button aria-hidden="true" color="#20BEFF" sizevalue="24px" role="button" tabindex="0" data-mdc-ripple-is-unbounded="true" class="rmwc-icon google-material-icons sc-fznLPX iYcOJi sc-pZdvY bLynKO mdc-ripple-upgraded--unbounded mdc-ripple-upgraded sc-fznLPX iYcOJi sc-pZdvY bLynKO mdc-icon-button" style="--mdc-ripple-fg-size:0px; --mdc-ripple-fg-scale:NaN; --mdc-ripple-left:0px; --mdc-ripple-top:0px;">arrow_back</button><form data-testid="searchInputBarFormElement" class="sc-pbvYO hMYTdE"><input data-testid="searchInputBarInputElement" class="sc-pjumZ iocaEO searchTarget" type="text" size="1"></form></div><div class="sc-qQKeD bSwWwA"><button aria-hidden="true" color="#20BEFF" sizevalue="24px" role="button" tabindex="0" data-mdc-ripple-is-unbounded="true" class="rmwc-icon google-material-icons sc-fznLPX iYcOJi sc-pZdvY sc-oTzgz iCyisc mdc-ripple-upgraded--unbounded mdc-ripple-upgraded sc-fznLPX iYcOJi sc-pZdvY sc-oTzgz iCyisc mdc-icon-button" style="--mdc-ripple-fg-size:0px; --mdc-ripple-fg-scale:NaN; --mdc-ripple-left:0px; --mdc-ripple-top:0px;">search</button><button aria-hidden="true" color="#20BEFF" sizevalue="24px" role="button" tabindex="0" data-mdc-ripple-is-unbounded="true" class="rmwc-icon google-material-icons sc-fznLPX iYcOJi sc-pZdvY bLynKO mdc-ripple-upgraded--unbounded mdc-ripple-upgraded sc-fznLPX iYcOJi sc-pZdvY bLynKO mdc-icon-button" style="--mdc-ripple-fg-size:0px; --mdc-ripple-fg-scale:NaN; --mdc-ripple-left:0px; --mdc-ripple-top:0px;">close</button></div></div></div><div class="sc-pHIdM hETnye"><div class="sc-pbYdQ fyWdiE"><div data-testid="searchInitialPage" class="sc-pkfPC iDckyw"><div class="sc-pBlxj gYSgcm"><p class="sc-fzoyTs sc-fzoNJl sc-psDhf hJJAwm">Trending Searches</p><div class="sc-pRFHb kfZOQo"><li class="mdc-list-item sc-pZCuu htgBjT searchTarget" role="listitem"><div class="sc-oTaid fpeoAN"><i sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl bSGqIJ sc-paWVw jShkAg">trending_up</i></div><div class="sc-qQlgh gHDXpR"><h6 class="sc-fznJRM sc-fznWqX sc-prQdK beVcMP">heart disease</h6></div></li></div><div class="sc-pRFHb kfZOQo"><li class="mdc-list-item sc-pZCuu htgBjT searchTarget" role="listitem"><div class="sc-oTaid fpeoAN"><i sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl bSGqIJ sc-paWVw jShkAg">trending_up</i></div><div class="sc-qQlgh gHDXpR"><h6 class="sc-fznJRM sc-fznWqX sc-prQdK beVcMP">twitter</h6></div></li></div><div class="sc-pRFHb kfZOQo"><li class="mdc-list-item sc-pZCuu htgBjT searchTarget" role="listitem"><div class="sc-oTaid fpeoAN"><i sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl bSGqIJ sc-paWVw jShkAg">trending_up</i></div><div class="sc-qQlgh gHDXpR"><h6 class="sc-fznJRM sc-fznWqX sc-prQdK beVcMP">machine learning</h6></div></li></div></div><div class="sc-pBlxj gYSgcm"><p class="sc-fzoyTs sc-fzoNJl sc-psDhf hJJAwm">Popular Tags</p><div class="sc-pJipy dptwLu"><div class="sc-pJwpB cGhijZ mdc-chip-set"><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">gpu</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">1404115</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">starter code</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">52398</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">tpu</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">38748</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">beginner</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">17901</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">data visualization</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">11828</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">business</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">10047</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">deep learning</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">8530</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">eda</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">7318</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">utility script</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">6792</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">computing</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">6450</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">classification</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">6405</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">tutorial</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">5706</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">arts and entertainment</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">5568</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">natural and physical sciences</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">5159</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">statistics</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">4676</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">computer science</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">4366</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">feature engineering</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">3643</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">data cleaning</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">3367</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">reference</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">3159</span></div></div></button><button tabindex="0" customsize="medium" class="sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-upgraded sc-fzoOEf gNwIFx sc-pbJYR gsdIuB mdc-ripple-surface mdc-chip"><div class="mdc-chip__text"><div class="sc-pRSgm kKcmPp"><p class="sc-fzoyTs sc-fzoNJl sc-qapxP dyYQfM">internet</p><span class="sc-fznzOf sc-fznMnq sc-oTmHo gbiyiJ">3079</span></div></div></button></div></div></div></div></div></div></div><div id="site-content" class="sc-pIITJ gcyuCF"><div class="sc-pRFZy iIPyzR"><div class="sc-AxjAm dVDPh"><div class="sc-AxirZ ezTeoc">We
 use cookies on Kaggle to deliver our services, analyze web traffic, and
 improve your experience on the site. By using Kaggle, you agree to our 
use of cookies.</div><div class="sc-AxiKw kOAUSS"><div class="sc-AxhCb gsXzyw">Got it</div><a href="https://www.kaggle.com/cookies" class="sc-AxhUy fxWvvr"><div class="sc-AxhCb gsXzyw">Learn more</div></a></div></div></div><div id="kernel-container" class="KernelViewer_KernelContainer-sc-pqp17m ghCHNB"><div id="kernel-header-wrapper" class="KernelViewer_HeaderWrapper-sc-8tipmk hKKZMm" style="top: -73px;"><div class="KernelViewerContext_ViewerHeader-sc-1yl2fcg dAVsfH"><span class="KernelViewerContext_PrimaryInfoWrapper-sc-1y8qdg5 yIJPU"><span class="KernelViewerContext_AuthorThumbnailWrapper-sc-jgjas1 ivsRNo"><span class="tooltip-container tooltip-container--left" data-tooltip="Maksim Naumov"><a class="avatar" href="https://www.kaggle.com/naumov1889" style="width: 37px;"><img class="avatar__thumbnail" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/2052128-kg.jpg" alt="Maksim Naumov" style="border-radius: 3.7px;" width="37" height="37"><img class="avatar__tier" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/avatier-contributor2x.png" alt="contributor tier" style="margin-top: 1.85px;" width="37"></a></span><span class="KernelViewerContext_TruncatedCollaboratorsWrapper-sc-1a47ru8 gCKHMa"><span><span class="TruncatedCollaborators_CollaboratorThumbnailWrapper-sc-soe92h dSUapk"></span></span></span></span><span class="KernelViewerContext_TitleBlock-sc-1g6h0vy iBZjQs"><a class="KernelViewerContext_KernelTitle-sc-rdaqnd chqxNN">Rain in Australia. Binary classification</a><br><span class="KernelViewerContext_KernelSubtitle-sc-rltxca esPWpV"><span class="KernelViewerContext_KernelTypeInfo-sc-58vmvn fbzaIp">Python notebook using data from</span><a href="https://www.kaggle.com/jsphyg/weather-dataset-rattle-package" class="KernelViewerContext_DataSourceUrl-sc-q3np7t cQzqHz"> Rain in Australia</a><span> · <span>1,336</span> views</span><span> · <span title="Fri Jan 18 2019 04:08:23 GMT+0530 (India Standard Time)">1y ago</span></span><span class="KernelViewerContext_CategoriesWrapper-sc-1ivezpk duFlJV"><span></span></span></span></span></span><span class="HeaderOptionsContext_CommunityWrapper-sc-1xsfcpi bmgjpa"><span class="KernelVoteButton_VoteButtonWrapper-sc-2bmt8m jkdDhc"><div class="vote-button__container "><div class="vote-button vote-button--compact vote-button--enabled"><div class="vote-button__button vote-button__button--up vb-upvote"><span class="fa fa-angle-up"></span></div><div class="vote-button__button vote-button__button--up vote-button__vote-count-container"><span class="vote-button__vote-count">4</span></div><div class="vote-button__button-placeholder"></div></div></div></span><div class="ForkButton_Wrapper-sc-1t7l405 hBXvia"><span class="ForkButton_JoinedCopyAndEditContainer-sc-lcxjzz gTTnvZ fork-button"><a href="https://www.kaggle.com/kernels/fork-version/9653374" class="button__anchor-wrapper" data-disable-rapidash="false"><div class="button ForkButton_CreateCopyAndEditButton-sc-1dnwfvb fBkpBY"><span><span class="ForkButton_CopyAndEditTextContainer-sc-m90zur sPdHz"><span class="ForkButton_CodeForkIcon-sc-5oak8 cFOFOc fa fa-code-fork"></span> Copy and Edit</span></span></div></a><a class="button__anchor-wrapper" data-disable-rapidash="false"><div class="button ForkButton_CreateCopyAndEditButton-sc-1dnwfvb ForkButton_CopyAndEditCountButton-sc-2wqg9l eOytFf"><span><div>1</div></span></div></a></span></div><span class="HeaderOptionsContext_InlineDropdown-sc-183b1ux eMugJq"><div class="NewsfeedDropdown_DropdownContainer-sc-1t1dgyy kMBvdR"><div class="NewsfeedDropdown_DropdownIconContainer-sc-vzs67v ivhIzp"><span name="ellipsis-h" class="fa fa-ellipsis-h"></span> </div></div></span></span></div><div class="sc-jxKmCM bZExpg"></div></div><div class="KernelViewer_ViewerContent-sc-8uapew krPmHG"><div class="kernel-viewer"><span class="KernelViewer_NavigationSidebarWrapper-sc-m3cp4m elKRpW"><div class="KernelViewerContext_FullNavigationMenu-sc-ht8mmc gkAIMn"><span><div class="VersionsInfoBox_VersionTitle-sc-1a29ina jasGnA">Version 6 of 6</div></span><div class="navbox__container"><div class="navbox__nav-wrapper"><nav class="navbox__nav"><a class="navbox__nav-item--selected" href="https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification/notebook" title="Notebook"><span class="navbox__nav-item-content">Notebook</span></a><div class="navbox__page"><span class="KernelViewerContext_ContentsMenu-sc-1mdi3gb bEocnw"><div class="navbox__container"><div class="navbox__nav-wrapper"><nav class="navbox__nav"><a class="navbox__nav-item" href="#Importing-libraries-and-dataset" title=""><span class="navbox__nav-item-content">Importing libraries and dataset</span></a><a class="navbox__nav-item" href="#Exploring-the-data" title=""><span class="navbox__nav-item-content">Exploring the data</span></a><a class="navbox__nav-item--selected-with-bar" href="#Null-values" title=""><span class="navbox__nav-item-content">Null values</span></a><div class="navbox__page"></div><a class="navbox__nav-item" href="#Split-into-train-and-test" title=""><span class="navbox__nav-item-content">Split into train and test</span></a><a class="navbox__nav-item" href="#Deal-with-categorical-variables" title=""><span class="navbox__nav-item-content">Deal with categorical variables</span></a><a class="navbox__nav-item" href="#Does-Location-affect-the-formation-of-rain?" title=""><span class="navbox__nav-item-content">Does Location affect the formation of rain?</span></a><a class="navbox__nav-item" href="#Does-Date-affect-the-formation-of-rain?" title=""><span class="navbox__nav-item-content">Does Date affect the formation of rain?</span></a><a class="navbox__nav-item" href="#Rescaling" title=""><span class="navbox__nav-item-content">Rescaling</span></a><a class="navbox__nav-item" href="#Visualization-of-how-numerical-variables-impact-on-forming-tomorrow's-rain" title=""><span class="navbox__nav-item-content">Visualization of how numerical variables impact on forming tomorrow's rain</span></a><a class="navbox__nav-item" href="#Collinearity" title=""><span class="navbox__nav-item-content">Collinearity</span></a><a class="navbox__nav-item" href="#Feature-selection" title=""><span class="navbox__nav-item-content">Feature selection</span></a></nav></div></div></span></div><a class="navbox__nav-item" href="https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification/data" title="Input"><span class="navbox__nav-item-content">Input (1)</span></a><a class="navbox__nav-item" href="https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification/execution" title="Execution Info"><span class="navbox__nav-item-content">Execution Info</span></a><a class="navbox__nav-item" href="https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification/log" title="Log"><span class="navbox__nav-item-content">Log</span></a><a class="navbox__nav-item" href="https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification/comments" title="Comments"><span class="navbox__nav-item-content">Comments (3)</span></a></nav></div></div></div></span><div class="kernel-viewer__container"><div class="kernel-viewer__pane-container" id="kernel-viewer__pane-container"><div class="KernelViewer_SubmissionWrapper-sc-13mikru ekeSWA"></div><div id="notebook"><div><div style="display: block;"><div class="sc-jBEKhe eJshSM sc-khSezH hyTLkN"><div class="sc-jxcAmc dFSBVk"><iframe id="rendered-kernel-content" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/__results__.htm" style="height: 20650px; display: block;" scrolling="no" title="Main Kernel Content" class="sc-jHfwpK kvpcRu"></iframe><div style="display: none;" class="sc-jCtRRh iPBuqn"><div _size="medium" class="rmwc-circular-progress rmwc-circular-progress--size-medium rmwc-circular-progress--indeterminate"><svg class="rmwc-circular-progress__circle" viewBox="0 0 24 24"><circle class="rmwc-circular-progress__path" cx="12" cy="12" r="10"></circle></svg></div></div></div></div></div><div class="kernel-code-pane__subtitle" id="notebook-pane-license-info">This Notebook has been released under the <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache 2.0</a> open source license.</div><div class="upvote-suggestion upvote-suggestion__kernel"><div class="upvote-suggestion__text"><div class="upvote-suggestion__main-text">Did you find this Notebook useful?</div><div class="upvote-suggestion__sub-text">Show your appreciation with an upvote</div></div><div class="upvote-suggestion__button"><div class="vote-button__container "><div class="vote-button vote-button--enabled"><div class="vote-button__button vote-button__button--up vb-upvote"><span class="fa fa-caret-up"></span></div><div class="vote-button__button vote-button__button--up vote-button__vote-count-container"><span class="vote-button__vote-count">4</span></div><div class="vote-button__button-placeholder"></div></div></div></div><div class="upvote-suggestion__voters"><div class="upvote-suggestion__voter upvote-suggestion__voter-top"><span class="tooltip-container" data-tooltip="Charlie" data-tooltip-size="small"><a href="https://www.kaggle.com/charliess" class="upvote-suggestion__voter-link"><img src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/2008664-gp.jpg" alt="Charlie" class="upvote-suggestion__voter-img"></a></span></div><div class="upvote-suggestion__voter upvote-suggestion__voter-top"><span class="tooltip-container" data-tooltip="Maksim Naumov" data-tooltip-size="small"><a href="https://www.kaggle.com/naumov1889" class="upvote-suggestion__voter-link"><img src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/2052128-kg.jpg" alt="Maksim Naumov" class="upvote-suggestion__voter-img"></a></span></div><div class="upvote-suggestion__voter upvote-suggestion__voter-top"><span class="tooltip-container" data-tooltip="Jinno123" data-tooltip-size="small"><a href="https://www.kaggle.com/jinno123" class="upvote-suggestion__voter-link"><img src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/default-thumb.png" alt="Jinno123" class="upvote-suggestion__voter-img"></a></span></div><div class="upvote-suggestion__voter upvote-suggestion__voter-more"><span class="tooltip-container" data-tooltip="monojit saha" data-tooltip-size="small"><a href="https://www.kaggle.com/monojitsaha333" class="upvote-suggestion__voter-link"><img src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/default-thumb.png" alt="monojit saha" class="upvote-suggestion__voter-img"></a></span></div></div></div></div></div><div id="data"><div id="data" class="sc-jXaaLW bXPlwC"><div class="sc-kcJjwp bXyaoj"><div class="sc-jDtjIG kBgjci"><div class="sc-jILbMZ CEFA-d"><div class="sc-jYpLcL kjEZdS"><div class="sc-kdYwuo QIWsv"><h6 class="sc-fznJRM sc-fznWqX sc-kjatsh gxQvhM">Input</h6><div class="sc-Axmtr sc-fzoiQi sc-jxSxAa jGCCDP">13.51 MB</div></div><div class="sc-pQGUt halwaH"><div class="sc-pccfi fnvJOQ"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">folder</i></div><p class="sc-fzoyTs sc-fzoNJl sc-psTHQ eaxURr">Data Sources</p></div><ul class="sc-jCUuxT gRAEnm"><ul class="sc-jNFcNp hGqSvd"><div role="button" class="sc-pQGUt sc-jNfkTq rBgEY"><div class="sc-oUfrP eAcghV"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">arrow_drop_down</i></div><div class="sc-pccfi fnvJOQ"><img src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/dataset-thumbnail.jpg" class="sc-qXepu eQZBuA"></div><div class="sc-qZtCU gYnjXV sc-qPhCb sc-kIFXVF buSNwm" data-tip="true" data-for="tooltip_components_51" currentitem="false"><p class="sc-fzoyTs sc-fzoNJl sc-psTHQ eaxURr">Rain in Australia</p><div class="__react_component_tooltip place-top type-dark " id="tooltip_components_51" data-id="tooltip"><div class="sc-pzMyG ejxVHF">Rain in Australia</div></div></div></div><ul class="sc-jIDfPw GlENu"><ul class="sc-jNFcNp hGqSvd"><div role="button" class="sc-pQGUt sc-jNfkTq bbYxWH"><div class="sc-oUfrP vGFlV"></div><div class="sc-pccfi jxLzvg"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">calendar_view_week</i></div><div class="sc-qZtCU gYnjXV sc-qPhCb sc-kIFXVF buSNwm" data-tip="true" data-for="tooltip_components_52" currentitem="false"><p class="sc-fzoyTs sc-fzoNJl sc-psTHQ imwzOD">weatherAUS.csv</p><div class="__react_component_tooltip place-top type-dark " id="tooltip_components_52" data-id="tooltip"><div class="sc-pzMyG ejxVHF">weatherAUS.csv</div></div></div></div></ul></ul></ul></ul></div></div></div><div class="sc-khKJbs WNVwd"><div class="sc-kbKqNe fGcLgW"><div class="sc-kgMqRv cpjzuZ"><h5 class="sc-fzpjYC sc-fznxsB sc-jxBCLY ddlUvN">weatherAUS.csv<span class="sc-jMGyTX egBTBy">(13.51 MB)</span></h5><div class="sc-qZtCU gYnjXV" data-tip="true" data-for="tooltip_components_53" currentitem="false"><i color="rgba(0,0,0,0.7)" sizevalue="24px" class="rmwc-icon google-material-icons sc-AxgMl dhwzZD sc-kIybTg njFBe">get_app</i><div class="__react_component_tooltip place-top type-dark " id="tooltip_components_53" data-id="tooltip"><div class="sc-pzMyG ejxVHF">Download</div></div></div></div><div class="sc-jCDCQp fGTbmi"><div class="sc-oUGow iDaUIv"><div class="sc-pcClZ jLufWo"><nav style="--mdc-theme-on-primary:rgba(255, 255, 255, 1); --mdc-theme-primary:#008ABC;" class="sc-oVeUv gqllrd mdc-tab-bar"><div class="mdc-tab-scroller"><div class="mdc-tab-scroller__scroll-area--scroll mdc-tab-scroller__scroll-area" style="margin-bottom: -17px;"><div class="mdc-tab-scroller__scroll-content"><button class="sc-pdbHO glcrVw sc-pkwNG bCUZoV mdc-tab--active mdc-ripple-upgraded sc-pdbHO glcrVw sc-pkwNG bCUZoV mdc-tab--active mdc-tab" aria-selected="true" tabindex="0"><div class="mdc-tab__content"><span class="mdc-tab__text-label">Detail</span><span class="mdc-tab-indicator mdc-tab-indicator--active"><span aria-hidden="true" class="mdc-tab-indicator__content mdc-tab-indicator__content--underline"></span></span></div><div class="mdc-tab__ripple mdc-ripple-upgraded"></div></button><button class="sc-pdbHO glcrVw sc-pkwNG jyUEmh mdc-ripple-upgraded sc-pdbHO glcrVw sc-pkwNG jyUEmh mdc-tab"><div class="mdc-tab__content"><span class="mdc-tab__text-label">Compact</span><span class="mdc-tab-indicator"><span aria-hidden="true" class="mdc-tab-indicator__content mdc-tab-indicator__content--underline"></span></span></div><div class="mdc-tab__ripple mdc-ripple-upgraded"></div></button><button class="sc-pdbHO glcrVw sc-pkwNG jyUEmh mdc-ripple-upgraded sc-pdbHO glcrVw sc-pkwNG jyUEmh mdc-tab"><div class="mdc-tab__content"><span class="mdc-tab__text-label">Column</span><span class="mdc-tab-indicator"><span aria-hidden="true" class="mdc-tab-indicator__content mdc-tab-indicator__content--underline"></span></span></div><div class="mdc-tab__ripple mdc-ripple-upgraded"></div></button></div></div></div></nav></div><div class="sc-pssLj icIoMw"><div class="sc-qPIyI frFyia"><p class="sc-fzoyTs sc-fzoNJl sc-qXEwl hjbGPm">10 of 24 columns</p><i color="#5F6368" sizevalue="20px" class="rmwc-icon google-material-icons sc-AxgMl bxBAba">keyboard_arrow_down</i></div></div></div></div><div class="sc-pcCJs hwFBLr"><div class="sc-khdiud dgDwTT"><div class="sc-qcnNl iQWfPc"><div class="sc-Axmtr sc-fzoiQi sc-oVmCq dQHEd">About this file</div></div><div class="sc-puBwB sc-qOzpW bqQaaM"><div class="markdown-converter__text--rendered"><p>This dataset contains about 10 years of daily weather observations from numerous Australian weather stations. </p>
<p>The target RainTomorrow means: Did it rain the next day? Yes or No. </p>
<p>Note: You should exclude the variable Risk-MM when training your 
binary classification model.  If you don't exclude it, you will leak the
 answers to your model and reduce its predictability. Read more about it
 <a href="https://www.kaggle.com/jsphyg/weather-dataset-rattle-package/discussion/78316" target="_blank">here</a>.</p></div></div></div><div class="sc-jxkLjq ehkpDI"></div><div class="sc-jxkLjq sc-jCmIhj iFXboV"></div><div class="sc-jHVtyM hVmeIe"><div class="sc-pkwqn eFJaow"><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">calendar_today</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">Date</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">The date of observation </p></div><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">text_format</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">Location</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">The common name of the location of the weather station</p></div><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">text_format</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">MinTemp</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">The minimum temperature in degrees celsius</p></div><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">text_format</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">MaxTemp</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">The maximum temperature in degrees celsius</p></div><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">text_format</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">Rainfall</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">The amount of rainfall recorded for the day in mm</p></div><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">text_format</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">Evaporation</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">The so-called Class A pan evaporation (mm) in the 24 hours to 9am</p></div><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">text_format</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">Sunshine</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">The number of hours of bright sunshine in the day.</p></div><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">text_format</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">WindGustDir</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">The direction of the strongest wind gust in the 24 hours to midnight</p></div><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">text_format</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">WindGustSpeed</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">The speed (km/h) of the strongest wind gust in the 24 hours to midnight</p></div><div class="sc-pstiC sc-jHeIwz eXZomX"><div class="sc-jMxyCG gsvrBl"><i sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bSGqGe">text_format</i><span class="sc-fznzOf sc-fznMnq sc-kJnKmp ksSGcS">WindDir9am</span><i color="#5F6368" sizevalue="18px" class="rmwc-icon google-material-icons sc-AxgMl bxBAgh">sort</i></div><p class="sc-fzoXWK sc-fzpmMD sc-jRqDgO csnNCk">Direction of the wind at 9am</p></div></div></div><div class="sc-jMXqwF ggORqt"><div style="--mdc-theme-on-primary:rgba(255, 255, 255, 1); --mdc-theme-primary:#008ABC;"><button class="sc-fzoYHE CgXPR sc-kNjhor knIAhx mdc-ripple-upgraded sc-fzoYHE CgXPR sc-kNjhor knIAhx mdc-button mdc-button--outlined"><span class="mdc-button__label">Cancel</span></button></div><div style="--mdc-theme-on-primary:rgba(255, 255, 255, 1); --mdc-theme-primary:#008ABC;"><button class="sc-fzoYHE CgXPR sc-kNjhor knIAhx mdc-ripple-upgraded sc-fzoYHE CgXPR sc-kNjhor knIAhx mdc-button mdc-button--unelevated"><span class="mdc-button__label">Save</span></button></div></div><div class="sc-kIhkqy hMEoMT"><div class="sc-pkwqn eFJaow"><div class="sc-pstiC sc-qPIbp sc-oVavC hUMHYS"><div style="height: 70px; width: 100%;"><div id="datetime-chart-dyRnIfv2pOnDWh1vbqnG/versions/eeXoHJgZJWeb1M1xUn5S/files/weatherAUS.csv/columns/nBas6vdC6xwyd27bkQEw" style="height: 70px; width: 100%;" class="sc-pYQgX bbKxJZ"><div style="position: relative;"><div style="position: relative; width: 150px; height: 70px;" dir="ltr"><div style="position: absolute; left: 0px; top: 0px; width: 100%; height: 100%;" aria-label="A chart."><svg width="150" height="70" style="overflow: hidden;" aria-label="A chart."><defs id="_ABSTRACT_RENDERER_ID_140"><clipPath id="_ABSTRACT_RENDERER_ID_141"><rect x="0" y="0" width="150" height="70"></rect></clipPath></defs><rect x="0" y="0" width="150" height="70" stroke="none" stroke-width="0" fill="#ffffff"></rect><g><rect x="0" y="0" width="150" height="70" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><g clip-path="url(https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification/data?scriptVersionId=9653374#_ABSTRACT_RENDERER_ID_141)"><g><rect x="0.5" y="68.3653155761436" width="2" height="1.134684423856399" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="3.5" y="67.59820497973365" width="2" height="1.9017950202663485" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="6.5" y="67" width="2" height="2" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="9.5" y="63" width="2" height="6" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="12.5" y="59" width="2" height="10" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="15.5" y="51" width="2" height="18" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="18.5" y="8" width="2" height="61" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="21.5" y="6" width="2" height="63" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="24.5" y="5" width="2" height="64" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="27.5" y="7" width="2" height="62" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="30.5" y="5" width="2" height="64" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="33.5" y="7" width="2" height="62" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="36.5" y="6" width="2" height="63" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="39.5" y="8" width="2" height="61" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="42.5" y="6" width="2" height="63" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="45.5" y="6" width="2" height="63" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="48.5" y="6" width="2" height="63" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="51.5" y="26" width="2" height="43" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="54.5" y="13" width="2" height="56" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="57.5" y="7" width="2" height="62" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="60.5" y="6" width="2" height="63" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="63.5" y="7" width="2" height="62" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="66.5" y="6" width="2" height="63" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="69.5" y="7" width="2" height="62" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="72.5" y="7" width="2" height="62" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="75.5" y="7" width="2" height="62" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="77.5" y="35" width="2" height="34" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="80.5" y="29" width="2" height="40" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="83.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="86.5" y="2" width="2" height="67" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="89.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="92.5" y="2" width="2" height="67" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="95.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="98.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="101.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="104.5" y="2" width="2" height="67" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="107.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="110.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="113.5" y="4" width="2" height="65" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="116.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="119.5" y="4" width="2" height="65" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="122.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="125.5" y="4" width="2" height="65" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="128.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="131.5" y="2" width="2" height="67" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="134.5" y="1" width="2" height="68" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="137.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="140.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="143.5" y="3" width="2" height="66" stroke="none" stroke-width="0" fill="#007ba8"></rect><rect x="146.5" y="2" width="2" height="67" stroke="none" stroke-width="0" fill="#007ba8"></rect></g><g><rect x="0" y="69" width="150" height="1" stroke="none" stroke-width="0" fill="#333333"></rect></g></g><g></g></g><g></g></svg><div aria-label="A tabular representation of the data in the chart." style="position: absolute; left: -10000px; top: auto; width: 1px; height: 1px; overflow: hidden;"><table><thead><tr><th>DateTime</th><th>Count</th></tr></thead><tbody><tr><td>11/01/2007 - 01/10/2008</td><td>71</td></tr><tr><td>01/10/2008 - 03/20/2008</td><td>119</td></tr><tr><td>03/20/2008 - 05/30/2008</td><td>142</td></tr><tr><td>05/30/2008 - 08/08/2008</td><td>365</td></tr><tr><td>08/08/2008 - 10/18/2008</td><td>560</td></tr><tr><td>10/18/2008 - 12/27/2008</td><td>958</td></tr><tr><td>12/27/2008 - 03/08/2009</td><td>3,106</td></tr><tr><td>03/08/2009 - 05/17/2009</td><td>3,214</td></tr><tr><td>05/17/2009 - 07/27/2009</td><td>3,238</td></tr><tr><td>07/27/2009 - 10/05/2009</td><td>3,170</td></tr><tr><td>10/05/2009 - 12/15/2009</td><td>3,230</td></tr><tr><td>12/15/2009 - 02/23/2010</td><td>3,164</td></tr><tr><td>02/23/2010 - 05/05/2010</td><td>3,188</td></tr><tr><td>05/05/2010 - 07/14/2010</td><td>3,098</td></tr><tr><td>07/14/2010 - 09/23/2010</td><td>3,195</td></tr><tr><td>09/23/2010 - 12/02/2010</td><td>3,195</td></tr><tr><td>12/02/2010 - 02/11/2011</td><td>3,203</td></tr><tr><td>02/11/2011 - 04/22/2011</td><td>2,186</td></tr><tr><td>04/22/2011 - 07/02/2011</td><td>2,837</td></tr><tr><td>07/02/2011 - 09/10/2011</td><td>3,136</td></tr><tr><td>09/10/2011 - 11/20/2011</td><td>3,213</td></tr><tr><td>11/20/2011 - 01/29/2012</td><td>3,174</td></tr><tr><td>01/29/2012 - 04/09/2012</td><td>3,192</td></tr><tr><td>04/09/2012 - 06/18/2012</td><td>3,137</td></tr><tr><td>06/18/2012 - 08/28/2012</td><td>3,129</td></tr><tr><td>08/28/2012 - 11/06/2012</td><td>3,175</td></tr><tr><td>11/06/2012 - 01/15/2013</td><td>1,775</td></tr><tr><td>01/15/2013 - 03/27/2013</td><td>2,028</td></tr><tr><td>03/27/2013 - 06/05/2013</td><td>3,349</td></tr><tr><td>06/05/2013 - 08/15/2013</td><td>3,413</td></tr><tr><td>08/15/2013 - 10/24/2013</td><td>3,357</td></tr><tr><td>10/24/2013 - 01/03/2014</td><td>3,414</td></tr><tr><td>01/03/2014 - 03/14/2014</td><td>3,358</td></tr><tr><td>03/14/2014 - 05/24/2014</td><td>3,351</td></tr><tr><td>05/24/2014 - 08/02/2014</td><td>3,346</td></tr><tr><td>08/02/2014 - 10/12/2014</td><td>3,396</td></tr><tr><td>10/12/2014 - 12/21/2014</td><td>3,335</td></tr><tr><td>12/21/2014 - 03/02/2015</td><td>3,335</td></tr><tr><td>03/02/2015 - 05/11/2015</td><td>3,301</td></tr><tr><td>05/11/2015 - 07/21/2015</td><td>3,340</td></tr><tr><td>07/21/2015 - 09/29/2015</td><td>3,309</td></tr><tr><td>09/29/2015 - 12/09/2015</td><td>3,372</td></tr><tr><td>12/09/2015 - 02/17/2016</td><td>3,299</td></tr><tr><td>02/17/2016 - 04/28/2016</td><td>3,369</td></tr><tr><td>04/28/2016 - 07/07/2016</td><td>3,405</td></tr><tr><td>07/07/2016 - 09/16/2016</td><td>3,454</td></tr><tr><td>09/16/2016 - 11/25/2016</td><td>3,374</td></tr><tr><td>11/25/2016 - 02/04/2017</td><td>3,333</td></tr><tr><td>02/04/2017 - 04/15/2017</td><td>3,359</td></tr><tr><td>04/15/2017 - 06/25/2017</td><td>3,426</td></tr></tbody></table></div></div></div><div style="display: none; position: absolute; top: 80px; left: 160px; white-space: nowrap; font-family: Arial; font-size: 8px;" aria-hidden="true">...</div><div></div></div></div></div><div class="sc-pCMMm ljIxMX"><div class="sc-pKIOL sc-pTEoU kzNmgy">1Nov07</div><div class="sc-pKIOL sc-pTEoU sc-qbArt kMFfqp">25Jun17</div></div></div><div class="sc-pstiC sc-pLtwC cbgGhj"><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_54" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">Canberra</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">2%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_54" data-id="tooltip"><div class="sc-pzMyG ejxVHF">Canberra</div></div></div><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_55" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">Sydney</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">2%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_55" data-id="tooltip"><div class="sc-pzMyG ejxVHF">Sydney</div></div></div><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ bGfBCI">Other (135438)</span><span class="sc-fznzOf sc-fznMnq sc-qOnji hSNnyg">95%</span></div></div><div class="sc-pstiC sc-qPIbp sc-pCYvH exZUTz"><h6 class="sc-fznJRM sc-fznWqX sc-qXETE hoUkIo">390</h6><span class="sc-fznzOf sc-fznMnq sc-pACqk MUrfX">unique values</span></div><div class="sc-pstiC sc-qPIbp sc-pCYvH exZUTz"><h6 class="sc-fznJRM sc-fznWqX sc-qXETE hoUkIo">506</h6><span class="sc-fznzOf sc-fznMnq sc-pACqk MUrfX">unique values</span></div><div class="sc-pstiC sc-pLtwC cbgGhj"><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_56" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">0</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">63%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_56" data-id="tooltip"><div class="sc-pzMyG ejxVHF">0</div></div></div><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_57" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">0.2</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">6%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_57" data-id="tooltip"><div class="sc-pzMyG ejxVHF">0.2</div></div></div><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ bGfBCI">Other (43233)</span><span class="sc-fznzOf sc-fznMnq sc-qOnji hSNnyg">30%</span></div></div><div class="sc-pstiC sc-pLtwC cbgGhj"><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_58" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">NA</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">43%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_58" data-id="tooltip"><div class="sc-pzMyG ejxVHF">NA</div></div></div><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_59" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">4</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">2%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_59" data-id="tooltip"><div class="sc-pzMyG ejxVHF">4</div></div></div><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ bGfBCI">Other (78068)</span><span class="sc-fznzOf sc-fznMnq sc-qOnji hSNnyg">55%</span></div></div><div class="sc-pstiC sc-pLtwC cbgGhj"><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_60" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">NA</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">48%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_60" data-id="tooltip"><div class="sc-pzMyG ejxVHF">NA</div></div></div><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_61" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">0</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">2%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_61" data-id="tooltip"><div class="sc-pzMyG ejxVHF">0</div></div></div><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ bGfBCI">Other (72069)</span><span class="sc-fznzOf sc-fznMnq sc-qOnji hSNnyg">51%</span></div></div><div class="sc-pstiC sc-pLtwC cbgGhj"><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_62" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">W</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">7%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_62" data-id="tooltip"><div class="sc-pzMyG ejxVHF">W</div></div></div><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_63" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">NA</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">7%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_63" data-id="tooltip"><div class="sc-pzMyG ejxVHF">NA</div></div></div><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ bGfBCI">Other (123083)</span><span class="sc-fznzOf sc-fznMnq sc-qOnji hSNnyg">87%</span></div></div><div class="sc-pstiC sc-pLtwC cbgGhj"><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_64" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">NA</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">7%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_64" data-id="tooltip"><div class="sc-pzMyG ejxVHF">NA</div></div></div><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_65" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">35</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">6%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_65" data-id="tooltip"><div class="sc-pzMyG ejxVHF">35</div></div></div><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ bGfBCI">Other (123853)</span><span class="sc-fznzOf sc-fznMnq sc-qOnji hSNnyg">87%</span></div></div><div class="sc-pstiC sc-pLtwC cbgGhj"><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_66" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">N</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">8%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_66" data-id="tooltip"><div class="sc-pzMyG ejxVHF">N</div></div></div><div class="sc-qZtCU gYnjXV sc-qWjlH bFFNXS" data-tip="true" data-for="tooltip_components_67" currentitem="false"><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ hnVMmP">NA</span><span class="sc-fznzOf sc-fznMnq sc-qOnji lcQTOC">7%</span></div><div class="__react_component_tooltip place-bottom type-dark " id="tooltip_components_67" data-id="tooltip"><div class="sc-pzMyG ejxVHF">NA</div></div></div><div class="sc-plRYk kbbrFl"><span class="sc-fznzOf sc-fznMnq sc-ptOaJ bGfBCI">Other (120787)</span><span class="sc-fznzOf sc-fznMnq sc-qOnji hSNnyg">85%</span></div></div></div></div><div><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-01</div><div>Albury</div><div>13.4</div><div>22.9</div><div>0.6</div><div>NA</div><div>NA</div><div>W</div><div>44</div><div>W</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-02</div><div>Albury</div><div>7.4</div><div>25.1</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>44</div><div>NNW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-03</div><div>Albury</div><div>12.9</div><div>25.7</div><div>0</div><div>NA</div><div>NA</div><div>WSW</div><div>46</div><div>W</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-04</div><div>Albury</div><div>9.2</div><div>28</div><div>0</div><div>NA</div><div>NA</div><div>NE</div><div>24</div><div>SE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-05</div><div>Albury</div><div>17.5</div><div>32.3</div><div>1</div><div>NA</div><div>NA</div><div>W</div><div>41</div><div>ENE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-06</div><div>Albury</div><div>14.6</div><div>29.7</div><div>0.2</div><div>NA</div><div>NA</div><div>WNW</div><div>56</div><div>W</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-07</div><div>Albury</div><div>14.3</div><div>25</div><div>0</div><div>NA</div><div>NA</div><div>W</div><div>50</div><div>SW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-08</div><div>Albury</div><div>7.7</div><div>26.7</div><div>0</div><div>NA</div><div>NA</div><div>W</div><div>35</div><div>SSE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-09</div><div>Albury</div><div>9.7</div><div>31.9</div><div>0</div><div>NA</div><div>NA</div><div>NNW</div><div>80</div><div>SE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-10</div><div>Albury</div><div>13.1</div><div>30.1</div><div>1.4</div><div>NA</div><div>NA</div><div>W</div><div>28</div><div>S</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-11</div><div>Albury</div><div>13.4</div><div>30.4</div><div>0</div><div>NA</div><div>NA</div><div>N</div><div>30</div><div>SSE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-12</div><div>Albury</div><div>15.9</div><div>21.7</div><div>2.2</div><div>NA</div><div>NA</div><div>NNE</div><div>31</div><div>NE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-13</div><div>Albury</div><div>15.9</div><div>18.6</div><div>15.6</div><div>NA</div><div>NA</div><div>W</div><div>61</div><div>NNW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-14</div><div>Albury</div><div>12.6</div><div>21</div><div>3.6</div><div>NA</div><div>NA</div><div>SW</div><div>44</div><div>W</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-16</div><div>Albury</div><div>9.8</div><div>27.7</div><div>NA</div><div>NA</div><div>NA</div><div>WNW</div><div>50</div><div>NA</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-17</div><div>Albury</div><div>14.1</div><div>20.9</div><div>0</div><div>NA</div><div>NA</div><div>ENE</div><div>22</div><div>SSW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-18</div><div>Albury</div><div>13.5</div><div>22.9</div><div>16.8</div><div>NA</div><div>NA</div><div>W</div><div>63</div><div>N</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-19</div><div>Albury</div><div>11.2</div><div>22.5</div><div>10.6</div><div>NA</div><div>NA</div><div>SSE</div><div>43</div><div>WSW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-20</div><div>Albury</div><div>9.8</div><div>25.6</div><div>0</div><div>NA</div><div>NA</div><div>SSE</div><div>26</div><div>SE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-21</div><div>Albury</div><div>11.5</div><div>29.3</div><div>0</div><div>NA</div><div>NA</div><div>S</div><div>24</div><div>SE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-22</div><div>Albury</div><div>17.1</div><div>33</div><div>0</div><div>NA</div><div>NA</div><div>NE</div><div>43</div><div>NE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-23</div><div>Albury</div><div>20.5</div><div>31.8</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>41</div><div>W</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-24</div><div>Albury</div><div>15.3</div><div>30.9</div><div>0</div><div>NA</div><div>NA</div><div>N</div><div>33</div><div>ESE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-25</div><div>Albury</div><div>12.6</div><div>32.4</div><div>0</div><div>NA</div><div>NA</div><div>W</div><div>43</div><div>E</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-26</div><div>Albury</div><div>16.2</div><div>33.9</div><div>0</div><div>NA</div><div>NA</div><div>WSW</div><div>35</div><div>SE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-27</div><div>Albury</div><div>16.9</div><div>33</div><div>0</div><div>NA</div><div>NA</div><div>WSW</div><div>57</div><div>NA</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-28</div><div>Albury</div><div>20.1</div><div>32.7</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>48</div><div>N</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-29</div><div>Albury</div><div>19.7</div><div>27.2</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>46</div><div>NW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-30</div><div>Albury</div><div>12.5</div><div>24.2</div><div>1.2</div><div>NA</div><div>NA</div><div>WNW</div><div>50</div><div>WSW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2008-12-31</div><div>Albury</div><div>12</div><div>24.4</div><div>0.8</div><div>NA</div><div>NA</div><div>W</div><div>39</div><div>WNW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-01</div><div>Albury</div><div>11.3</div><div>26.5</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>56</div><div>W</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-02</div><div>Albury</div><div>9.6</div><div>23.9</div><div>0</div><div>NA</div><div>NA</div><div>W</div><div>41</div><div>WSW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-03</div><div>Albury</div><div>10.5</div><div>28.8</div><div>0</div><div>NA</div><div>NA</div><div>SSE</div><div>26</div><div>SSE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-04</div><div>Albury</div><div>12.3</div><div>34.6</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>37</div><div>SSE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-05</div><div>Albury</div><div>12.9</div><div>35.8</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>41</div><div>ENE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-06</div><div>Albury</div><div>13.7</div><div>37.9</div><div>0</div><div>NA</div><div>NA</div><div>W</div><div>52</div><div>SE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-07</div><div>Albury</div><div>16.1</div><div>38.9</div><div>0</div><div>NA</div><div>NA</div><div>W</div><div>57</div><div>E</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-08</div><div>Albury</div><div>14</div><div>28.3</div><div>0</div><div>NA</div><div>NA</div><div>W</div><div>48</div><div>W</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-09</div><div>Albury</div><div>12.5</div><div>28.4</div><div>0</div><div>NA</div><div>NA</div><div>NE</div><div>37</div><div>SSE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-10</div><div>Albury</div><div>17</div><div>30.8</div><div>0</div><div>NA</div><div>NA</div><div>NE</div><div>37</div><div>NNE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-11</div><div>Albury</div><div>16.9</div><div>32</div><div>0</div><div>NA</div><div>NA</div><div>S</div><div>31</div><div>SSE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-12</div><div>Albury</div><div>17.3</div><div>34.7</div><div>0</div><div>NA</div><div>NA</div><div>SW</div><div>35</div><div>SE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-13</div><div>Albury</div><div>17.2</div><div>37.7</div><div>0</div><div>NA</div><div>NA</div><div>NNW</div><div>35</div><div>SE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-14</div><div>Albury</div><div>17.4</div><div>43</div><div>0</div><div>NA</div><div>NA</div><div>NW</div><div>39</div><div>SSE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-15</div><div>Albury</div><div>19.8</div><div>32.7</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>44</div><div>W</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-16</div><div>Albury</div><div>14.9</div><div>26.7</div><div>0</div><div>NA</div><div>NA</div><div>SW</div><div>56</div><div>WSW</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-17</div><div>Albury</div><div>10.5</div><div>28.4</div><div>0</div><div>NA</div><div>NA</div><div>SE</div><div>33</div><div>SE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-18</div><div>Albury</div><div>11.3</div><div>32.2</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>28</div><div>ENE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-19</div><div>Albury</div><div>13.9</div><div>36.6</div><div>0</div><div>NA</div><div>NA</div><div>WNW</div><div>39</div><div>SSE</div></div></span><span class="sc-fzqAbL sc-fzqMAW dmEdIJ"><div class="sc-pkwqn sc-jSglzX fvRrXB"><div>2009-01-20</div><div>Albury</div><div>18.6</div><div>39.9</div><div>0</div><div>NA</div><div>NA</div><div>NNW</div><div>61</div><div>SSE</div></div></span></div></div></div></div></div></div><div aria-live="assertive" aria-atomic="true" aria-hidden="true" class="sc-pHMfe UwrHp mdc-snackbar mdc-snackbar--leading"><div class="mdc-snackbar__surface"><div role="status" aria-live="polite" class="mdc-snackbar__label"><div style="display: none;"></div></div><div class="mdc-snackbar__actions"></div></div></div></div><div id="output"></div><div id="execution"><div class="kernel-execution-pane"><div class="content-box"><div><div class="content-box__title-bar"><div style="line-height: 46px;" class="ContentBox_Title-sc-6fbrxj hMwprG">Execution Info</div></div></div><div class="content-box__content-section"><div class="kernel-execution-pane__execution-info"><div class="kernel-execution-pane__execution-info-top"><div class="kernel-execution-pane__execution-info-column"><div class="kernel-execution-pane__execution-info-row"><div class="kernel-execution-pane__execution-info-left">Succeeded</div><div class="kernel-execution-pane__execution-info-right">True</div></div><div class="kernel-execution-pane__execution-info-row"><div class="kernel-execution-pane__execution-info-left">Exit Code</div><div class="kernel-execution-pane__execution-info-right">0</div></div><div class="kernel-execution-pane__execution-info-row"><div class="kernel-execution-pane__execution-info-left">Used All Space</div><div class="kernel-execution-pane__execution-info-right">False</div></div><div class="kernel-execution-pane__execution-info-row"><div class="kernel-execution-pane__execution-info-left">Environment</div><div class="kernel-execution-pane__execution-info-right"><a href="https://gcr.io/kaggle-images/python" target="_blank" class="ExecutionPane_DockerLink-sc-fmfkhb jwkRpE">Container Image</a> (<a href="https://github.com/Kaggle/docker-python/blob/master/Dockerfile" target="_blank">Dockerfile</a>)</div></div></div><div class="kernel-execution-pane__execution-info-column"><div class="kernel-execution-pane__execution-info-row"><div class="kernel-execution-pane__execution-info-left">Run Time</div><div class="kernel-execution-pane__execution-info-right">31.8 seconds</div></div><div class="kernel-execution-pane__execution-info-row"><div class="kernel-execution-pane__execution-info-left">Timeout Exceeded</div><div class="kernel-execution-pane__execution-info-right">False</div></div><div class="kernel-execution-pane__execution-info-row"><div class="kernel-execution-pane__execution-info-left">Output Size</div><div class="kernel-execution-pane__execution-info-right">0</div></div><div class="kernel-execution-pane__execution-info-row"><div class="kernel-execution-pane__execution-info-left">Accelerator</div><div class="kernel-execution-pane__execution-info-right">None</div></div></div></div></div></div></div></div></div><div id="log"><div class="kernel-log-pane"><div class="content-box"><div><div class="content-box__title-bar"><div style="line-height: 46px;" class="ContentBox_Title-sc-6fbrxj hMwprG">Log</div><div class="content-box__right-side"><div class="kernel-code-pane__right-section"><a href="data:text/plain;charset=utf-8,%5BNbConvertApp%5D%20Converting%20notebook%20script.ipynb%20to%20html%0A%0A%5BNbConvertApp%5D%20Executing%20notebook%20with%20kernel%3A%20python3%0A%0A%5BNbConvertApp%5D%20Support%20files%20will%20be%20in%20__results___files%2F%0A%5BNbConvertApp%5D%20Making%20directory%20__results___files%0A%0A%5BNbConvertApp%5D%20Making%20directory%20__results___files%0A%5BNbConvertApp%5D%20Making%20directory%20__results___files%0A%5BNbConvertApp%5D%20Making%20directory%20__results___files%0A%5BNbConvertApp%5D%20Making%20directory%20__results___files%0A%5BNbConvertApp%5D%20Making%20directory%20__results___files%0A%5BNbConvertApp%5D%20Making%20directory%20__results___files%0A%5BNbConvertApp%5D%20Making%20directory%20__results___files%0A%5BNbConvertApp%5D%20Making%20directory%20__results___files%0A%0A%5BNbConvertApp%5D%20Writing%20336707%20bytes%20to%20__results__.html%0A" class="kernel-code-pane__download" download="rain-in-australia-binary-classification.log">Download Log</a></div></div></div></div><div class="content-box__content-section"><div class="kernel-log-pane__log"><div><div class="kernel-log-pane__line"><span class="kernel-log-pane__time-column kernel-log-pane__time-column--header">Time</span><span class="kernel-log-pane__line-no-column kernel-log-pane__line-no-column--header">Line #</span><span class="kernel-log-pane__data-column kernel-log-pane__data-column--header">Log Message</span></div><div class="kernel-log-pane__line"><span class="kernel-log-pane__time-column">3.8s</span><span class="kernel-log-pane__line-no-column">1</span><span class="kernel-log-pane__data-column--stderr">[NbConvertApp] Converting notebook script.ipynb to html
</span></div><div class="kernel-log-pane__line"><span class="kernel-log-pane__time-column">3.9s</span><span class="kernel-log-pane__line-no-column">2</span><span class="kernel-log-pane__data-column--stderr">[NbConvertApp] Executing notebook with kernel: python3
</span></div><div class="kernel-log-pane__line"><span class="kernel-log-pane__time-column">31.2s</span><span class="kernel-log-pane__line-no-column">3</span><span class="kernel-log-pane__data-column--stderr">[NbConvertApp] Support files will be in __results___files/
[NbConvertApp] Making directory __results___files
</span></div><div class="kernel-log-pane__line"><span class="kernel-log-pane__time-column">31.2s</span><span class="kernel-log-pane__line-no-column">4</span><span class="kernel-log-pane__data-column--stderr">[NbConvertApp] Making directory __results___files
[NbConvertApp] Making directory __results___files
[NbConvertApp] Making directory __results___files
[NbConvertApp] Making directory __results___files
[NbConvertApp] Making directory __results___files
[NbConvertApp] Making directory __results___files
[NbConvertApp] Making directory __results___files
[NbConvertApp] Making directory __results___files
</span></div><div class="kernel-log-pane__line"><span class="kernel-log-pane__time-column">31.2s</span><span class="kernel-log-pane__line-no-column">5</span><span class="kernel-log-pane__data-column--stderr">[NbConvertApp] Writing 336707 bytes to __results__.html
</span></div><div><div class="kernel-log-pane__line"><span class="kernel-log-pane__time-column">31.2s</span><span class="kernel-log-pane__line-no-column">6</span><span class="kernel-log-pane__data-column"></span></div><div class="kernel-log-pane__line"><span class="kernel-log-pane__time-column">31.2s</span><span class="kernel-log-pane__line-no-column">8</span><span class="kernel-log-pane__data-column--success">Complete. Exited with code 0.</span></div></div></div></div></div></div></div></div><div id="comments"><div class="comment-list"><div class="comment-list__header"><span class="comment-list__title">Comments <span class="comment-list__title-count">(3)</span></span><span class="comment-list__spacer"></span><div class="comment-list__sort-pane-button"><span><span class="comment-list__sortby-label">Sort by</span><div class="Select KaggleSelect Select--single"><div class="Select-control"><div class="Select-multi-value-wrapper" id="react-select-5--value"><div class="Select-placeholder">Select...</div><div aria-expanded="false" aria-owns="" aria-activedescendant="react-select-5--value" aria-disabled="false" class="Select-input" role="combobox" style="border: 0px none; width: 1px; display: inline-block;" tabindex="0"></div></div><span class="Select-arrow-zone"><span class="Select-arrow"></span></span></div></div></span></div></div><div class="comment-list__login-warning">Please <a class="comment-list__link" href="https://www.kaggle.com/account/login?returnUrl=undefined%3FreplyTo%3D78269">sign in</a> to leave a comment.</div><div class="comment-list__comment-linking-spacer"></div><div><div id="459466"><div class="comment-wrapper"><div class="discussion-comment__author"><a class="avatar" href="https://www.kaggle.com/nawapknit" style="width: 40px;"><img class="avatar__thumbnail" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/1012912-kg.jpg" alt="Pawan" style="border-radius: 4px;" width="40" height="40"><img class="avatar__tier" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/avatier-novice2x.png" alt="novice tier" style="margin-top: 2px;" width="40"></a><img class="discussion-comment__medal" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/bronzel1x.png" title="bronze"></div><div class="discussion-comment discussion-comment--parent"><span class="discussion-comment__title"><span class="discussion-comment__title-author-link-wrapper"><a class="discussion-comment__title-author-link" href="https://www.kaggle.com/nawapknit" title="Pawan">Pawan</a></span><span class="discussion-comment__title-element">•</span><span class="discussion-comment__title-element">Posted on Latest Version</span><span class="discussion-comment__title-element">•</span><span class="discussion-comment__title-element"><span title="Tue Jan 22 2019 01:11:31 GMT+0530 (India Standard Time)">a year ago</span></span><span class="discussion-comment__title-element">•</span><a class="discussion-comment__title-element discussion-comment__title-element--link" href="https://www.kaggle.com/account/login?returnUrl=undefined%3FreplyTo%3D459466">Reply</a><span class="discussion-comment__title-element--spacer"></span><div class="vote-button__container "><div class="vote-button vote-button--compact vote-button--enabled vote-button--has-downvote"><div class="vote-button__button vote-button__button--up vb-upvote"><span class="fa fa-angle-up"></span></div><div class="vote-button__button vote-button__button--up vote-button__vote-count-container"><span class="vote-button__vote-count">1</span></div><div class="vote-button__button-placeholder"></div></div></div></span><div class="discussion-comment__body"><div><div class="markdown-converter__text--rendered"><p>I got<br>
Feature: <br>
 maxtemp  rainfall WindGuestSpeed humidity9am  humidity3pm  presuure9am  presuure3pm cloud9am cloud3p  <br>
AUC : 0.862044</p>
<p>do you check VIF and correlation both </p></div><span class=""></span><div class="file-list file-list--compact"></div><div class="file-list file-list--compact"></div></div></div><div class="discussion-comment__replies"><div><div id="463127"><div class="comment-wrapper"><div class="discussion-comment__author"><a class="avatar" href="https://www.kaggle.com/naumov1889" style="width: 40px;"><img class="avatar__thumbnail" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/2052128-kg.jpg" alt="Maksim Naumov" style="border-radius: 4px;" width="40" height="40"><img class="avatar__tier" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/avatier-contributor2x.png" alt="contributor tier" style="margin-top: 2px;" width="40"></a></div><div class="discussion-comment"><span class="discussion-comment__title"><span class="discussion-comment__title-author-link-wrapper"><a class="discussion-comment__title-author-link discussion-comment__title-author-link--topic-author" href="https://www.kaggle.com/naumov1889" title="Maksim Naumov">Maksim Naumov</a></span><span class="discussion-comment__title-poster-badge discussion-comment__title-poster-badge--topic-author">Kernel Author</span><span class="discussion-comment__title-element">•</span><span class="discussion-comment__title-element">Posted on Latest Version</span><span class="discussion-comment__title-element">•</span><span class="discussion-comment__title-element"><span title="Tue Jan 29 2019 18:54:50 GMT+0530 (India Standard Time)">a year ago</span></span><span class="discussion-comment__title-element">•</span><a class="discussion-comment__title-element discussion-comment__title-element--link" href="https://www.kaggle.com/account/login?returnUrl=undefined%3FreplyTo%3D459466">Reply</a><span class="discussion-comment__title-element--spacer"></span><div class="vote-button__container "><div class="vote-button vote-button--compact vote-button--enabled vote-button--has-downvote"><div class="vote-button__button vote-button__button--up vb-upvote"><span class="fa fa-angle-up"></span></div><div class="vote-button__button vote-button__button--up vote-button__vote-count-container"><span class="vote-button__vote-count">0</span></div><div class="vote-button__button-placeholder"></div></div></div></span><div class="discussion-comment__body"><div><div class="markdown-converter__text--rendered"><p>Hi, Pawan. Thank you for your comment.  <br><br>
I dropped <strong>cloud9am</strong> and <strong>cloud3pm</strong> because about 40% of the data in these columns is missed. <br>
For feature selection all I used was <strong>LogisticRegression.coef_</strong> which showed that <strong>Pressure3pm, WindGustSpeed, Pressure9am, Humidity3pm</strong> have much more impact on the target variable than the other variables including <strong>MaxTemp</strong> and <strong>rainfall</strong>. </p></div><span class=""></span><div class="file-list file-list--compact"></div><div class="file-list file-list--compact"></div></div></div></div></div></div></div><div class="discussion-comment__linking-line"></div></div></div></div></div></div><div class="comment-list__comment-linking-spacer"></div><div><div id="781210"><div class="comment-wrapper"><div class="discussion-comment__author"><a class="avatar" href="https://www.kaggle.com/venkatraghavan1987" style="width: 40px;"><img class="avatar__thumbnail" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/default-thumb.png" alt="Venkatraghavan" style="border-radius: 4px;" width="40" height="40"><img class="avatar__tier" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/avatier-novice2x.png" alt="novice tier" style="margin-top: 2px;" width="40"></a></div><div class="discussion-comment"><span class="discussion-comment__title"><span class="discussion-comment__title-author-link-wrapper"><a class="discussion-comment__title-author-link" href="https://www.kaggle.com/venkatraghavan1987" title="Venkatraghavan">Venkatraghavan</a></span><span class="discussion-comment__title-element">•</span><span class="discussion-comment__title-element">Posted on Latest Version</span><span class="discussion-comment__title-element">•</span><span class="discussion-comment__title-element"><span title="Sat Mar 21 2020 08:52:35 GMT+0530 (India Standard Time)">3 months ago</span></span><span class="discussion-comment__title-element">•</span><a class="discussion-comment__title-element discussion-comment__title-element--link" href="https://www.kaggle.com/account/login?returnUrl=undefined%3FreplyTo%3D781210">Reply</a><span class="discussion-comment__title-element--spacer"></span><div class="vote-button__container "><div class="vote-button vote-button--compact vote-button--enabled vote-button--has-downvote"><div class="vote-button__button vote-button__button--up vb-upvote"><span class="fa fa-angle-up"></span></div><div class="vote-button__button vote-button__button--up vote-button__vote-count-container"><span class="vote-button__vote-count">0</span></div><div class="vote-button__button-placeholder"></div></div></div></span><div class="discussion-comment__body"><div><div class="markdown-converter__text--rendered"><p>I
 have a question here. Does it make sense using average (in pivot table)
 for categorical variables? Section: Impact of Categorial variables on 
tomorrow's rain.</p></div><span class=""></span><div class="file-list file-list--compact"></div><div class="file-list file-list--compact"></div></div></div></div></div></div></div><div class="comment-list__comment-linking-spacer"></div></div></div></div></div><div class="KernelViewer_EmptyColumn-sc-1ubq290 hTXhVJ"></div></div></div><span class="KernelViewer_NavigationFooterWrapper-sc-wrdi08 igLevt"><div class="StickyFooter-sc-17zvw1m fxFNDA"><nav class="NavBoxFooter_NavigationBar-sc-fpq4iw eBMKZz"><a href="https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification/notebook" title="Notebook" class="NavBoxFooter_NavigationElement-sc-1a4m5yz NavBoxFooter_SelectedNavigationElement-sc-128c1nx fhmScz"><div><span name="book" size="20" class="fa fa-book fa-stack-20x"></span></div><div class="NavBoxFooter_NavigationText-sc-p8ascv eYbBJp">Notebook</div></a><a href="https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification/data" title="Input" class="NavBoxFooter_NavigationElement-sc-1a4m5yz gLiAfK"><div><span name="table" size="20" class="fa fa-table fa-stack-20x"></span></div><div class="NavBoxFooter_NavigationText-sc-p8ascv eYbBJp">Input</div></a><a href="https://www.kaggle.com/naumov1889/rain-in-australia-binary-classification/comments" title="Comments" class="NavBoxFooter_NavigationElement-sc-1a4m5yz gLiAfK"><div><span name="comment" size="20" class="fa fa-comment fa-stack-20x"></span></div><div class="NavBoxFooter_NavigationText-sc-p8ascv eYbBJp">Comments</div></a></nav><div class="navbox__page"></div></div></span></div><div class="sc-oTaAA fAxOLg"></div><div id="site-body" class="">
    



<div data-component-name="KernelViewer" style="display: flex; flex-direction: column; flex: 1 0 auto;"></div><script class="kaggle-component" nonce="">var Kaggle=window.Kaggle||{};Kaggle.State=Kaggle.State||[];Kaggle.State.push({"kernel":{"id":2584329,"title":"Rain in Australia. Binary classification","forkParent":null,"currentRunId":9653374,"mostRecentRunId":9653374,"url":"/naumov1889/rain-in-australia-binary-classification","tags":[],"commentCount":0,"upvoteCount":4,"viewCount":1336,"forkCount":1,"bestPublicScore":null,"author":{"id":2052128,"displayName":"Maksim Naumov","email":null,"editedEmail":null,"editedEmailCode":null,"userName":"naumov1889","thumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg","profileUrl":"/naumov1889","registerDate":"0001-01-01T00:00:00Z","lastVisitDate":"0001-01-01T00:00:00Z","statusId":0,"performanceTier":1,"userRoles":null,"userLogins":null,"groupIds":null,"duplicateUsers":null,"hasPhoneVerifications":false,"failedNerdchas":0,"hasPendingNerdcha":false,"deleteRequests":null,"userAttributes":null,"isAdmin":false,"isKaggleBot":false,"isAnonymous":false,"canAct":false,"canBeSeen":false,"thumbnailName":null,"isPhoneVerified":false},"isPrivate":false,"updatedTime":"2019-01-17T22:38:24.0566667Z","selfLink":"/kernels/2584329","pinnedDockerImageVersionId":null,"dockerImagePinningType":"original","originalDockerImageId":null,"isLanguageTemplate":false,"medal":null,"topicId":78269,"readGroupId":null,"writeGroupId":null,"slug":"rain-in-australia-binary-classification","hasUsedAccelerator":null,"pinnedSessionId":null,"disableComments":false,"hasLinkedSubmission":false},"kernelBlob":{"id":168753032,"settings":{"dockerImageVersionId":null,"dataSources":[{"sourceType":"DatasetVersion","sourceId":198179,"databundleVersionId":null,"mountSlug":null}],"sourceType":"notebook","language":"python","accelerator":"none","isInternetEnabled":false},"source":"{\u0022cells\u0022:[{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002231b2ed2e19ecb0c7f8ac86af880eb5520f7dbdea\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The content is daily weather observations from numerous Australian weather stations.\\n\\nThe target RainTomorrow means: Did it rain the next day? Yes or No.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022dfb8c6b9ad699dc1784fdbde84ef3b50db086c10\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Importing libraries and dataset\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022318f7ab54147832d30f8ed0a6120c4f1fca771ff\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022import pandas as pd\\nimport matplotlib.pyplot as plt\\nimport numpy as np\\nimport warnings\\nwarnings.filterwarnings(\u0027ignore\u0027)\\n\\ndata = pd.read_csv(\u0027../input/weatherAUS.csv\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00221ec9633a0249b6bae5517596f6c8c036de6de6ab\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Exploring the data\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022e51ddc36362266a75afc6dde97ea7998b7eb5f0f\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.shape\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022d7eaf8348da124c92e8578683f37822f80d28ffa\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.columns\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022be6d1803bc36fa19c9d12e86121c3b4c6454f36c\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.info()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022scrolled\u0022:true,\u0022_uuid\u0022:\u0022ea97dc7003cd33e4948ba24bd9ced7438a43ab12\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002260b8dd9750ef63186e303095114d6778c26ae049\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The dataset has below columns :\\n*  **DateThe** — date of observation\\n*  **Location** — The common name of the location of the weather station\\n*  **MinTemp** — The minimum temperature in degrees celsius\\n*  **MaxTemp** — The maximum temperature in degrees celsius\\n*  **Rainfall** — The amount of rainfall recorded for the day in mm\\n*  **Evaporation** — The so-called Class A pan evaporation (mm) in the 24 hours to 9am\\n*  **Sunshine** — The number of hours of bright sunshine in the day.\\n*  **WindGustDir** — The direction of the strongest wind gust in the 24 hours to midnight\\n*  **WindGustSpeed** — The speed (km/h) of the strongest wind gust in the 24 hours to midnight\\n*  **WindDir9am** — Direction of the wind at 9am\\n*  **WindDir3pm** — Direction of the wind at 3pm\\n*  **WindSpeed9am** — Wind speed (km/hr) averaged over 10 minutes prior to 9am\\n*  **WindSpeed3pm** — Wind speed (km/hr) averaged over 10 minutes prior to 3pm\\n*  **Humidity9am** — Humidity (percent) at 9am\\n*  **Humidity3pm** — Humidity (percent) at 3pm\\n*  **Pressure9am** — Atmospheric pressure (hpa) reduced to mean sea level at 9am\\n*  **Pressure3pm** — Atmospheric pressure (hpa) reduced to mean sea level at 3pm\\n*  **Cloud9am** — Fraction of sky obscured by cloud at 9am. This is measured in \\\u0022oktas\\\u0022, which are a unit of eigths. It records how many eigths of the sky are obscured by cloud. A 0 measure indicates completely clear *  sky whilst an 8 indicates that it is completely overcast.\\n*  **Cloud3pm** — Fraction of sky obscured by cloud (in \\\u0022oktas\\\u0022: eighths) at 3pm. See Cload9am for a description of the values\\n*  **Temp9am** — Temperature (degrees C) at 9am\\n*  **Temp3pm** — Temperature (degrees C) at 3pm\\n*  **RainToday** — Boolean: 1 if precipitation (mm) in the 24 hours to 9am exceeds 1mm, otherwise 0\\n*  **RISK_MM** — The amount of rain. A kind of measure of the \\\u0022risk\\\u0022.\\n*  **RainTomorrow** — The target variable. Did it rain tomorrow?\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022f4a7ada773daf68d94ec4a21050a456039ba1ba9\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The type of machine learning we will be doing is called **classification**, because when we make predictions we are classifying each day as rainy or not. More specifically, we are performing **binary classification**, which means that there are only two different states we are classifying.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022d97c8405855b1eba3c1b5437c817b7b90e0636dc\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Null values\\nLet\u0027s get rid of columns with significant amount of null values. And in the rest columns we will drop rows with null values. \u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00228fb97ccad2bbcb153a19225f66a18249b0a783ef\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data_null_percent = pd.Series(index=data.columns)\\n\\nfor column_name in data:\\n    data_null_percent[column_name] = data[column_name].count()/data.shape[0]\\n    \\ndata_null_percent_sorted = data_null_percent.sort_values()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002221fcccf21c8093c47cd2967eaa2f7e5f8c203f53\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data_null_percent_sorted.plot.barh()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022feb9825778471512260aba8304eb4921c99489a2\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022**Cloud9pm, Cloud3pm, Evaporation, and Sunshine** must be droped since significant amount of records in these columns is missed. Also we should exclude **RISK_MM** because it can leak the answers to the model and reduce its predictability.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00227d2beda1c088243bd2efc32745397745f863f517\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data = data.drop(columns=[\u0027Cloud9am\u0027,\u0027Cloud3pm\u0027, \u0027Evaporation\u0027, \u0027Sunshine\u0027,\u0027RISK_MM\u0027])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022da349918a5838d4acbe07b5a40abcadfc543c7d8\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Let\u0027s drop rows with null values in them.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022d7ed6ecad74739a64bd120a8416fe0e3469aa2e6\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data = data.dropna()\\ndata.isnull().any()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00228af31c194e1ca52de4044cb5ddbb0e4de7876512\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.shape\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223fdb0c913618aa87261e8ce8ccc051675efe3d06\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022e5996bd725838255c7fa32a0cb3eba312e189fbe\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Split into train and test\\nWe must be aware of one important thing: any change we make to the train data, we also need to make to the test data, otherwise we will be unable to use our model. \u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022849ac0cd5921dbbeacecae20eb26f39c2a439085\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022from sklearn.model_selection import train_test_split\\n\\ntrain, test = train_test_split(data, test_size=0.2)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002249bf48c2332f3dab36db19467685f2c47d35f411\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022print(\\\u0022train: \\\u0022 + str(train.shape) + \\\u0022, test: \\\u0022 + str(test.shape))\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002259fa434dc51ea294cd802f915fccd70d156f3d09\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Deal with categorical variables\\nTo apply such algorithms as Logistic Regression we need to convert the non-numeric data into numeric data. Categorical variables with only 2 possible values can be converted into variables with 0s and 1s as values. For categorical variables with 3 and more possible value we will create dummy variables.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022f9e4c281a66f1138c65f098aabccedcbe06d603b\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Convert values in columns \\\u0022RainToday\\\u0022 and \\\u0022RainTomorrow\\\u0022 from **\\\u0022No\\\u0022 and \\\u0022Yes\\\u0022** to **0 and 1**.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022ac71db490d14db29a40cce64a8ce21afcc089ae0\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train[\\\u0022RainToday\\\u0022] = train[\\\u0022RainToday\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\ntrain[\\\u0022RainTomorrow\\\u0022] = train[\\\u0022RainTomorrow\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\n\\ntest[\\\u0022RainToday\\\u0022] = test[\\\u0022RainToday\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\ntest[\\\u0022RainTomorrow\\\u0022] = test[\\\u0022RainTomorrow\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00220644e21612011e65f33061c101aec404ba449bfd\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Visualization of how categorical variables impact on forming tomorrow\u0027s rain\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022fcab5b1261d913cfc3f7d73bde2c7893804478d4\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022def category_impact_plot(variable, subplot_position):\\n    plt.subplot(subplot_position)\\n    pd.pivot_table(train, index=variable, values=\u0027RainTomorrow\u0027).plot.bar(figsize=(25,5), ax=plt.gca()) \\n   \\nplt.figure(1)\\ncategory_impact_plot(\\\u0022WindGustDir\\\u0022, 131)\\ncategory_impact_plot(\\\u0022WindDir9am\\\u0022, 132)\\ncategory_impact_plot(\\\u0022WindDir3pm\\\u0022, 133)\\n\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022a362b93c2313cd1d828418b3ed2efa040319de60\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Create dummy variables for **WindGustDir, WindDir9am, WindDir3pm**\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022c47c279ceb82fb36a7be4f0c7ae626edbde770c4\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022categorical_variables = [\\\u0022WindGustDir\\\u0022, \\\u0022WindDir9am\\\u0022, \\\u0022WindDir3pm\\\u0022]\\n\\ntrain = pd.get_dummies(train, columns=categorical_variables)\\ntest = pd.get_dummies(test, columns=categorical_variables)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022scrolled\u0022:true,\u0022_uuid\u0022:\u00224f3d702bdc16be1814a4c110d087d48bcd0de8ab\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022010626553ee3b9e966057d6dac2952c36c5df810\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Does Location affect the formation of rain?\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022ebfb1785fefce3c99e4b651df1e42df26986f753\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022location_pivot = train.pivot_table(index=\\\u0022Location\\\u0022, values=\\\u0022RainTomorrow\\\u0022)\\nlocation_pivot_sorted = location_pivot.sort_values(by=[\\\u0022RainTomorrow\\\u0022])\\n\\nlocation_pivot_sorted.plot.barh(figsize=(10,12))\\nplt.ylabel(\u0027\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022e731fe7090814088cd45106290a7d46857c79978\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Yes, **Location** obviously affect the formation of tomorrow\u0027s rain! So, we\u0027re going to use this variable, and in order to use this categorical variable we have to create dummies.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00221c062302e3c98834660da59a9c0f1273e0fad34a\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train = pd.get_dummies(train, columns=[\\\u0022Location\\\u0022])\\ntest = pd.get_dummies(test, columns=[\\\u0022Location\\\u0022])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022b5d39c623af266047f9934645597ce1f3aaf0201\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Does Date affect the formation of rain?\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00226570c6f8bba2ed4a8ae2f0488af4e64b5568cd7f\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train[\\\u0022Month\\\u0022] = pd.to_datetime(train[\\\u0022Date\\\u0022]).dt.month\\ntest[\\\u0022Month\\\u0022] = pd.to_datetime(test[\\\u0022Date\\\u0022]).dt.month\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223e2bbd761b9efcc5a450685087e7f35e81859a4b\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022date_pivot = train.pivot_table(index=\\\u0022Month\\\u0022, values=\\\u0022RainTomorrow\\\u0022)#.sort_index(ascending=False)\\n\\ndate_pivot.plot.barh()\\nplt.ylabel(\u0027\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00225b4cc7158323f9029a6ea6c222f3b155acdf82db\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022There\u0027s a certain tendency, season 6-8 is a rainy season.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022db0fc7287870e7efa07d62969bf45893529a6174\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train = pd.get_dummies(train, columns=[\\\u0022Month\\\u0022])\\ntest = pd.get_dummies(test, columns=[\\\u0022Month\\\u0022])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002289516c26f3d138f10e453d707080bae3f48daf2c\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Rescaling\\nLooking at our numeric columns, we can see a big difference between the range of each.  In order to make sure these values are equally weighted within our model, we\u0027ll need to rescale the data.\\n\\nRescaling simply stretches or shrinks the data as needed to be on the same scale, in our case between 0 and 1.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223c778d312db27e3db39fb8ce8d1256ec6d72e467\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# the preprocessing.minmax_scale() function allows us to quickly and easily rescale our data\\nfrom sklearn.preprocessing import minmax_scale\\n\\n# Added 2 backets to make it a dataframe. Otherwise you will get a type error stating cannot iterate over 0-d array.\\ndef apply_minmax_scale(dataset, features):\\n    for feature in features:\\n        dataset[feature] = minmax_scale(dataset[[feature]])\\n        \\nnumerical_features = [\\\u0022MinTemp\\\u0022,\\\u0022MaxTemp\\\u0022, \\\u0022Rainfall\\\u0022, \\\u0022WindGustSpeed\\\u0022, \\\u0022WindSpeed9am\\\u0022,\\n                     \\\u0022WindSpeed3pm\\\u0022, \\\u0022Humidity9am\\\u0022, \\\u0022Humidity3pm\\\u0022, \\\u0022Pressure9am\\\u0022, \\n                     \\\u0022Pressure3pm\\\u0022, \\\u0022Temp9am\\\u0022, \\\u0022Temp3pm\\\u0022]\\n\\napply_minmax_scale(train, numerical_features)\\napply_minmax_scale(test, numerical_features)\\n\\ntrain[numerical_features].head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00221a2385d11c2820b6ae56aae5050decc4d431154b\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Visualization of how numerical variables impact on forming tomorrow\u0027s rain\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002214869592105a824b28025795ea78d648d0fe4aeb\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022rainTomorrow_yes = train[train[\\\u0022RainTomorrow\\\u0022] == 1]\\nrainTomorrow_no = train[train[\\\u0022RainTomorrow\\\u0022] == 0]\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00224da3c57a60ddd43a4b22f07751310fbbf4773408\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022def variable_impact_plot(variable, subplot_position):\\n    plt.subplot(subplot_position)\\n    rainTomorrow_yes[variable].plot.hist(figsize=(25,10), alpha=0.5, color=\\\u0022blue\\\u0022, bins=50, ax=plt.gca())\\n    rainTomorrow_no[variable].plot.hist(figsize=(25,10), alpha=0.5, color=\\\u0022yellow\\\u0022, bins=50, ax=plt.gca())\\n    plt.ylabel(\u0027\u0027)\\n    plt.xticks([], [])\\n    plt.yticks([], [])\\n    plt.title(variable)\\n\\nplt.figure(1)\\nvariable_impact_plot(\\\u0022MinTemp\\\u0022, 341)\\nvariable_impact_plot(\\\u0022MaxTemp\\\u0022, 342)\\nvariable_impact_plot(\\\u0022Rainfall\\\u0022, 343)\\nvariable_impact_plot(\\\u0022WindGustSpeed\\\u0022, 344)\\nvariable_impact_plot(\\\u0022WindSpeed9am\\\u0022, 345)\\nvariable_impact_plot(\\\u0022WindSpeed3pm\\\u0022, 346)\\nvariable_impact_plot(\\\u0022Humidity9am\\\u0022, 347)\\nvariable_impact_plot(\\\u0022Humidity3pm\\\u0022, 348)\\nplt.figure(2)\\nvariable_impact_plot(\\\u0022Pressure9am\\\u0022, 341)\\nvariable_impact_plot(\\\u0022Pressure3pm\\\u0022, 342)\\nvariable_impact_plot(\\\u0022Temp9am\\\u0022, 343)\\nvariable_impact_plot(\\\u0022Temp3pm\\\u0022, 344)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022853d1ba44aa4208e8701c584c9dd5e7c2a891ec2\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We are intrested in variables with plots where blue and yellow areas have different shapes. Such variables have impact(positive or negative) on forming tomorrow\u0027s rain. The most obvious one is **Humidity3pm**! The rest is not that clear, we will use another feature selection method.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022ee33f0c763d37f8f200051527aaeb9f5813c9ef5\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Collinearity\\nWe now have 73 possible feature columns we can use to train our model. One thing to be aware of as you start to add more features is a concept called collinearity. Collinearity occurs where more than one feature contains data that are similar.\\n\\nThe effect of collinearity is that your model will overfit - you may get great results on your test data set, but then the model performs worse on unseen data (like the test set).\\n\\n A common way to spot collinearity is to plot correlations between each pair of variables in a heatmap.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002275ce8b9914f828834c7eb1a803561a33f212f35a\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# columns we will be using all the way down\\ncolumns = list(train.columns[1:])\\ncolumns.remove(\\\u0022RainTomorrow\\\u0022)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00221af0e23dc31e2fdb91874dcf0f9c1b06773640ae\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022import seaborn as sns\\n\\n# custom function to set the style for heatmap\\ndef plot_correlation_heatmap(df):\\n    corr = df.corr()\\n    sns.set(style=\\\u0022white\\\u0022)\\n    mask = np.zeros_like(corr, dtype=np.bool)\\n    mask[np.triu_indices_from(mask)] = True\\n\\n    f, ax = plt.subplots(figsize=(30, 25))\\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\\n\\n    sns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\\n            square=True, linewidths=.5, cbar_kws={\\\u0022shrink\\\u0022: .5})\\n    plt.show()\\n\\nplot_correlation_heatmap(train[columns])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00225fe4f199d4d286f7f16f675a5efe4fdf91470f22\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We can see that there is correlation about 30-50% between some variables. That\u0027s not enough to remove one of them and rely on the other.\\n\\nApart from that, we should remove one of each of our dummy variables to reduce the collinearity in each. We\u0027ll remove:\\n* WindGustDir_E\\n* WindDir9am_E\\n* WindDir3pm_E\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022b01c064cb7a4837e58a5a2d45fb3ffeb9e5f0537\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Feature selection\\nIn order to select the best-performing features, we need a way to measure which of our features are relevant to our outcome - in this case, the impact on forming tomorrow\u0027s rain. One effective way is by training a logistic regression model using all of our features, and then looking at the coefficients of each feature.\\n\\nThe scikit-learn LogisticRegression class has an attribute in which coefficients are stored after the model is fit, LogisticRegression.coef_. We first need to train our model, after which we can access this attribute.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022368e67f19c5a95c9c23ac2c5ee88a2191d94c904\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Applying Logistic Regression\\nfrom sklearn.linear_model import LogisticRegression\\nlogisticRegression = LogisticRegression()\\nlogisticRegression.fit(train[columns], train[\\\u0022RainTomorrow\\\u0022])\\ncoefficients = logisticRegression.coef_\\nprint(coefficients)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002272ada86197e728c8cd8b69bad4e11d370c5a5a7a\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The coef() method returns a NumPy array of coefficients, in the same order as the features that were used to fit the model. To make these easier to interpret, we can convert the coefficients to a pandas series, adding the column names as the index:\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00226845e939c7bf964d1c903b02eadc87283ab96942\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022feature_importance = pd.Series(coefficients[0], index=columns)\\nprint(feature_importance)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022f3538f64c80a174cdfe20b95edf1106e8f5d5692\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Plotting as a horizontal Bar chart\\nfeature_importance.plot.barh(figsize=(10,25))\\nplt.show()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022c161eb0d614004de3d44d66656d9a5055fb70cf0\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The plot we generated shows a range of both positive and negative values. Whether the value is positive or negative isn\u0027t as important in this case, relative to the magnitude of the value. If you think about it, this makes sense. A feature that indicates strongly whether a it\u0027s not going to rain tomorrow is just as useful as a feature that indicates strongly that a it\u0027s going to rain tomorrow, given they are mutually exclusive outcomes.\\n\\nTo make things easier to interpret, we\u0027ll alter the plot to show all positive values, and have sorted the bars in order of size:\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002213ac54660ab96daa26a9637b0f28966babf1954c\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022ordered_feature_importance = feature_importance.abs().sort_values()\\nordered_feature_importance.plot.barh(figsize=(10,25))\\nplt.show()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022942db813dbd14151c9fb65d01ee3a46c6c7e1e22\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We\u0027ll train a model with the top 4 scores.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022de4fb218eeadc373d4ce3d361ad5f7c65ca3f9e8\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022predictors = [\\\u0022Pressure3pm\\\u0022, \\\u0022WindGustSpeed\\\u0022, \\\u0022Pressure9am\\\u0022, \\\u0022Humidity3pm\\\u0022]\\n\\nlr = LogisticRegression()\\nlr.fit(train[predictors], train[\\\u0022RainTomorrow\\\u0022])\\npredictions = lr.predict(test[predictors])\\nprint(predictions)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00224014e6b138401cdb7f2d58f547a6dab67e371d74\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Calculating the accuracy using the k-fold cross validation method with k=10\\nfrom sklearn.model_selection import cross_val_score\\nscores = cross_val_score(lr, train[predictors], train[\\\u0022RainTomorrow\\\u0022], cv=10)\\nprint(scores)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022a4fd1d153e18d365476b86c07a82de4515ac5cee\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Taking the mean of all the scores\\naccuracy = scores.mean()\\nprint(accuracy)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]}],\u0022metadata\u0022:{\u0022kernelspec\u0022:{\u0022display_name\u0022:\u0022Python 3\u0022,\u0022language\u0022:\u0022python\u0022,\u0022name\u0022:\u0022python3\u0022},\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022,\u0022version\u0022:\u00223.6.6\u0022,\u0022mimetype\u0022:\u0022text/x-python\u0022,\u0022codemirror_mode\u0022:{\u0022name\u0022:\u0022ipython\u0022,\u0022version\u0022:3},\u0022pygments_lexer\u0022:\u0022ipython3\u0022,\u0022nbconvert_exporter\u0022:\u0022python\u0022,\u0022file_extension\u0022:\u0022.py\u0022}},\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:1}","dateCreated":"2019-01-17T22:38:23.4422542Z"},"kernelRun":{"id":9653374,"kernelId":2584329,"status":"complete","type":"batch","sourceType":"notebook","language":"python","title":"Rain in Australia. Binary classification","dateCreated":"2019-01-17T22:38:23.523Z","dateEvaluated":"2019-01-17T22:38:24.057Z","dateCancelled":null,"workerContainerPort":null,"workerUptimeSeconds":12580,"workerIPAddress":"172.20.2.67    ","workerIPAddressExternal":null,"scriptLanguageId":9,"scriptLanguageName":"IPython Notebook HTML","renderedOutputUrl":"https://www.kaggleusercontent.com/kf/9653374/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..snIScuBRDC1ld7darQFJ6A.2ZHqNwuHW0RtXCnHOphsUwsgIcdizWadU2E06jWIDevG0-Xq3Ihl8goLT5uDZBuenls0OtD_v3j7_Jq4i720qCBlBNYQJ0IAkoKIPZXssoNoE1kpzafjhlGlyza2Y-8WElJBBWWryjxxggRzQ8wh8W2-5H12HvUoy0wPDlDeP04lkfV9iOWoUFbP86IUlPAUSc7R8uECA4N8QtQREC2KXxJzmP8-WD2GO5WdRiHwCwz9jFnMt0Tma8TXwhM29YyoISv41kSZDMV9RAdtkswr1_3ofxyjNNzzWslDqb0hXft7lB81_-GQGbemuNJHWaNLLfqVHUkK-dxpliRX9PkXFHm7_cmOOobSGpbOR8vOq6ywPw1uEOhm3GZ0ShfOfwHi3CIvMBG1tisNJ6GTyaSe9yD0FJePV7XGFH-G0D2YivgZ47Gk_qjeUTIl29O_-muoggmgabsojLbPcRcPSPuuIMaPz6U-jv89R9PtEEtsig7ZOn5iRpYiWlB_ejxUJ-QswnIh8wBbuGQirNh6_Ofht4vW-MPJIoC85pcsi9iS7flyqwbeL2WqMSeW9tTemPICPX73MIh5E1eqDp0OdhizDTz948Cm4rOOL7nI2xF0E5msGkdBJ1CCmZjyTfnO2izxWu1VjPTZwI2dptyRvYztXjFknAVHqvDDVqdPXG3waglYZLUBS-vlj02GWERfGoNP.wlQnrI1douDH6Qu7VmIkaQ/__results__.html","commit":{"id":168753032,"settings":{"dockerImageVersionId":null,"dataSources":[{"sourceType":"DatasetVersion","sourceId":198179,"databundleVersionId":null,"mountSlug":null}],"sourceType":"notebook","language":"python","accelerator":"none","isInternetEnabled":false},"source":"{\u0022cells\u0022:[{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002231b2ed2e19ecb0c7f8ac86af880eb5520f7dbdea\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The content is daily weather observations from numerous Australian weather stations.\\n\\nThe target RainTomorrow means: Did it rain the next day? Yes or No.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022dfb8c6b9ad699dc1784fdbde84ef3b50db086c10\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Importing libraries and dataset\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022318f7ab54147832d30f8ed0a6120c4f1fca771ff\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022import pandas as pd\\nimport matplotlib.pyplot as plt\\nimport numpy as np\\nimport warnings\\nwarnings.filterwarnings(\u0027ignore\u0027)\\n\\ndata = pd.read_csv(\u0027../input/weatherAUS.csv\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00221ec9633a0249b6bae5517596f6c8c036de6de6ab\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Exploring the data\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022e51ddc36362266a75afc6dde97ea7998b7eb5f0f\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.shape\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022d7eaf8348da124c92e8578683f37822f80d28ffa\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.columns\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022be6d1803bc36fa19c9d12e86121c3b4c6454f36c\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.info()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022scrolled\u0022:true,\u0022_uuid\u0022:\u0022ea97dc7003cd33e4948ba24bd9ced7438a43ab12\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002260b8dd9750ef63186e303095114d6778c26ae049\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The dataset has below columns :\\n*  **DateThe** — date of observation\\n*  **Location** — The common name of the location of the weather station\\n*  **MinTemp** — The minimum temperature in degrees celsius\\n*  **MaxTemp** — The maximum temperature in degrees celsius\\n*  **Rainfall** — The amount of rainfall recorded for the day in mm\\n*  **Evaporation** — The so-called Class A pan evaporation (mm) in the 24 hours to 9am\\n*  **Sunshine** — The number of hours of bright sunshine in the day.\\n*  **WindGustDir** — The direction of the strongest wind gust in the 24 hours to midnight\\n*  **WindGustSpeed** — The speed (km/h) of the strongest wind gust in the 24 hours to midnight\\n*  **WindDir9am** — Direction of the wind at 9am\\n*  **WindDir3pm** — Direction of the wind at 3pm\\n*  **WindSpeed9am** — Wind speed (km/hr) averaged over 10 minutes prior to 9am\\n*  **WindSpeed3pm** — Wind speed (km/hr) averaged over 10 minutes prior to 3pm\\n*  **Humidity9am** — Humidity (percent) at 9am\\n*  **Humidity3pm** — Humidity (percent) at 3pm\\n*  **Pressure9am** — Atmospheric pressure (hpa) reduced to mean sea level at 9am\\n*  **Pressure3pm** — Atmospheric pressure (hpa) reduced to mean sea level at 3pm\\n*  **Cloud9am** — Fraction of sky obscured by cloud at 9am. This is measured in \\\u0022oktas\\\u0022, which are a unit of eigths. It records how many eigths of the sky are obscured by cloud. A 0 measure indicates completely clear *  sky whilst an 8 indicates that it is completely overcast.\\n*  **Cloud3pm** — Fraction of sky obscured by cloud (in \\\u0022oktas\\\u0022: eighths) at 3pm. See Cload9am for a description of the values\\n*  **Temp9am** — Temperature (degrees C) at 9am\\n*  **Temp3pm** — Temperature (degrees C) at 3pm\\n*  **RainToday** — Boolean: 1 if precipitation (mm) in the 24 hours to 9am exceeds 1mm, otherwise 0\\n*  **RISK_MM** — The amount of rain. A kind of measure of the \\\u0022risk\\\u0022.\\n*  **RainTomorrow** — The target variable. Did it rain tomorrow?\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022f4a7ada773daf68d94ec4a21050a456039ba1ba9\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The type of machine learning we will be doing is called **classification**, because when we make predictions we are classifying each day as rainy or not. More specifically, we are performing **binary classification**, which means that there are only two different states we are classifying.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022d97c8405855b1eba3c1b5437c817b7b90e0636dc\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Null values\\nLet\u0027s get rid of columns with significant amount of null values. And in the rest columns we will drop rows with null values. \u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00228fb97ccad2bbcb153a19225f66a18249b0a783ef\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data_null_percent = pd.Series(index=data.columns)\\n\\nfor column_name in data:\\n    data_null_percent[column_name] = data[column_name].count()/data.shape[0]\\n    \\ndata_null_percent_sorted = data_null_percent.sort_values()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002221fcccf21c8093c47cd2967eaa2f7e5f8c203f53\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data_null_percent_sorted.plot.barh()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022feb9825778471512260aba8304eb4921c99489a2\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022**Cloud9pm, Cloud3pm, Evaporation, and Sunshine** must be droped since significant amount of records in these columns is missed. Also we should exclude **RISK_MM** because it can leak the answers to the model and reduce its predictability.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00227d2beda1c088243bd2efc32745397745f863f517\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data = data.drop(columns=[\u0027Cloud9am\u0027,\u0027Cloud3pm\u0027, \u0027Evaporation\u0027, \u0027Sunshine\u0027,\u0027RISK_MM\u0027])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022da349918a5838d4acbe07b5a40abcadfc543c7d8\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Let\u0027s drop rows with null values in them.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022d7ed6ecad74739a64bd120a8416fe0e3469aa2e6\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data = data.dropna()\\ndata.isnull().any()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00228af31c194e1ca52de4044cb5ddbb0e4de7876512\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.shape\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223fdb0c913618aa87261e8ce8ccc051675efe3d06\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022e5996bd725838255c7fa32a0cb3eba312e189fbe\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Split into train and test\\nWe must be aware of one important thing: any change we make to the train data, we also need to make to the test data, otherwise we will be unable to use our model. \u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022849ac0cd5921dbbeacecae20eb26f39c2a439085\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022from sklearn.model_selection import train_test_split\\n\\ntrain, test = train_test_split(data, test_size=0.2)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002249bf48c2332f3dab36db19467685f2c47d35f411\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022print(\\\u0022train: \\\u0022 + str(train.shape) + \\\u0022, test: \\\u0022 + str(test.shape))\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002259fa434dc51ea294cd802f915fccd70d156f3d09\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Deal with categorical variables\\nTo apply such algorithms as Logistic Regression we need to convert the non-numeric data into numeric data. Categorical variables with only 2 possible values can be converted into variables with 0s and 1s as values. For categorical variables with 3 and more possible value we will create dummy variables.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022f9e4c281a66f1138c65f098aabccedcbe06d603b\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Convert values in columns \\\u0022RainToday\\\u0022 and \\\u0022RainTomorrow\\\u0022 from **\\\u0022No\\\u0022 and \\\u0022Yes\\\u0022** to **0 and 1**.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022ac71db490d14db29a40cce64a8ce21afcc089ae0\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train[\\\u0022RainToday\\\u0022] = train[\\\u0022RainToday\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\ntrain[\\\u0022RainTomorrow\\\u0022] = train[\\\u0022RainTomorrow\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\n\\ntest[\\\u0022RainToday\\\u0022] = test[\\\u0022RainToday\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\ntest[\\\u0022RainTomorrow\\\u0022] = test[\\\u0022RainTomorrow\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00220644e21612011e65f33061c101aec404ba449bfd\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Visualization of how categorical variables impact on forming tomorrow\u0027s rain\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022fcab5b1261d913cfc3f7d73bde2c7893804478d4\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022def category_impact_plot(variable, subplot_position):\\n    plt.subplot(subplot_position)\\n    pd.pivot_table(train, index=variable, values=\u0027RainTomorrow\u0027).plot.bar(figsize=(25,5), ax=plt.gca()) \\n   \\nplt.figure(1)\\ncategory_impact_plot(\\\u0022WindGustDir\\\u0022, 131)\\ncategory_impact_plot(\\\u0022WindDir9am\\\u0022, 132)\\ncategory_impact_plot(\\\u0022WindDir3pm\\\u0022, 133)\\n\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022a362b93c2313cd1d828418b3ed2efa040319de60\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Create dummy variables for **WindGustDir, WindDir9am, WindDir3pm**\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022c47c279ceb82fb36a7be4f0c7ae626edbde770c4\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022categorical_variables = [\\\u0022WindGustDir\\\u0022, \\\u0022WindDir9am\\\u0022, \\\u0022WindDir3pm\\\u0022]\\n\\ntrain = pd.get_dummies(train, columns=categorical_variables)\\ntest = pd.get_dummies(test, columns=categorical_variables)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022scrolled\u0022:true,\u0022_uuid\u0022:\u00224f3d702bdc16be1814a4c110d087d48bcd0de8ab\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022010626553ee3b9e966057d6dac2952c36c5df810\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Does Location affect the formation of rain?\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022ebfb1785fefce3c99e4b651df1e42df26986f753\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022location_pivot = train.pivot_table(index=\\\u0022Location\\\u0022, values=\\\u0022RainTomorrow\\\u0022)\\nlocation_pivot_sorted = location_pivot.sort_values(by=[\\\u0022RainTomorrow\\\u0022])\\n\\nlocation_pivot_sorted.plot.barh(figsize=(10,12))\\nplt.ylabel(\u0027\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022e731fe7090814088cd45106290a7d46857c79978\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Yes, **Location** obviously affect the formation of tomorrow\u0027s rain! So, we\u0027re going to use this variable, and in order to use this categorical variable we have to create dummies.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00221c062302e3c98834660da59a9c0f1273e0fad34a\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train = pd.get_dummies(train, columns=[\\\u0022Location\\\u0022])\\ntest = pd.get_dummies(test, columns=[\\\u0022Location\\\u0022])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022b5d39c623af266047f9934645597ce1f3aaf0201\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Does Date affect the formation of rain?\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00226570c6f8bba2ed4a8ae2f0488af4e64b5568cd7f\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train[\\\u0022Month\\\u0022] = pd.to_datetime(train[\\\u0022Date\\\u0022]).dt.month\\ntest[\\\u0022Month\\\u0022] = pd.to_datetime(test[\\\u0022Date\\\u0022]).dt.month\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223e2bbd761b9efcc5a450685087e7f35e81859a4b\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022date_pivot = train.pivot_table(index=\\\u0022Month\\\u0022, values=\\\u0022RainTomorrow\\\u0022)#.sort_index(ascending=False)\\n\\ndate_pivot.plot.barh()\\nplt.ylabel(\u0027\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00225b4cc7158323f9029a6ea6c222f3b155acdf82db\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022There\u0027s a certain tendency, season 6-8 is a rainy season.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022db0fc7287870e7efa07d62969bf45893529a6174\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train = pd.get_dummies(train, columns=[\\\u0022Month\\\u0022])\\ntest = pd.get_dummies(test, columns=[\\\u0022Month\\\u0022])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002289516c26f3d138f10e453d707080bae3f48daf2c\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Rescaling\\nLooking at our numeric columns, we can see a big difference between the range of each.  In order to make sure these values are equally weighted within our model, we\u0027ll need to rescale the data.\\n\\nRescaling simply stretches or shrinks the data as needed to be on the same scale, in our case between 0 and 1.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223c778d312db27e3db39fb8ce8d1256ec6d72e467\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# the preprocessing.minmax_scale() function allows us to quickly and easily rescale our data\\nfrom sklearn.preprocessing import minmax_scale\\n\\n# Added 2 backets to make it a dataframe. Otherwise you will get a type error stating cannot iterate over 0-d array.\\ndef apply_minmax_scale(dataset, features):\\n    for feature in features:\\n        dataset[feature] = minmax_scale(dataset[[feature]])\\n        \\nnumerical_features = [\\\u0022MinTemp\\\u0022,\\\u0022MaxTemp\\\u0022, \\\u0022Rainfall\\\u0022, \\\u0022WindGustSpeed\\\u0022, \\\u0022WindSpeed9am\\\u0022,\\n                     \\\u0022WindSpeed3pm\\\u0022, \\\u0022Humidity9am\\\u0022, \\\u0022Humidity3pm\\\u0022, \\\u0022Pressure9am\\\u0022, \\n                     \\\u0022Pressure3pm\\\u0022, \\\u0022Temp9am\\\u0022, \\\u0022Temp3pm\\\u0022]\\n\\napply_minmax_scale(train, numerical_features)\\napply_minmax_scale(test, numerical_features)\\n\\ntrain[numerical_features].head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00221a2385d11c2820b6ae56aae5050decc4d431154b\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Visualization of how numerical variables impact on forming tomorrow\u0027s rain\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002214869592105a824b28025795ea78d648d0fe4aeb\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022rainTomorrow_yes = train[train[\\\u0022RainTomorrow\\\u0022] == 1]\\nrainTomorrow_no = train[train[\\\u0022RainTomorrow\\\u0022] == 0]\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00224da3c57a60ddd43a4b22f07751310fbbf4773408\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022def variable_impact_plot(variable, subplot_position):\\n    plt.subplot(subplot_position)\\n    rainTomorrow_yes[variable].plot.hist(figsize=(25,10), alpha=0.5, color=\\\u0022blue\\\u0022, bins=50, ax=plt.gca())\\n    rainTomorrow_no[variable].plot.hist(figsize=(25,10), alpha=0.5, color=\\\u0022yellow\\\u0022, bins=50, ax=plt.gca())\\n    plt.ylabel(\u0027\u0027)\\n    plt.xticks([], [])\\n    plt.yticks([], [])\\n    plt.title(variable)\\n\\nplt.figure(1)\\nvariable_impact_plot(\\\u0022MinTemp\\\u0022, 341)\\nvariable_impact_plot(\\\u0022MaxTemp\\\u0022, 342)\\nvariable_impact_plot(\\\u0022Rainfall\\\u0022, 343)\\nvariable_impact_plot(\\\u0022WindGustSpeed\\\u0022, 344)\\nvariable_impact_plot(\\\u0022WindSpeed9am\\\u0022, 345)\\nvariable_impact_plot(\\\u0022WindSpeed3pm\\\u0022, 346)\\nvariable_impact_plot(\\\u0022Humidity9am\\\u0022, 347)\\nvariable_impact_plot(\\\u0022Humidity3pm\\\u0022, 348)\\nplt.figure(2)\\nvariable_impact_plot(\\\u0022Pressure9am\\\u0022, 341)\\nvariable_impact_plot(\\\u0022Pressure3pm\\\u0022, 342)\\nvariable_impact_plot(\\\u0022Temp9am\\\u0022, 343)\\nvariable_impact_plot(\\\u0022Temp3pm\\\u0022, 344)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022853d1ba44aa4208e8701c584c9dd5e7c2a891ec2\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We are intrested in variables with plots where blue and yellow areas have different shapes. Such variables have impact(positive or negative) on forming tomorrow\u0027s rain. The most obvious one is **Humidity3pm**! The rest is not that clear, we will use another feature selection method.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022ee33f0c763d37f8f200051527aaeb9f5813c9ef5\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Collinearity\\nWe now have 73 possible feature columns we can use to train our model. One thing to be aware of as you start to add more features is a concept called collinearity. Collinearity occurs where more than one feature contains data that are similar.\\n\\nThe effect of collinearity is that your model will overfit - you may get great results on your test data set, but then the model performs worse on unseen data (like the test set).\\n\\n A common way to spot collinearity is to plot correlations between each pair of variables in a heatmap.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002275ce8b9914f828834c7eb1a803561a33f212f35a\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# columns we will be using all the way down\\ncolumns = list(train.columns[1:])\\ncolumns.remove(\\\u0022RainTomorrow\\\u0022)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00221af0e23dc31e2fdb91874dcf0f9c1b06773640ae\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022import seaborn as sns\\n\\n# custom function to set the style for heatmap\\ndef plot_correlation_heatmap(df):\\n    corr = df.corr()\\n    sns.set(style=\\\u0022white\\\u0022)\\n    mask = np.zeros_like(corr, dtype=np.bool)\\n    mask[np.triu_indices_from(mask)] = True\\n\\n    f, ax = plt.subplots(figsize=(30, 25))\\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\\n\\n    sns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\\n            square=True, linewidths=.5, cbar_kws={\\\u0022shrink\\\u0022: .5})\\n    plt.show()\\n\\nplot_correlation_heatmap(train[columns])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00225fe4f199d4d286f7f16f675a5efe4fdf91470f22\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We can see that there is correlation about 30-50% between some variables. That\u0027s not enough to remove one of them and rely on the other.\\n\\nApart from that, we should remove one of each of our dummy variables to reduce the collinearity in each. We\u0027ll remove:\\n* WindGustDir_E\\n* WindDir9am_E\\n* WindDir3pm_E\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022b01c064cb7a4837e58a5a2d45fb3ffeb9e5f0537\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Feature selection\\nIn order to select the best-performing features, we need a way to measure which of our features are relevant to our outcome - in this case, the impact on forming tomorrow\u0027s rain. One effective way is by training a logistic regression model using all of our features, and then looking at the coefficients of each feature.\\n\\nThe scikit-learn LogisticRegression class has an attribute in which coefficients are stored after the model is fit, LogisticRegression.coef_. We first need to train our model, after which we can access this attribute.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022368e67f19c5a95c9c23ac2c5ee88a2191d94c904\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Applying Logistic Regression\\nfrom sklearn.linear_model import LogisticRegression\\nlogisticRegression = LogisticRegression()\\nlogisticRegression.fit(train[columns], train[\\\u0022RainTomorrow\\\u0022])\\ncoefficients = logisticRegression.coef_\\nprint(coefficients)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002272ada86197e728c8cd8b69bad4e11d370c5a5a7a\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The coef() method returns a NumPy array of coefficients, in the same order as the features that were used to fit the model. To make these easier to interpret, we can convert the coefficients to a pandas series, adding the column names as the index:\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00226845e939c7bf964d1c903b02eadc87283ab96942\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022feature_importance = pd.Series(coefficients[0], index=columns)\\nprint(feature_importance)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022f3538f64c80a174cdfe20b95edf1106e8f5d5692\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Plotting as a horizontal Bar chart\\nfeature_importance.plot.barh(figsize=(10,25))\\nplt.show()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022c161eb0d614004de3d44d66656d9a5055fb70cf0\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The plot we generated shows a range of both positive and negative values. Whether the value is positive or negative isn\u0027t as important in this case, relative to the magnitude of the value. If you think about it, this makes sense. A feature that indicates strongly whether a it\u0027s not going to rain tomorrow is just as useful as a feature that indicates strongly that a it\u0027s going to rain tomorrow, given they are mutually exclusive outcomes.\\n\\nTo make things easier to interpret, we\u0027ll alter the plot to show all positive values, and have sorted the bars in order of size:\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002213ac54660ab96daa26a9637b0f28966babf1954c\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022ordered_feature_importance = feature_importance.abs().sort_values()\\nordered_feature_importance.plot.barh(figsize=(10,25))\\nplt.show()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022942db813dbd14151c9fb65d01ee3a46c6c7e1e22\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We\u0027ll train a model with the top 4 scores.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022de4fb218eeadc373d4ce3d361ad5f7c65ca3f9e8\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022predictors = [\\\u0022Pressure3pm\\\u0022, \\\u0022WindGustSpeed\\\u0022, \\\u0022Pressure9am\\\u0022, \\\u0022Humidity3pm\\\u0022]\\n\\nlr = LogisticRegression()\\nlr.fit(train[predictors], train[\\\u0022RainTomorrow\\\u0022])\\npredictions = lr.predict(test[predictors])\\nprint(predictions)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00224014e6b138401cdb7f2d58f547a6dab67e371d74\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Calculating the accuracy using the k-fold cross validation method with k=10\\nfrom sklearn.model_selection import cross_val_score\\nscores = cross_val_score(lr, train[predictors], train[\\\u0022RainTomorrow\\\u0022], cv=10)\\nprint(scores)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022a4fd1d153e18d365476b86c07a82de4515ac5cee\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Taking the mean of all the scores\\naccuracy = scores.mean()\\nprint(accuracy)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]}],\u0022metadata\u0022:{\u0022kernelspec\u0022:{\u0022display_name\u0022:\u0022Python 3\u0022,\u0022language\u0022:\u0022python\u0022,\u0022name\u0022:\u0022python3\u0022},\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022,\u0022version\u0022:\u00223.6.6\u0022,\u0022mimetype\u0022:\u0022text/x-python\u0022,\u0022codemirror_mode\u0022:{\u0022name\u0022:\u0022ipython\u0022,\u0022version\u0022:3},\u0022pygments_lexer\u0022:\u0022ipython3\u0022,\u0022nbconvert_exporter\u0022:\u0022python\u0022,\u0022file_extension\u0022:\u0022.py\u0022}},\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:1}","dateCreated":"2019-01-17T22:38:23.4422542Z"},"resources":null,"isolatorResults":"\u003cresults\u003e\u003cdisk_kb_free\u003e4821340\u003c/disk_kb_free\u003e\u003cdocker_image_digest\u003e1608d7a1ab13555cef49e4327d64aab32e4f9fcf47a708dea2bc21a0c084c446\u003c/docker_image_digest\u003e\u003cdocker_image_id\u003esha256:73bf8bed066338773b5cc6af6e4d3e44e96d4cc708e42394734ecde05f956f61\u003c/docker_image_id\u003e\u003cdocker_image_name\u003egcr.io/kaggle-images/python\u003c/docker_image_name\u003e\u003cexit_code\u003e0\u003c/exit_code\u003e\u003cfailure_message /\u003e\u003cinvalid_path_errors\u003eFalse\u003c/invalid_path_errors\u003e\u003cout_of_memory\u003eFalse\u003c/out_of_memory\u003e\u003crun_time_seconds\u003e31.8383898569991\u003c/run_time_seconds\u003e\u003csucceeded\u003eTrue\u003c/succeeded\u003e\u003ctimeout_exceeded\u003eFalse\u003c/timeout_exceeded\u003e\u003cused_all_space\u003eFalse\u003c/used_all_space\u003e\u003cwas_killed\u003eFalse\u003c/was_killed\u003e\u003c/results\u003e","runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://gcr.io/kaggle-images/python","dockerImageDigest":"1608d7a1ab13555cef49e4327d64aab32e4f9fcf47a708dea2bc21a0c084c446","dockerImageId":"sha256:73bf8bed066338773b5cc6af6e4d3e44e96d4cc708e42394734ecde05f956f61","dockerImageName":"gcr.io/kaggle-images/python","diskKbFree":4821340,"failureMessage":"","exitCode":0,"queuedSeconds":0,"outputSizeBytes":0,"runTimeSeconds":31.8383898569991,"usedAllSpace":false,"timeoutExceeded":false,"isValidStatus":false,"wasGpuEnabled":false,"wasInternetEnabled":false,"outOfMemory":false,"invalidPathErrors":false,"succeeded":true,"wasKilled":false},"dockerImageVersionId":20477,"usedCustomDockerImage":false,"dataSources":[{"sourceType":"DatasetVersion","sourceId":198179,"databundleVersionId":null,"mountSlug":""}],"useNewKernelsBackend":null,"isGpuEnabled":false,"isTpuEnabled":false,"isInternetEnabled":false},"author":{"id":2052128,"displayName":"Maksim Naumov","email":null,"editedEmail":null,"editedEmailCode":null,"userName":"naumov1889","thumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg","profileUrl":"/naumov1889","registerDate":"0001-01-01T00:00:00Z","lastVisitDate":"0001-01-01T00:00:00Z","statusId":0,"performanceTier":1,"userRoles":null,"userLogins":null,"groupIds":null,"duplicateUsers":null,"hasPhoneVerifications":false,"failedNerdchas":0,"hasPendingNerdcha":false,"deleteRequests":null,"userAttributes":null,"isAdmin":false,"isKaggleBot":false,"isAnonymous":false,"canAct":false,"canBeSeen":false,"thumbnailName":null,"isPhoneVerified":false},"baseUrl":"/naumov1889/rain-in-australia-binary-classification","collaborators":{"owner":{"userId":2052128,"groupId":null,"groupMemberCount":null,"profileUrl":"/naumov1889","thumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg","name":"Maksim Naumov","slug":"naumov1889","userTier":1,"joinDate":null,"type":"owner","isUser":true,"isGroup":false},"collaborators":[]},"initialTab":null,"log":"[{\n  \u0022data\u0022: \u0022[NbConvertApp] Converting notebook script.ipynb to html\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 3.783271041000262\n},{\n  \u0022data\u0022: \u0022[NbConvertApp] Executing notebook with kernel: python3\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 3.8589048470003036\n},{\n  \u0022data\u0022: \u0022[NbConvertApp] Support files will be in __results___files/\\n[NbConvertApp] Making directory __results___files\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 31.209412160000284\n},{\n  \u0022data\u0022: \u0022[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 31.212266062999333\n},{\n  \u0022data\u0022: \u0022[NbConvertApp] Writing 336707 bytes to __results__.html\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 31.21469997999884\n}]","outputFiles":[],"outputFilesCropped":false,"ouputFilesOwnerInfo":{"databundleVersionId":0,"dataset":null,"competition":null,"kernel":{"kernelId":2584329,"kernelVersionId":9653374,"dataviewToken":"eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..ZrU39-m-9rxhmLhY2eXOzA.Y4dUI2gZiLfJm_WP6CYkqIBJHmU1Da4AmQiNUGfBm4rlaCciJhS4CDGJddRI2WOM5ne9bv4HacGvsblFj3-l6_iTxCf5CW5b7z-MYfl7KIrIQXu7tfJiE0eAgjzNzVLc3rLoZ_qHPz0-hRPJkjw376PCwd1neZRvA7YPilxX93dtAM0faE286fYVz474ghPz0NUUQN5Q8BmSiwblpgRI6KG2aDdg5Z0_FnCdzV53AsWWwqR9jCLhjQ1wHKhNN0wC93d4cS8QllMj0uyziFf137eoNohkPM2Jn8sn8MSBJV2NG8RXKwqr2x8qwoFs7IidtvVGSkZo2jen3actqBwgoov5xcTdO0tv9uieE8Rh3gqzvaj2J7bwhRPZwTlh3OLQ6BZ59mcqXq1nn6JwrGkIelMRrAUnHJekzHxfoOtplH5LRG2duqV54J1xrtg6u2zgl53TGxOpN5hlZtc_IVlj0DbtX2f48lEp7t0m3ky_Sc4.4wvVKD7sbitJ-2E7fiRWZA","scope":"naumov1889/rain-in-australia-binary-classification"},"previewsDisabled":false},"pageMessages":[],"dataSources":[{"sourceType":"DatasetVersion","sourceId":198179,"databundleVersionId":null,"mountSlug":""}],"versions":[{"id":9653374,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-17T22:38:23.523Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":100,"linesInsertedFromPrevious":48,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:73bf8bed066338773b5cc6af6e4d3e44e96d4cc708e42394734ecde05f956f61","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":31.8383898569991,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9653374","versionNumber":6,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9475532,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-12T13:19:24.573Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":244,"linesInsertedFromPrevious":189,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":29.1919048919954,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9475532","versionNumber":5,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9445423,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-11T11:19:37.15Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":15,"linesInsertedFromPrevious":82,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":137,"failureMessage":"The kernel was killed due to a requested cancel.","isValidStatus":true,"runTimeSeconds":2.13223827899947,"succeeded":false,"timeoutExceeded":false,"usedAllSpace":false},"status":"cancelAcknowledged","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9445423","versionNumber":4,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9390122,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-09T19:44:45.253Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":31,"linesInsertedFromPrevious":238,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":16.3947211510022,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9390122","versionNumber":3,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9342473,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-08T14:53:30.137Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":12,"linesInsertedFromPrevious":13,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":9.71348170700367,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9342473","versionNumber":2,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9341575,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-08T14:05:16.497Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":0,"linesInsertedFromPrevious":113,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":9.74840660899645,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9341575","versionNumber":1,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"}],"categories":{"type":"notebook","tags":[]},"submitToCompetitionInfo":null,"downloadAllFilesUrl":"/kernels/svzip/9653374","submission":null,"menuLinks":[{"href":"/naumov1889/rain-in-australia-binary-classification/notebook","text":"Notebook","showOnMobile":true,"title":"Notebook","tab":"notebook","count":null,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/code","text":"Code","showOnMobile":true,"title":"Code","tab":"code","count":null,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/data","text":"Input","showOnMobile":true,"title":"Input","tab":"data","count":1,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/execution","text":"Execution Info","showOnMobile":false,"title":"Execution Info","tab":"execution","count":null,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/log","text":"Log","showOnMobile":false,"title":"Log","tab":"log","count":null,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/comments","text":"Comments","showOnMobile":true,"title":"Comments","tab":"comments","count":3,"showZeroCountExplicitly":true,"reportEventCategory":null,"reportEventType":null}],"rightMenuLinks":[],"callToAction":{"href":"/kernels/fork-version/9653374","text":"Fork Notebook","showOnMobile":true,"title":"Fork Notebook","tab":null,"count":null,"showZeroCountExplicitly":false,"reportEventCategory":"kernels","reportEventType":"anonymousKernelForkCreation"},"voteButton":{"totalVotes":4,"medalVotes":1,"hasAlreadyVotedUp":false,"hasAlreadyVotedDown":false,"canUpvote":true,"canDownvote":false,"voteUpUrl":"/kernels/vote?id=2584329","voteDownUrl":null,"voters":[{"avatarThumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2008664-gp.jpg","displayName":"Charlie","profileUrl":"/charliess","tier":"Novice","tierInt":0,"userId":2008664,"userName":"charliess"},{"avatarThumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg","displayName":"Maksim Naumov","profileUrl":"/naumov1889","tier":"Contributor","tierInt":1,"userId":2052128,"userName":"naumov1889"},{"avatarThumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/default-thumb.png","displayName":"Jinno123","profileUrl":"/jinno123","tier":"Novice","tierInt":0,"userId":4437630,"userName":"jinno123"},{"avatarThumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/default-thumb.png","displayName":"monojit saha","profileUrl":"/monojitsaha333","tier":"Novice","tierInt":0,"userId":4517130,"userName":"monojitsaha333"}],"currentUserInfo":null,"showVoters":true,"alwaysShowVoters":true},"parentDataSource":null,"parentName":"Rain in Australia","parentUrl":"/jsphyg/weather-dataset-rattle-package","thumbnailImageUrl":"https://storage.googleapis.com/kaggle-datasets-images/6012/8892/4bdfb1ab3032b5fe0681468034fcaff0/dataset-thumbnail.jpg?t=2018-09-11-10-30-08","canWrite":false,"canAdminister":false,"currentUserForkParentSessionId":null,"currentUserHasForked":false,"forkParentIsRedacted":false,"forkDiffLinesChanged":0,"forkDiffLinesDeleted":0,"forkDiffLinesInserted":0,"forkDiffUrl":null,"forkParentAuthorDisplayName":null,"forkParentAuthorUrl":null,"forkParentTitle":null,"forkParentUrl":null,"canSeeInnerTableOfContents":true,"simplifiedViewer":false,"kernelOutputDataset":null,"disableComments":false,"taskSubmissionInfo":null});performance && performance.mark && performance.mark("KernelViewer.componentCouldBootstrap");</script>

<form action="/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9653374" id="__AjaxAntiForgeryForm" method="post"><input name="X-XSRF-TOKEN" type="hidden" value="CfDJ8LdUzqlsSWBPr4Ce3rb9VL-MQzuFYlguZMf250ec9mqdHNS_mloxHQ1ZA71Lj1LhYfvky7XJymcONR-1LMdr0y3psIZsvK-CUcY75UausMgUSqu-urSueTjOPLlRL2cIPdZm000N0Pkm9mpkE_eUqBU"></form>
<script nonce="" type="text/x-mathjax-config">
    MathJax.Hub.Config({
    "HTML-CSS": {
    preferredFont: "TeX",
    availableFonts: ["STIX", "TeX"],
    linebreaks: {
    automatic: true
    },
    EqnChunk: (MathJax.Hub.Browser.isMobile ? 10 : 50)
    },
    tex2jax: {
    inlineMath: [["\\(", "\\)"], ["\\\\(", "\\\\)"]],
    displayMath: [["$$", "$$"], ["\\[", "\\]"]],
    processEscapes: true,
    ignoreClass: "tex2jax_ignore|dno"
    },
    TeX: {
    noUndefined: {
    attributes: {
    mathcolor: "red",
    mathbackground: "#FFEEEE",
    mathsize: "90%"
    }
    }
    },
    Macros: {
    href: "{}"
    },
    skipStartupTypeset: true,
    messageStyle: "none"
    });
</script>
<script nonce="" type="text/javascript" async="" crossorigin="anonymous" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/MathJax.js"></script>


</div></div><div class="sc-pZCbX cSPngZ"><div class="sc-AxjAm dVDPh"><div class="sc-AxirZ ezTeoc">We
 use cookies on Kaggle to deliver our services, analyze web traffic, and
 improve your experience on the site. By using Kaggle, you agree to our 
use of cookies.</div><div class="sc-AxiKw kOAUSS"><div class="sc-AxhCb gsXzyw">Got it</div><a href="https://www.kaggle.com/cookies" class="sc-AxhUy fxWvvr"><div class="sc-AxhCb gsXzyw">Learn more</div></a></div></div></div></div></div>
<div data-component-name="NavigationContainer" style="display: flex; flex-direction: column; flex: 1 0 auto;"></div><script class="kaggle-component" nonce="">var Kaggle=window.Kaggle||{};Kaggle.State=Kaggle.State||[];Kaggle.State.push({"isTopNavigation":false});performance && performance.mark && performance.mark("NavigationContainer.componentCouldBootstrap");</script>
<div id="site-body" class="hide">
    



<div data-component-name="KernelViewer" style="display: flex; flex-direction: column; flex: 1 0 auto;"></div><script class="kaggle-component" nonce="">var Kaggle=window.Kaggle||{};Kaggle.State=Kaggle.State||[];Kaggle.State.push({"kernel":{"id":2584329,"title":"Rain in Australia. Binary classification","forkParent":null,"currentRunId":9653374,"mostRecentRunId":9653374,"url":"/naumov1889/rain-in-australia-binary-classification","tags":[],"commentCount":0,"upvoteCount":4,"viewCount":1333,"forkCount":1,"bestPublicScore":null,"author":{"id":2052128,"displayName":"Maksim Naumov","email":null,"editedEmail":null,"editedEmailCode":null,"userName":"naumov1889","thumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg","profileUrl":"/naumov1889","registerDate":"0001-01-01T00:00:00Z","lastVisitDate":"0001-01-01T00:00:00Z","statusId":0,"performanceTier":1,"userRoles":null,"userLogins":null,"groupIds":null,"duplicateUsers":null,"hasPhoneVerifications":false,"failedNerdchas":0,"hasPendingNerdcha":false,"deleteRequests":null,"userAttributes":null,"isAdmin":false,"isKaggleBot":false,"isAnonymous":false,"canAct":false,"canBeSeen":false,"thumbnailName":null,"isPhoneVerified":false},"isPrivate":false,"updatedTime":"2019-01-17T22:38:24.0566667Z","selfLink":"/kernels/2584329","pinnedDockerImageVersionId":null,"dockerImagePinningType":"original","originalDockerImageId":null,"isLanguageTemplate":false,"medal":null,"topicId":78269,"readGroupId":null,"writeGroupId":null,"slug":"rain-in-australia-binary-classification","hasUsedAccelerator":null,"pinnedSessionId":null,"disableComments":false,"hasLinkedSubmission":false},"kernelBlob":{"id":168753032,"settings":{"dockerImageVersionId":null,"dataSources":[{"sourceType":"DatasetVersion","sourceId":198179,"databundleVersionId":null,"mountSlug":null}],"sourceType":"notebook","language":"python","accelerator":"none","isInternetEnabled":false},"source":"{\u0022cells\u0022:[{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002231b2ed2e19ecb0c7f8ac86af880eb5520f7dbdea\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The content is daily weather observations from numerous Australian weather stations.\\n\\nThe target RainTomorrow means: Did it rain the next day? Yes or No.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022dfb8c6b9ad699dc1784fdbde84ef3b50db086c10\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Importing libraries and dataset\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022318f7ab54147832d30f8ed0a6120c4f1fca771ff\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022import pandas as pd\\nimport matplotlib.pyplot as plt\\nimport numpy as np\\nimport warnings\\nwarnings.filterwarnings(\u0027ignore\u0027)\\n\\ndata = pd.read_csv(\u0027../input/weatherAUS.csv\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00221ec9633a0249b6bae5517596f6c8c036de6de6ab\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Exploring the data\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022e51ddc36362266a75afc6dde97ea7998b7eb5f0f\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.shape\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022d7eaf8348da124c92e8578683f37822f80d28ffa\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.columns\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022be6d1803bc36fa19c9d12e86121c3b4c6454f36c\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.info()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022scrolled\u0022:true,\u0022_uuid\u0022:\u0022ea97dc7003cd33e4948ba24bd9ced7438a43ab12\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002260b8dd9750ef63186e303095114d6778c26ae049\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The dataset has below columns :\\n*  **DateThe** — date of observation\\n*  **Location** — The common name of the location of the weather station\\n*  **MinTemp** — The minimum temperature in degrees celsius\\n*  **MaxTemp** — The maximum temperature in degrees celsius\\n*  **Rainfall** — The amount of rainfall recorded for the day in mm\\n*  **Evaporation** — The so-called Class A pan evaporation (mm) in the 24 hours to 9am\\n*  **Sunshine** — The number of hours of bright sunshine in the day.\\n*  **WindGustDir** — The direction of the strongest wind gust in the 24 hours to midnight\\n*  **WindGustSpeed** — The speed (km/h) of the strongest wind gust in the 24 hours to midnight\\n*  **WindDir9am** — Direction of the wind at 9am\\n*  **WindDir3pm** — Direction of the wind at 3pm\\n*  **WindSpeed9am** — Wind speed (km/hr) averaged over 10 minutes prior to 9am\\n*  **WindSpeed3pm** — Wind speed (km/hr) averaged over 10 minutes prior to 3pm\\n*  **Humidity9am** — Humidity (percent) at 9am\\n*  **Humidity3pm** — Humidity (percent) at 3pm\\n*  **Pressure9am** — Atmospheric pressure (hpa) reduced to mean sea level at 9am\\n*  **Pressure3pm** — Atmospheric pressure (hpa) reduced to mean sea level at 3pm\\n*  **Cloud9am** — Fraction of sky obscured by cloud at 9am. This is measured in \\\u0022oktas\\\u0022, which are a unit of eigths. It records how many eigths of the sky are obscured by cloud. A 0 measure indicates completely clear *  sky whilst an 8 indicates that it is completely overcast.\\n*  **Cloud3pm** — Fraction of sky obscured by cloud (in \\\u0022oktas\\\u0022: eighths) at 3pm. See Cload9am for a description of the values\\n*  **Temp9am** — Temperature (degrees C) at 9am\\n*  **Temp3pm** — Temperature (degrees C) at 3pm\\n*  **RainToday** — Boolean: 1 if precipitation (mm) in the 24 hours to 9am exceeds 1mm, otherwise 0\\n*  **RISK_MM** — The amount of rain. A kind of measure of the \\\u0022risk\\\u0022.\\n*  **RainTomorrow** — The target variable. Did it rain tomorrow?\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022f4a7ada773daf68d94ec4a21050a456039ba1ba9\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The type of machine learning we will be doing is called **classification**, because when we make predictions we are classifying each day as rainy or not. More specifically, we are performing **binary classification**, which means that there are only two different states we are classifying.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022d97c8405855b1eba3c1b5437c817b7b90e0636dc\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Null values\\nLet\u0027s get rid of columns with significant amount of null values. And in the rest columns we will drop rows with null values. \u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00228fb97ccad2bbcb153a19225f66a18249b0a783ef\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data_null_percent = pd.Series(index=data.columns)\\n\\nfor column_name in data:\\n    data_null_percent[column_name] = data[column_name].count()/data.shape[0]\\n    \\ndata_null_percent_sorted = data_null_percent.sort_values()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002221fcccf21c8093c47cd2967eaa2f7e5f8c203f53\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data_null_percent_sorted.plot.barh()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022feb9825778471512260aba8304eb4921c99489a2\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022**Cloud9pm, Cloud3pm, Evaporation, and Sunshine** must be droped since significant amount of records in these columns is missed. Also we should exclude **RISK_MM** because it can leak the answers to the model and reduce its predictability.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00227d2beda1c088243bd2efc32745397745f863f517\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data = data.drop(columns=[\u0027Cloud9am\u0027,\u0027Cloud3pm\u0027, \u0027Evaporation\u0027, \u0027Sunshine\u0027,\u0027RISK_MM\u0027])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022da349918a5838d4acbe07b5a40abcadfc543c7d8\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Let\u0027s drop rows with null values in them.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022d7ed6ecad74739a64bd120a8416fe0e3469aa2e6\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data = data.dropna()\\ndata.isnull().any()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00228af31c194e1ca52de4044cb5ddbb0e4de7876512\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.shape\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223fdb0c913618aa87261e8ce8ccc051675efe3d06\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022e5996bd725838255c7fa32a0cb3eba312e189fbe\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Split into train and test\\nWe must be aware of one important thing: any change we make to the train data, we also need to make to the test data, otherwise we will be unable to use our model. \u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022849ac0cd5921dbbeacecae20eb26f39c2a439085\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022from sklearn.model_selection import train_test_split\\n\\ntrain, test = train_test_split(data, test_size=0.2)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002249bf48c2332f3dab36db19467685f2c47d35f411\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022print(\\\u0022train: \\\u0022 + str(train.shape) + \\\u0022, test: \\\u0022 + str(test.shape))\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002259fa434dc51ea294cd802f915fccd70d156f3d09\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Deal with categorical variables\\nTo apply such algorithms as Logistic Regression we need to convert the non-numeric data into numeric data. Categorical variables with only 2 possible values can be converted into variables with 0s and 1s as values. For categorical variables with 3 and more possible value we will create dummy variables.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022f9e4c281a66f1138c65f098aabccedcbe06d603b\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Convert values in columns \\\u0022RainToday\\\u0022 and \\\u0022RainTomorrow\\\u0022 from **\\\u0022No\\\u0022 and \\\u0022Yes\\\u0022** to **0 and 1**.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022ac71db490d14db29a40cce64a8ce21afcc089ae0\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train[\\\u0022RainToday\\\u0022] = train[\\\u0022RainToday\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\ntrain[\\\u0022RainTomorrow\\\u0022] = train[\\\u0022RainTomorrow\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\n\\ntest[\\\u0022RainToday\\\u0022] = test[\\\u0022RainToday\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\ntest[\\\u0022RainTomorrow\\\u0022] = test[\\\u0022RainTomorrow\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00220644e21612011e65f33061c101aec404ba449bfd\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Visualization of how categorical variables impact on forming tomorrow\u0027s rain\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022fcab5b1261d913cfc3f7d73bde2c7893804478d4\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022def category_impact_plot(variable, subplot_position):\\n    plt.subplot(subplot_position)\\n    pd.pivot_table(train, index=variable, values=\u0027RainTomorrow\u0027).plot.bar(figsize=(25,5), ax=plt.gca()) \\n   \\nplt.figure(1)\\ncategory_impact_plot(\\\u0022WindGustDir\\\u0022, 131)\\ncategory_impact_plot(\\\u0022WindDir9am\\\u0022, 132)\\ncategory_impact_plot(\\\u0022WindDir3pm\\\u0022, 133)\\n\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022a362b93c2313cd1d828418b3ed2efa040319de60\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Create dummy variables for **WindGustDir, WindDir9am, WindDir3pm**\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022c47c279ceb82fb36a7be4f0c7ae626edbde770c4\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022categorical_variables = [\\\u0022WindGustDir\\\u0022, \\\u0022WindDir9am\\\u0022, \\\u0022WindDir3pm\\\u0022]\\n\\ntrain = pd.get_dummies(train, columns=categorical_variables)\\ntest = pd.get_dummies(test, columns=categorical_variables)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022scrolled\u0022:true,\u0022_uuid\u0022:\u00224f3d702bdc16be1814a4c110d087d48bcd0de8ab\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022010626553ee3b9e966057d6dac2952c36c5df810\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Does Location affect the formation of rain?\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022ebfb1785fefce3c99e4b651df1e42df26986f753\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022location_pivot = train.pivot_table(index=\\\u0022Location\\\u0022, values=\\\u0022RainTomorrow\\\u0022)\\nlocation_pivot_sorted = location_pivot.sort_values(by=[\\\u0022RainTomorrow\\\u0022])\\n\\nlocation_pivot_sorted.plot.barh(figsize=(10,12))\\nplt.ylabel(\u0027\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022e731fe7090814088cd45106290a7d46857c79978\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Yes, **Location** obviously affect the formation of tomorrow\u0027s rain! So, we\u0027re going to use this variable, and in order to use this categorical variable we have to create dummies.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00221c062302e3c98834660da59a9c0f1273e0fad34a\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train = pd.get_dummies(train, columns=[\\\u0022Location\\\u0022])\\ntest = pd.get_dummies(test, columns=[\\\u0022Location\\\u0022])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022b5d39c623af266047f9934645597ce1f3aaf0201\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Does Date affect the formation of rain?\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00226570c6f8bba2ed4a8ae2f0488af4e64b5568cd7f\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train[\\\u0022Month\\\u0022] = pd.to_datetime(train[\\\u0022Date\\\u0022]).dt.month\\ntest[\\\u0022Month\\\u0022] = pd.to_datetime(test[\\\u0022Date\\\u0022]).dt.month\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223e2bbd761b9efcc5a450685087e7f35e81859a4b\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022date_pivot = train.pivot_table(index=\\\u0022Month\\\u0022, values=\\\u0022RainTomorrow\\\u0022)#.sort_index(ascending=False)\\n\\ndate_pivot.plot.barh()\\nplt.ylabel(\u0027\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00225b4cc7158323f9029a6ea6c222f3b155acdf82db\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022There\u0027s a certain tendency, season 6-8 is a rainy season.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022db0fc7287870e7efa07d62969bf45893529a6174\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train = pd.get_dummies(train, columns=[\\\u0022Month\\\u0022])\\ntest = pd.get_dummies(test, columns=[\\\u0022Month\\\u0022])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002289516c26f3d138f10e453d707080bae3f48daf2c\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Rescaling\\nLooking at our numeric columns, we can see a big difference between the range of each.  In order to make sure these values are equally weighted within our model, we\u0027ll need to rescale the data.\\n\\nRescaling simply stretches or shrinks the data as needed to be on the same scale, in our case between 0 and 1.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223c778d312db27e3db39fb8ce8d1256ec6d72e467\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# the preprocessing.minmax_scale() function allows us to quickly and easily rescale our data\\nfrom sklearn.preprocessing import minmax_scale\\n\\n# Added 2 backets to make it a dataframe. Otherwise you will get a type error stating cannot iterate over 0-d array.\\ndef apply_minmax_scale(dataset, features):\\n    for feature in features:\\n        dataset[feature] = minmax_scale(dataset[[feature]])\\n        \\nnumerical_features = [\\\u0022MinTemp\\\u0022,\\\u0022MaxTemp\\\u0022, \\\u0022Rainfall\\\u0022, \\\u0022WindGustSpeed\\\u0022, \\\u0022WindSpeed9am\\\u0022,\\n                     \\\u0022WindSpeed3pm\\\u0022, \\\u0022Humidity9am\\\u0022, \\\u0022Humidity3pm\\\u0022, \\\u0022Pressure9am\\\u0022, \\n                     \\\u0022Pressure3pm\\\u0022, \\\u0022Temp9am\\\u0022, \\\u0022Temp3pm\\\u0022]\\n\\napply_minmax_scale(train, numerical_features)\\napply_minmax_scale(test, numerical_features)\\n\\ntrain[numerical_features].head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00221a2385d11c2820b6ae56aae5050decc4d431154b\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Visualization of how numerical variables impact on forming tomorrow\u0027s rain\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002214869592105a824b28025795ea78d648d0fe4aeb\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022rainTomorrow_yes = train[train[\\\u0022RainTomorrow\\\u0022] == 1]\\nrainTomorrow_no = train[train[\\\u0022RainTomorrow\\\u0022] == 0]\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00224da3c57a60ddd43a4b22f07751310fbbf4773408\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022def variable_impact_plot(variable, subplot_position):\\n    plt.subplot(subplot_position)\\n    rainTomorrow_yes[variable].plot.hist(figsize=(25,10), alpha=0.5, color=\\\u0022blue\\\u0022, bins=50, ax=plt.gca())\\n    rainTomorrow_no[variable].plot.hist(figsize=(25,10), alpha=0.5, color=\\\u0022yellow\\\u0022, bins=50, ax=plt.gca())\\n    plt.ylabel(\u0027\u0027)\\n    plt.xticks([], [])\\n    plt.yticks([], [])\\n    plt.title(variable)\\n\\nplt.figure(1)\\nvariable_impact_plot(\\\u0022MinTemp\\\u0022, 341)\\nvariable_impact_plot(\\\u0022MaxTemp\\\u0022, 342)\\nvariable_impact_plot(\\\u0022Rainfall\\\u0022, 343)\\nvariable_impact_plot(\\\u0022WindGustSpeed\\\u0022, 344)\\nvariable_impact_plot(\\\u0022WindSpeed9am\\\u0022, 345)\\nvariable_impact_plot(\\\u0022WindSpeed3pm\\\u0022, 346)\\nvariable_impact_plot(\\\u0022Humidity9am\\\u0022, 347)\\nvariable_impact_plot(\\\u0022Humidity3pm\\\u0022, 348)\\nplt.figure(2)\\nvariable_impact_plot(\\\u0022Pressure9am\\\u0022, 341)\\nvariable_impact_plot(\\\u0022Pressure3pm\\\u0022, 342)\\nvariable_impact_plot(\\\u0022Temp9am\\\u0022, 343)\\nvariable_impact_plot(\\\u0022Temp3pm\\\u0022, 344)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022853d1ba44aa4208e8701c584c9dd5e7c2a891ec2\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We are intrested in variables with plots where blue and yellow areas have different shapes. Such variables have impact(positive or negative) on forming tomorrow\u0027s rain. The most obvious one is **Humidity3pm**! The rest is not that clear, we will use another feature selection method.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022ee33f0c763d37f8f200051527aaeb9f5813c9ef5\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Collinearity\\nWe now have 73 possible feature columns we can use to train our model. One thing to be aware of as you start to add more features is a concept called collinearity. Collinearity occurs where more than one feature contains data that are similar.\\n\\nThe effect of collinearity is that your model will overfit - you may get great results on your test data set, but then the model performs worse on unseen data (like the test set).\\n\\n A common way to spot collinearity is to plot correlations between each pair of variables in a heatmap.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002275ce8b9914f828834c7eb1a803561a33f212f35a\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# columns we will be using all the way down\\ncolumns = list(train.columns[1:])\\ncolumns.remove(\\\u0022RainTomorrow\\\u0022)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00221af0e23dc31e2fdb91874dcf0f9c1b06773640ae\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022import seaborn as sns\\n\\n# custom function to set the style for heatmap\\ndef plot_correlation_heatmap(df):\\n    corr = df.corr()\\n    sns.set(style=\\\u0022white\\\u0022)\\n    mask = np.zeros_like(corr, dtype=np.bool)\\n    mask[np.triu_indices_from(mask)] = True\\n\\n    f, ax = plt.subplots(figsize=(30, 25))\\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\\n\\n    sns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\\n            square=True, linewidths=.5, cbar_kws={\\\u0022shrink\\\u0022: .5})\\n    plt.show()\\n\\nplot_correlation_heatmap(train[columns])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00225fe4f199d4d286f7f16f675a5efe4fdf91470f22\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We can see that there is correlation about 30-50% between some variables. That\u0027s not enough to remove one of them and rely on the other.\\n\\nApart from that, we should remove one of each of our dummy variables to reduce the collinearity in each. We\u0027ll remove:\\n* WindGustDir_E\\n* WindDir9am_E\\n* WindDir3pm_E\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022b01c064cb7a4837e58a5a2d45fb3ffeb9e5f0537\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Feature selection\\nIn order to select the best-performing features, we need a way to measure which of our features are relevant to our outcome - in this case, the impact on forming tomorrow\u0027s rain. One effective way is by training a logistic regression model using all of our features, and then looking at the coefficients of each feature.\\n\\nThe scikit-learn LogisticRegression class has an attribute in which coefficients are stored after the model is fit, LogisticRegression.coef_. We first need to train our model, after which we can access this attribute.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022368e67f19c5a95c9c23ac2c5ee88a2191d94c904\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Applying Logistic Regression\\nfrom sklearn.linear_model import LogisticRegression\\nlogisticRegression = LogisticRegression()\\nlogisticRegression.fit(train[columns], train[\\\u0022RainTomorrow\\\u0022])\\ncoefficients = logisticRegression.coef_\\nprint(coefficients)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002272ada86197e728c8cd8b69bad4e11d370c5a5a7a\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The coef() method returns a NumPy array of coefficients, in the same order as the features that were used to fit the model. To make these easier to interpret, we can convert the coefficients to a pandas series, adding the column names as the index:\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00226845e939c7bf964d1c903b02eadc87283ab96942\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022feature_importance = pd.Series(coefficients[0], index=columns)\\nprint(feature_importance)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022f3538f64c80a174cdfe20b95edf1106e8f5d5692\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Plotting as a horizontal Bar chart\\nfeature_importance.plot.barh(figsize=(10,25))\\nplt.show()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022c161eb0d614004de3d44d66656d9a5055fb70cf0\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The plot we generated shows a range of both positive and negative values. Whether the value is positive or negative isn\u0027t as important in this case, relative to the magnitude of the value. If you think about it, this makes sense. A feature that indicates strongly whether a it\u0027s not going to rain tomorrow is just as useful as a feature that indicates strongly that a it\u0027s going to rain tomorrow, given they are mutually exclusive outcomes.\\n\\nTo make things easier to interpret, we\u0027ll alter the plot to show all positive values, and have sorted the bars in order of size:\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002213ac54660ab96daa26a9637b0f28966babf1954c\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022ordered_feature_importance = feature_importance.abs().sort_values()\\nordered_feature_importance.plot.barh(figsize=(10,25))\\nplt.show()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022942db813dbd14151c9fb65d01ee3a46c6c7e1e22\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We\u0027ll train a model with the top 4 scores.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022de4fb218eeadc373d4ce3d361ad5f7c65ca3f9e8\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022predictors = [\\\u0022Pressure3pm\\\u0022, \\\u0022WindGustSpeed\\\u0022, \\\u0022Pressure9am\\\u0022, \\\u0022Humidity3pm\\\u0022]\\n\\nlr = LogisticRegression()\\nlr.fit(train[predictors], train[\\\u0022RainTomorrow\\\u0022])\\npredictions = lr.predict(test[predictors])\\nprint(predictions)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00224014e6b138401cdb7f2d58f547a6dab67e371d74\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Calculating the accuracy using the k-fold cross validation method with k=10\\nfrom sklearn.model_selection import cross_val_score\\nscores = cross_val_score(lr, train[predictors], train[\\\u0022RainTomorrow\\\u0022], cv=10)\\nprint(scores)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022a4fd1d153e18d365476b86c07a82de4515ac5cee\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Taking the mean of all the scores\\naccuracy = scores.mean()\\nprint(accuracy)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]}],\u0022metadata\u0022:{\u0022kernelspec\u0022:{\u0022display_name\u0022:\u0022Python 3\u0022,\u0022language\u0022:\u0022python\u0022,\u0022name\u0022:\u0022python3\u0022},\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022,\u0022version\u0022:\u00223.6.6\u0022,\u0022mimetype\u0022:\u0022text/x-python\u0022,\u0022codemirror_mode\u0022:{\u0022name\u0022:\u0022ipython\u0022,\u0022version\u0022:3},\u0022pygments_lexer\u0022:\u0022ipython3\u0022,\u0022nbconvert_exporter\u0022:\u0022python\u0022,\u0022file_extension\u0022:\u0022.py\u0022}},\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:1}","dateCreated":"2019-01-17T22:38:23.4422542Z"},"kernelRun":{"id":9653374,"kernelId":2584329,"status":"complete","type":"batch","sourceType":"notebook","language":"python","title":"Rain in Australia. Binary classification","dateCreated":"2019-01-17T22:38:23.523Z","dateEvaluated":"2019-01-17T22:38:24.057Z","dateCancelled":null,"workerContainerPort":null,"workerUptimeSeconds":12580,"workerIPAddress":"172.20.2.67    ","workerIPAddressExternal":null,"scriptLanguageId":9,"scriptLanguageName":"IPython Notebook HTML","renderedOutputUrl":"https://www.kaggleusercontent.com/kf/9653374/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..9b0GNqKwm9gnPItsJY4Rqw.tI7Ej7Ub5MKEqR4u1bTcu1EpsL7nPVk1TbjU5ti250VnvOxysmFxKmGTO2e9Uu2oxuLSlXJGHeFVI0KEb6DCu9cjO32eMrqolHZlYpJPPMQgvU675BXhBjmvwrap-f8QtsTQeSvAjKYZ9DgKUHKbhhWlFZVZ8JS0Mx7ayWARjPGSoXZEoXLp7MplesdvVD75nVdaDeqr69yNiEBU6lr0nT3fCtcp5fMefIxOzOCmxMVvt7EnGe_rY6gG70q5jh3BYQbh9wP8gazf1bMD_nIJqPhUA0bLBdSWSk-lk0NreK7_uN2P1A19heSwrbfKfbJJu7WY3f-6GYz548oZSCRCnc__OnQ9xkJv5ZsqovMKpc1mVsQiJmcK37E-3emE8r5oOopptmeepAq-udCDFHxxY055iqF2E1L8hVY839hRxFHI8oh2VgW-5AorIsbzr9y3MqrzjDE-ye3pRpTwsPy_CjoKEc8y2SgpShfh4Rv7LyngRXGtKt8pxPx1Vk10RRnZrdhrSphXHXpNOaCg2XyyTuMzGWUcoxk1LQpYus9UeS-soYEWfxJxvYDC4MnHHvGbjrGwMn7uz5z4_YPie4fhXbyHkSA04HIcy-FEff4DWfsXb9W7IqvCH-bra5oG4kmZDzHLrBLNjnVO5FkifOYBZbKEMpqpCSe4Xc31EIQvMd-PCyvxgpJD6Yb5CbO93Hpm.EdKeP4vaOJ5kl00p8i8QnA/__results__.html","commit":{"id":168753032,"settings":{"dockerImageVersionId":null,"dataSources":[{"sourceType":"DatasetVersion","sourceId":198179,"databundleVersionId":null,"mountSlug":null}],"sourceType":"notebook","language":"python","accelerator":"none","isInternetEnabled":false},"source":"{\u0022cells\u0022:[{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002231b2ed2e19ecb0c7f8ac86af880eb5520f7dbdea\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The content is daily weather observations from numerous Australian weather stations.\\n\\nThe target RainTomorrow means: Did it rain the next day? Yes or No.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022dfb8c6b9ad699dc1784fdbde84ef3b50db086c10\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Importing libraries and dataset\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022318f7ab54147832d30f8ed0a6120c4f1fca771ff\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022import pandas as pd\\nimport matplotlib.pyplot as plt\\nimport numpy as np\\nimport warnings\\nwarnings.filterwarnings(\u0027ignore\u0027)\\n\\ndata = pd.read_csv(\u0027../input/weatherAUS.csv\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00221ec9633a0249b6bae5517596f6c8c036de6de6ab\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Exploring the data\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022e51ddc36362266a75afc6dde97ea7998b7eb5f0f\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.shape\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022d7eaf8348da124c92e8578683f37822f80d28ffa\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.columns\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022be6d1803bc36fa19c9d12e86121c3b4c6454f36c\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.info()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022scrolled\u0022:true,\u0022_uuid\u0022:\u0022ea97dc7003cd33e4948ba24bd9ced7438a43ab12\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002260b8dd9750ef63186e303095114d6778c26ae049\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The dataset has below columns :\\n*  **DateThe** — date of observation\\n*  **Location** — The common name of the location of the weather station\\n*  **MinTemp** — The minimum temperature in degrees celsius\\n*  **MaxTemp** — The maximum temperature in degrees celsius\\n*  **Rainfall** — The amount of rainfall recorded for the day in mm\\n*  **Evaporation** — The so-called Class A pan evaporation (mm) in the 24 hours to 9am\\n*  **Sunshine** — The number of hours of bright sunshine in the day.\\n*  **WindGustDir** — The direction of the strongest wind gust in the 24 hours to midnight\\n*  **WindGustSpeed** — The speed (km/h) of the strongest wind gust in the 24 hours to midnight\\n*  **WindDir9am** — Direction of the wind at 9am\\n*  **WindDir3pm** — Direction of the wind at 3pm\\n*  **WindSpeed9am** — Wind speed (km/hr) averaged over 10 minutes prior to 9am\\n*  **WindSpeed3pm** — Wind speed (km/hr) averaged over 10 minutes prior to 3pm\\n*  **Humidity9am** — Humidity (percent) at 9am\\n*  **Humidity3pm** — Humidity (percent) at 3pm\\n*  **Pressure9am** — Atmospheric pressure (hpa) reduced to mean sea level at 9am\\n*  **Pressure3pm** — Atmospheric pressure (hpa) reduced to mean sea level at 3pm\\n*  **Cloud9am** — Fraction of sky obscured by cloud at 9am. This is measured in \\\u0022oktas\\\u0022, which are a unit of eigths. It records how many eigths of the sky are obscured by cloud. A 0 measure indicates completely clear *  sky whilst an 8 indicates that it is completely overcast.\\n*  **Cloud3pm** — Fraction of sky obscured by cloud (in \\\u0022oktas\\\u0022: eighths) at 3pm. See Cload9am for a description of the values\\n*  **Temp9am** — Temperature (degrees C) at 9am\\n*  **Temp3pm** — Temperature (degrees C) at 3pm\\n*  **RainToday** — Boolean: 1 if precipitation (mm) in the 24 hours to 9am exceeds 1mm, otherwise 0\\n*  **RISK_MM** — The amount of rain. A kind of measure of the \\\u0022risk\\\u0022.\\n*  **RainTomorrow** — The target variable. Did it rain tomorrow?\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022f4a7ada773daf68d94ec4a21050a456039ba1ba9\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The type of machine learning we will be doing is called **classification**, because when we make predictions we are classifying each day as rainy or not. More specifically, we are performing **binary classification**, which means that there are only two different states we are classifying.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022d97c8405855b1eba3c1b5437c817b7b90e0636dc\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Null values\\nLet\u0027s get rid of columns with significant amount of null values. And in the rest columns we will drop rows with null values. \u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00228fb97ccad2bbcb153a19225f66a18249b0a783ef\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data_null_percent = pd.Series(index=data.columns)\\n\\nfor column_name in data:\\n    data_null_percent[column_name] = data[column_name].count()/data.shape[0]\\n    \\ndata_null_percent_sorted = data_null_percent.sort_values()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002221fcccf21c8093c47cd2967eaa2f7e5f8c203f53\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data_null_percent_sorted.plot.barh()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022feb9825778471512260aba8304eb4921c99489a2\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022**Cloud9pm, Cloud3pm, Evaporation, and Sunshine** must be droped since significant amount of records in these columns is missed. Also we should exclude **RISK_MM** because it can leak the answers to the model and reduce its predictability.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00227d2beda1c088243bd2efc32745397745f863f517\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data = data.drop(columns=[\u0027Cloud9am\u0027,\u0027Cloud3pm\u0027, \u0027Evaporation\u0027, \u0027Sunshine\u0027,\u0027RISK_MM\u0027])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022da349918a5838d4acbe07b5a40abcadfc543c7d8\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Let\u0027s drop rows with null values in them.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022d7ed6ecad74739a64bd120a8416fe0e3469aa2e6\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data = data.dropna()\\ndata.isnull().any()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00228af31c194e1ca52de4044cb5ddbb0e4de7876512\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.shape\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223fdb0c913618aa87261e8ce8ccc051675efe3d06\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022data.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022e5996bd725838255c7fa32a0cb3eba312e189fbe\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Split into train and test\\nWe must be aware of one important thing: any change we make to the train data, we also need to make to the test data, otherwise we will be unable to use our model. \u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022849ac0cd5921dbbeacecae20eb26f39c2a439085\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022from sklearn.model_selection import train_test_split\\n\\ntrain, test = train_test_split(data, test_size=0.2)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002249bf48c2332f3dab36db19467685f2c47d35f411\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022print(\\\u0022train: \\\u0022 + str(train.shape) + \\\u0022, test: \\\u0022 + str(test.shape))\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002259fa434dc51ea294cd802f915fccd70d156f3d09\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Deal with categorical variables\\nTo apply such algorithms as Logistic Regression we need to convert the non-numeric data into numeric data. Categorical variables with only 2 possible values can be converted into variables with 0s and 1s as values. For categorical variables with 3 and more possible value we will create dummy variables.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022f9e4c281a66f1138c65f098aabccedcbe06d603b\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Convert values in columns \\\u0022RainToday\\\u0022 and \\\u0022RainTomorrow\\\u0022 from **\\\u0022No\\\u0022 and \\\u0022Yes\\\u0022** to **0 and 1**.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022ac71db490d14db29a40cce64a8ce21afcc089ae0\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train[\\\u0022RainToday\\\u0022] = train[\\\u0022RainToday\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\ntrain[\\\u0022RainTomorrow\\\u0022] = train[\\\u0022RainTomorrow\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\n\\ntest[\\\u0022RainToday\\\u0022] = test[\\\u0022RainToday\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\\ntest[\\\u0022RainTomorrow\\\u0022] = test[\\\u0022RainTomorrow\\\u0022].map({\\\u0022No\\\u0022:0, \\\u0022Yes\\\u0022:1})\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00220644e21612011e65f33061c101aec404ba449bfd\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Visualization of how categorical variables impact on forming tomorrow\u0027s rain\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022fcab5b1261d913cfc3f7d73bde2c7893804478d4\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022def category_impact_plot(variable, subplot_position):\\n    plt.subplot(subplot_position)\\n    pd.pivot_table(train, index=variable, values=\u0027RainTomorrow\u0027).plot.bar(figsize=(25,5), ax=plt.gca()) \\n   \\nplt.figure(1)\\ncategory_impact_plot(\\\u0022WindGustDir\\\u0022, 131)\\ncategory_impact_plot(\\\u0022WindDir9am\\\u0022, 132)\\ncategory_impact_plot(\\\u0022WindDir3pm\\\u0022, 133)\\n\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022a362b93c2313cd1d828418b3ed2efa040319de60\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Create dummy variables for **WindGustDir, WindDir9am, WindDir3pm**\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022c47c279ceb82fb36a7be4f0c7ae626edbde770c4\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022categorical_variables = [\\\u0022WindGustDir\\\u0022, \\\u0022WindDir9am\\\u0022, \\\u0022WindDir3pm\\\u0022]\\n\\ntrain = pd.get_dummies(train, columns=categorical_variables)\\ntest = pd.get_dummies(test, columns=categorical_variables)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022scrolled\u0022:true,\u0022_uuid\u0022:\u00224f3d702bdc16be1814a4c110d087d48bcd0de8ab\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train.head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022010626553ee3b9e966057d6dac2952c36c5df810\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Does Location affect the formation of rain?\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022ebfb1785fefce3c99e4b651df1e42df26986f753\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022location_pivot = train.pivot_table(index=\\\u0022Location\\\u0022, values=\\\u0022RainTomorrow\\\u0022)\\nlocation_pivot_sorted = location_pivot.sort_values(by=[\\\u0022RainTomorrow\\\u0022])\\n\\nlocation_pivot_sorted.plot.barh(figsize=(10,12))\\nplt.ylabel(\u0027\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022e731fe7090814088cd45106290a7d46857c79978\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022Yes, **Location** obviously affect the formation of tomorrow\u0027s rain! So, we\u0027re going to use this variable, and in order to use this categorical variable we have to create dummies.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00221c062302e3c98834660da59a9c0f1273e0fad34a\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train = pd.get_dummies(train, columns=[\\\u0022Location\\\u0022])\\ntest = pd.get_dummies(test, columns=[\\\u0022Location\\\u0022])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022b5d39c623af266047f9934645597ce1f3aaf0201\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Does Date affect the formation of rain?\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00226570c6f8bba2ed4a8ae2f0488af4e64b5568cd7f\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train[\\\u0022Month\\\u0022] = pd.to_datetime(train[\\\u0022Date\\\u0022]).dt.month\\ntest[\\\u0022Month\\\u0022] = pd.to_datetime(test[\\\u0022Date\\\u0022]).dt.month\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223e2bbd761b9efcc5a450685087e7f35e81859a4b\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022date_pivot = train.pivot_table(index=\\\u0022Month\\\u0022, values=\\\u0022RainTomorrow\\\u0022)#.sort_index(ascending=False)\\n\\ndate_pivot.plot.barh()\\nplt.ylabel(\u0027\u0027)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00225b4cc7158323f9029a6ea6c222f3b155acdf82db\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022There\u0027s a certain tendency, season 6-8 is a rainy season.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022db0fc7287870e7efa07d62969bf45893529a6174\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022train = pd.get_dummies(train, columns=[\\\u0022Month\\\u0022])\\ntest = pd.get_dummies(test, columns=[\\\u0022Month\\\u0022])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u002289516c26f3d138f10e453d707080bae3f48daf2c\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Rescaling\\nLooking at our numeric columns, we can see a big difference between the range of each.  In order to make sure these values are equally weighted within our model, we\u0027ll need to rescale the data.\\n\\nRescaling simply stretches or shrinks the data as needed to be on the same scale, in our case between 0 and 1.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00223c778d312db27e3db39fb8ce8d1256ec6d72e467\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# the preprocessing.minmax_scale() function allows us to quickly and easily rescale our data\\nfrom sklearn.preprocessing import minmax_scale\\n\\n# Added 2 backets to make it a dataframe. Otherwise you will get a type error stating cannot iterate over 0-d array.\\ndef apply_minmax_scale(dataset, features):\\n    for feature in features:\\n        dataset[feature] = minmax_scale(dataset[[feature]])\\n        \\nnumerical_features = [\\\u0022MinTemp\\\u0022,\\\u0022MaxTemp\\\u0022, \\\u0022Rainfall\\\u0022, \\\u0022WindGustSpeed\\\u0022, \\\u0022WindSpeed9am\\\u0022,\\n                     \\\u0022WindSpeed3pm\\\u0022, \\\u0022Humidity9am\\\u0022, \\\u0022Humidity3pm\\\u0022, \\\u0022Pressure9am\\\u0022, \\n                     \\\u0022Pressure3pm\\\u0022, \\\u0022Temp9am\\\u0022, \\\u0022Temp3pm\\\u0022]\\n\\napply_minmax_scale(train, numerical_features)\\napply_minmax_scale(test, numerical_features)\\n\\ntrain[numerical_features].head()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u00221a2385d11c2820b6ae56aae5050decc4d431154b\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Visualization of how numerical variables impact on forming tomorrow\u0027s rain\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002214869592105a824b28025795ea78d648d0fe4aeb\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022rainTomorrow_yes = train[train[\\\u0022RainTomorrow\\\u0022] == 1]\\nrainTomorrow_no = train[train[\\\u0022RainTomorrow\\\u0022] == 0]\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00224da3c57a60ddd43a4b22f07751310fbbf4773408\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022def variable_impact_plot(variable, subplot_position):\\n    plt.subplot(subplot_position)\\n    rainTomorrow_yes[variable].plot.hist(figsize=(25,10), alpha=0.5, color=\\\u0022blue\\\u0022, bins=50, ax=plt.gca())\\n    rainTomorrow_no[variable].plot.hist(figsize=(25,10), alpha=0.5, color=\\\u0022yellow\\\u0022, bins=50, ax=plt.gca())\\n    plt.ylabel(\u0027\u0027)\\n    plt.xticks([], [])\\n    plt.yticks([], [])\\n    plt.title(variable)\\n\\nplt.figure(1)\\nvariable_impact_plot(\\\u0022MinTemp\\\u0022, 341)\\nvariable_impact_plot(\\\u0022MaxTemp\\\u0022, 342)\\nvariable_impact_plot(\\\u0022Rainfall\\\u0022, 343)\\nvariable_impact_plot(\\\u0022WindGustSpeed\\\u0022, 344)\\nvariable_impact_plot(\\\u0022WindSpeed9am\\\u0022, 345)\\nvariable_impact_plot(\\\u0022WindSpeed3pm\\\u0022, 346)\\nvariable_impact_plot(\\\u0022Humidity9am\\\u0022, 347)\\nvariable_impact_plot(\\\u0022Humidity3pm\\\u0022, 348)\\nplt.figure(2)\\nvariable_impact_plot(\\\u0022Pressure9am\\\u0022, 341)\\nvariable_impact_plot(\\\u0022Pressure3pm\\\u0022, 342)\\nvariable_impact_plot(\\\u0022Temp9am\\\u0022, 343)\\nvariable_impact_plot(\\\u0022Temp3pm\\\u0022, 344)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022853d1ba44aa4208e8701c584c9dd5e7c2a891ec2\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We are intrested in variables with plots where blue and yellow areas have different shapes. Such variables have impact(positive or negative) on forming tomorrow\u0027s rain. The most obvious one is **Humidity3pm**! The rest is not that clear, we will use another feature selection method.\u0022},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022ee33f0c763d37f8f200051527aaeb9f5813c9ef5\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Collinearity\\nWe now have 73 possible feature columns we can use to train our model. One thing to be aware of as you start to add more features is a concept called collinearity. Collinearity occurs where more than one feature contains data that are similar.\\n\\nThe effect of collinearity is that your model will overfit - you may get great results on your test data set, but then the model performs worse on unseen data (like the test set).\\n\\n A common way to spot collinearity is to plot correlations between each pair of variables in a heatmap.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002275ce8b9914f828834c7eb1a803561a33f212f35a\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# columns we will be using all the way down\\ncolumns = list(train.columns[1:])\\ncolumns.remove(\\\u0022RainTomorrow\\\u0022)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00221af0e23dc31e2fdb91874dcf0f9c1b06773640ae\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022import seaborn as sns\\n\\n# custom function to set the style for heatmap\\ndef plot_correlation_heatmap(df):\\n    corr = df.corr()\\n    sns.set(style=\\\u0022white\\\u0022)\\n    mask = np.zeros_like(corr, dtype=np.bool)\\n    mask[np.triu_indices_from(mask)] = True\\n\\n    f, ax = plt.subplots(figsize=(30, 25))\\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\\n\\n    sns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\\n            square=True, linewidths=.5, cbar_kws={\\\u0022shrink\\\u0022: .5})\\n    plt.show()\\n\\nplot_correlation_heatmap(train[columns])\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00225fe4f199d4d286f7f16f675a5efe4fdf91470f22\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We can see that there is correlation about 30-50% between some variables. That\u0027s not enough to remove one of them and rely on the other.\\n\\nApart from that, we should remove one of each of our dummy variables to reduce the collinearity in each. We\u0027ll remove:\\n* WindGustDir_E\\n* WindDir9am_E\\n* WindDir3pm_E\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022b01c064cb7a4837e58a5a2d45fb3ffeb9e5f0537\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022# Feature selection\\nIn order to select the best-performing features, we need a way to measure which of our features are relevant to our outcome - in this case, the impact on forming tomorrow\u0027s rain. One effective way is by training a logistic regression model using all of our features, and then looking at the coefficients of each feature.\\n\\nThe scikit-learn LogisticRegression class has an attribute in which coefficients are stored after the model is fit, LogisticRegression.coef_. We first need to train our model, after which we can access this attribute.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022368e67f19c5a95c9c23ac2c5ee88a2191d94c904\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Applying Logistic Regression\\nfrom sklearn.linear_model import LogisticRegression\\nlogisticRegression = LogisticRegression()\\nlogisticRegression.fit(train[columns], train[\\\u0022RainTomorrow\\\u0022])\\ncoefficients = logisticRegression.coef_\\nprint(coefficients)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002272ada86197e728c8cd8b69bad4e11d370c5a5a7a\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The coef() method returns a NumPy array of coefficients, in the same order as the features that were used to fit the model. To make these easier to interpret, we can convert the coefficients to a pandas series, adding the column names as the index:\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00226845e939c7bf964d1c903b02eadc87283ab96942\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022feature_importance = pd.Series(coefficients[0], index=columns)\\nprint(feature_importance)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022f3538f64c80a174cdfe20b95edf1106e8f5d5692\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Plotting as a horizontal Bar chart\\nfeature_importance.plot.barh(figsize=(10,25))\\nplt.show()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022c161eb0d614004de3d44d66656d9a5055fb70cf0\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022The plot we generated shows a range of both positive and negative values. Whether the value is positive or negative isn\u0027t as important in this case, relative to the magnitude of the value. If you think about it, this makes sense. A feature that indicates strongly whether a it\u0027s not going to rain tomorrow is just as useful as a feature that indicates strongly that a it\u0027s going to rain tomorrow, given they are mutually exclusive outcomes.\\n\\nTo make things easier to interpret, we\u0027ll alter the plot to show all positive values, and have sorted the bars in order of size:\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u002213ac54660ab96daa26a9637b0f28966babf1954c\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022ordered_feature_importance = feature_importance.abs().sort_values()\\nordered_feature_importance.plot.barh(figsize=(10,25))\\nplt.show()\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022_uuid\u0022:\u0022942db813dbd14151c9fb65d01ee3a46c6c7e1e22\u0022},\u0022cell_type\u0022:\u0022markdown\u0022,\u0022source\u0022:\u0022We\u0027ll train a model with the top 4 scores.\u0022},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022de4fb218eeadc373d4ce3d361ad5f7c65ca3f9e8\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022predictors = [\\\u0022Pressure3pm\\\u0022, \\\u0022WindGustSpeed\\\u0022, \\\u0022Pressure9am\\\u0022, \\\u0022Humidity3pm\\\u0022]\\n\\nlr = LogisticRegression()\\nlr.fit(train[predictors], train[\\\u0022RainTomorrow\\\u0022])\\npredictions = lr.predict(test[predictors])\\nprint(predictions)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u00224014e6b138401cdb7f2d58f547a6dab67e371d74\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Calculating the accuracy using the k-fold cross validation method with k=10\\nfrom sklearn.model_selection import cross_val_score\\nscores = cross_val_score(lr, train[predictors], train[\\\u0022RainTomorrow\\\u0022], cv=10)\\nprint(scores)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]},{\u0022metadata\u0022:{\u0022trusted\u0022:true,\u0022_uuid\u0022:\u0022a4fd1d153e18d365476b86c07a82de4515ac5cee\u0022},\u0022cell_type\u0022:\u0022code\u0022,\u0022source\u0022:\u0022# Taking the mean of all the scores\\naccuracy = scores.mean()\\nprint(accuracy)\u0022,\u0022execution_count\u0022:null,\u0022outputs\u0022:[]}],\u0022metadata\u0022:{\u0022kernelspec\u0022:{\u0022display_name\u0022:\u0022Python 3\u0022,\u0022language\u0022:\u0022python\u0022,\u0022name\u0022:\u0022python3\u0022},\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022,\u0022version\u0022:\u00223.6.6\u0022,\u0022mimetype\u0022:\u0022text/x-python\u0022,\u0022codemirror_mode\u0022:{\u0022name\u0022:\u0022ipython\u0022,\u0022version\u0022:3},\u0022pygments_lexer\u0022:\u0022ipython3\u0022,\u0022nbconvert_exporter\u0022:\u0022python\u0022,\u0022file_extension\u0022:\u0022.py\u0022}},\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:1}","dateCreated":"2019-01-17T22:38:23.4422542Z"},"resources":null,"isolatorResults":"\u003cresults\u003e\u003cdisk_kb_free\u003e4821340\u003c/disk_kb_free\u003e\u003cdocker_image_digest\u003e1608d7a1ab13555cef49e4327d64aab32e4f9fcf47a708dea2bc21a0c084c446\u003c/docker_image_digest\u003e\u003cdocker_image_id\u003esha256:73bf8bed066338773b5cc6af6e4d3e44e96d4cc708e42394734ecde05f956f61\u003c/docker_image_id\u003e\u003cdocker_image_name\u003egcr.io/kaggle-images/python\u003c/docker_image_name\u003e\u003cexit_code\u003e0\u003c/exit_code\u003e\u003cfailure_message /\u003e\u003cinvalid_path_errors\u003eFalse\u003c/invalid_path_errors\u003e\u003cout_of_memory\u003eFalse\u003c/out_of_memory\u003e\u003crun_time_seconds\u003e31.8383898569991\u003c/run_time_seconds\u003e\u003csucceeded\u003eTrue\u003c/succeeded\u003e\u003ctimeout_exceeded\u003eFalse\u003c/timeout_exceeded\u003e\u003cused_all_space\u003eFalse\u003c/used_all_space\u003e\u003cwas_killed\u003eFalse\u003c/was_killed\u003e\u003c/results\u003e","runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://gcr.io/kaggle-images/python","dockerImageDigest":"1608d7a1ab13555cef49e4327d64aab32e4f9fcf47a708dea2bc21a0c084c446","dockerImageId":"sha256:73bf8bed066338773b5cc6af6e4d3e44e96d4cc708e42394734ecde05f956f61","dockerImageName":"gcr.io/kaggle-images/python","diskKbFree":4821340,"failureMessage":"","exitCode":0,"queuedSeconds":0,"outputSizeBytes":0,"runTimeSeconds":31.8383898569991,"usedAllSpace":false,"timeoutExceeded":false,"isValidStatus":false,"wasGpuEnabled":false,"wasInternetEnabled":false,"outOfMemory":false,"invalidPathErrors":false,"succeeded":true,"wasKilled":false},"dockerImageVersionId":20477,"usedCustomDockerImage":false,"dataSources":[{"sourceType":"DatasetVersion","sourceId":198179,"databundleVersionId":null,"mountSlug":""}],"useNewKernelsBackend":null,"isGpuEnabled":false,"isTpuEnabled":false,"isInternetEnabled":false},"author":{"id":2052128,"displayName":"Maksim Naumov","email":null,"editedEmail":null,"editedEmailCode":null,"userName":"naumov1889","thumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg","profileUrl":"/naumov1889","registerDate":"0001-01-01T00:00:00Z","lastVisitDate":"0001-01-01T00:00:00Z","statusId":0,"performanceTier":1,"userRoles":null,"userLogins":null,"groupIds":null,"duplicateUsers":null,"hasPhoneVerifications":false,"failedNerdchas":0,"hasPendingNerdcha":false,"deleteRequests":null,"userAttributes":null,"isAdmin":false,"isKaggleBot":false,"isAnonymous":false,"canAct":false,"canBeSeen":false,"thumbnailName":null,"isPhoneVerified":false},"baseUrl":"/naumov1889/rain-in-australia-binary-classification","collaborators":{"owner":{"userId":2052128,"groupId":null,"groupMemberCount":null,"profileUrl":"/naumov1889","thumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg","name":"Maksim Naumov","slug":"naumov1889","userTier":1,"joinDate":null,"type":"owner","isUser":true,"isGroup":false},"collaborators":[]},"initialTab":null,"log":"[{\n  \u0022data\u0022: \u0022[NbConvertApp] Converting notebook script.ipynb to html\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 3.783271041000262\n},{\n  \u0022data\u0022: \u0022[NbConvertApp] Executing notebook with kernel: python3\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 3.8589048470003036\n},{\n  \u0022data\u0022: \u0022[NbConvertApp] Support files will be in __results___files/\\n[NbConvertApp] Making directory __results___files\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 31.209412160000284\n},{\n  \u0022data\u0022: \u0022[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n[NbConvertApp] Making directory __results___files\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 31.212266062999333\n},{\n  \u0022data\u0022: \u0022[NbConvertApp] Writing 336707 bytes to __results__.html\\n\u0022,\n  \u0022stream_name\u0022: \u0022stderr\u0022,\n  \u0022time\u0022: 31.21469997999884\n}]","outputFiles":[],"outputFilesCropped":false,"ouputFilesOwnerInfo":{"databundleVersionId":0,"dataset":null,"competition":null,"kernel":{"kernelId":2584329,"kernelVersionId":9653374,"dataviewToken":"eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..Q2PcS0C00m4s9zTjcfcPbA.EL-HnuDhkotHtFKfguNq-u6Da2oOVUIEJh57P_J32dI50qFCa2mpT4l1z-x2poTtpojyugrcAVFSadTCFa5NdBuuL7G47QkzxlJhO9TSYfK-QX7V8IS_32jyV_yVyRnaUlXdtRT8MoFrl3_swmMzJZjev1GhlJSAiRpy84tSj6ec3lf6lOy3knsN6hANJC7ryjDJ1YmULmmMCJXe1aqfgg4DmoxrQVmMbXReCFJ9gnH4Oog3oI8zCoQuF35jCWhIOfn3VP8uh7shXh6g5Km_Lun8QZh9HaKdYR5GUZvFp3YxU5Oour1GfcdXZ-G1h-s7oqN0bb7f1ds7Yl-Cc4NEJKslLImp4X-ey-1hzLYYd7yN3N-cudX8XM4_qVrppoPTalklHuqJuFZompq0orFV7hm6DN-ijCqawF8U1ys3DLe3SMf9r2MZOs8YZYjrR4IZ29t7kCLJonY9AeHoUuCX1nz4mNxqKt8WgVQH2ecGOvw.eJ8K172Rji1gp6B8icITYw","scope":"naumov1889/rain-in-australia-binary-classification"},"previewsDisabled":false},"pageMessages":[],"dataSources":[{"sourceType":"DatasetVersion","sourceId":198179,"databundleVersionId":null,"mountSlug":""}],"versions":[{"id":9653374,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-17T22:38:23.523Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":100,"linesInsertedFromPrevious":48,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:73bf8bed066338773b5cc6af6e4d3e44e96d4cc708e42394734ecde05f956f61","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":31.8383898569991,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9653374","versionNumber":6,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9475532,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-12T13:19:24.573Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":244,"linesInsertedFromPrevious":189,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":29.1919048919954,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9475532","versionNumber":5,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9445423,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-11T11:19:37.15Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":15,"linesInsertedFromPrevious":82,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":137,"failureMessage":"The kernel was killed due to a requested cancel.","isValidStatus":true,"runTimeSeconds":2.13223827899947,"succeeded":false,"timeoutExceeded":false,"usedAllSpace":false},"status":"cancelAcknowledged","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9445423","versionNumber":4,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9390122,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-09T19:44:45.253Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":31,"linesInsertedFromPrevious":238,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":16.3947211510022,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9390122","versionNumber":3,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9342473,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-08T14:53:30.137Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":12,"linesInsertedFromPrevious":13,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":9.71348170700367,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9342473","versionNumber":2,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"},{"id":9341575,"kernelVersionId":null,"isForkParent":false,"isNotebook":true,"languageName":"Python","lastRunTime":"2019-01-08T14:05:16.497Z","linesChangedFromPrevious":0,"linesDeletedFromPrevious":0,"linesInsertedFromPrevious":113,"outputFilesTotalSizeBytes":0,"runInfo":{"dockerfileUrl":"https://github.com/Kaggle/docker-python/blob/master/Dockerfile","dockerHubUrl":"https://registry.hub.docker.com/u/kaggle/python/","dockerImageId":"sha256:bc170abfa8f6af1567c0d75ab529d585d9657d63c716151d297514dd00d2369f","dockerImageName":"gcr.io/kaggle-images/python","exitCode":0,"failureMessage":"","isValidStatus":true,"runTimeSeconds":9.74840660899645,"succeeded":true,"timeoutExceeded":false,"usedAllSpace":false},"status":"complete","title":"Rain in Australia. Binary classification","url":"/naumov1889/rain-in-australia-binary-classification?scriptVersionId=9341575","versionNumber":1,"hasVersionNumber":true,"isRedacted":false,"versionAuthor":null,"versionType":"batch"}],"categories":{"type":"notebook","tags":[]},"submitToCompetitionInfo":null,"downloadAllFilesUrl":"/kernels/svzip/9653374","submission":null,"menuLinks":[{"href":"/naumov1889/rain-in-australia-binary-classification/notebook","text":"Notebook","showOnMobile":true,"title":"Notebook","tab":"notebook","count":null,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/code","text":"Code","showOnMobile":true,"title":"Code","tab":"code","count":null,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/data","text":"Input","showOnMobile":true,"title":"Input","tab":"data","count":1,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/execution","text":"Execution Info","showOnMobile":false,"title":"Execution Info","tab":"execution","count":null,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/log","text":"Log","showOnMobile":false,"title":"Log","tab":"log","count":null,"showZeroCountExplicitly":false,"reportEventCategory":null,"reportEventType":null},{"href":"/naumov1889/rain-in-australia-binary-classification/comments","text":"Comments","showOnMobile":true,"title":"Comments","tab":"comments","count":3,"showZeroCountExplicitly":true,"reportEventCategory":null,"reportEventType":null}],"rightMenuLinks":[],"callToAction":{"href":"/kernels/fork-version/9653374","text":"Fork Notebook","showOnMobile":true,"title":"Fork Notebook","tab":null,"count":null,"showZeroCountExplicitly":false,"reportEventCategory":"kernels","reportEventType":"anonymousKernelForkCreation"},"voteButton":{"totalVotes":4,"medalVotes":1,"hasAlreadyVotedUp":false,"hasAlreadyVotedDown":false,"canUpvote":true,"canDownvote":false,"voteUpUrl":"/kernels/vote?id=2584329","voteDownUrl":null,"voters":[{"avatarThumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2008664-gp.jpg","displayName":"Charlie","profileUrl":"/charliess","tier":"Novice","tierInt":0,"userId":2008664,"userName":"charliess"},{"avatarThumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/2052128-kg.jpg","displayName":"Maksim Naumov","profileUrl":"/naumov1889","tier":"Contributor","tierInt":1,"userId":2052128,"userName":"naumov1889"},{"avatarThumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/default-thumb.png","displayName":"Jinno123","profileUrl":"/jinno123","tier":"Novice","tierInt":0,"userId":4437630,"userName":"jinno123"},{"avatarThumbnailUrl":"https://storage.googleapis.com/kaggle-avatars/thumbnails/default-thumb.png","displayName":"monojit saha","profileUrl":"/monojitsaha333","tier":"Novice","tierInt":0,"userId":4517130,"userName":"monojitsaha333"}],"currentUserInfo":null,"showVoters":true,"alwaysShowVoters":true},"parentDataSource":null,"parentName":"Rain in Australia","parentUrl":"/jsphyg/weather-dataset-rattle-package","thumbnailImageUrl":"https://storage.googleapis.com/kaggle-datasets-images/6012/8892/4bdfb1ab3032b5fe0681468034fcaff0/dataset-thumbnail.jpg?t=2018-09-11-10-30-08","canWrite":false,"canAdminister":false,"currentUserForkParentSessionId":null,"currentUserHasForked":false,"forkParentIsRedacted":false,"forkDiffLinesChanged":0,"forkDiffLinesDeleted":0,"forkDiffLinesInserted":0,"forkDiffUrl":null,"forkParentAuthorDisplayName":null,"forkParentAuthorUrl":null,"forkParentTitle":null,"forkParentUrl":null,"canSeeInnerTableOfContents":true,"simplifiedViewer":false,"kernelOutputDataset":null,"disableComments":false,"taskSubmissionInfo":null});performance && performance.mark && performance.mark("KernelViewer.componentCouldBootstrap");</script>

<form action="/naumov1889/rain-in-australia-binary-classification" id="__AjaxAntiForgeryForm" method="post"><input name="X-XSRF-TOKEN" type="hidden" value="CfDJ8LdUzqlsSWBPr4Ce3rb9VL9gPRSPzeN2sYbcWvman05_SB5v4pieLGinvB7WWnznF2XKnkWEyGYmNx_mjISaZJosRr7DkbsXk39ROAc_xU_21q8CGMkxNaPoKPS14WJMO05LXN21lC9mqNSxWAIoYH8"></form>
<script nonce="" type="text/x-mathjax-config;executed=true">
    MathJax.Hub.Config({
    "HTML-CSS": {
    preferredFont: "TeX",
    availableFonts: ["STIX", "TeX"],
    linebreaks: {
    automatic: true
    },
    EqnChunk: (MathJax.Hub.Browser.isMobile ? 10 : 50)
    },
    tex2jax: {
    inlineMath: [["\\(", "\\)"], ["\\\\(", "\\\\)"]],
    displayMath: [["$$", "$$"], ["\\[", "\\]"]],
    processEscapes: true,
    ignoreClass: "tex2jax_ignore|dno"
    },
    TeX: {
    noUndefined: {
    attributes: {
    mathcolor: "red",
    mathbackground: "#FFEEEE",
    mathsize: "90%"
    }
    }
    },
    Macros: {
    href: "{}"
    },
    skipStartupTypeset: true,
    messageStyle: "none"
    });
</script>
<script nonce="" type="text/javascript" async="" crossorigin="anonymous" src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/MathJax.js"></script>


</div>




    </main>


<script src="Rain%20in%20Australia.%20Binary%20classification%20Kaggle_files/loader.js" async=""></script><div class="ReactModalPortal"></div></body></html>